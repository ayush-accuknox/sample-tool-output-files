{
    "results": [
        {
            "type": "kics",
            "id": "A6TwQ3uRiJ7MElTtx86R86lkAvE=",
            "similarityId": "2c232c4a883f24924580c46f2a5e2ea7b98ca70d99d50b74e91cc42f04209465",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:27Z",
            "firstFoundAt": "2024-11-26T15:55:27Z",
            "foundAt": "2024-11-26T15:55:27Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "As a best practice, ensure that is made the correct use of namespaces to adequately administer your resources. Kubernetes Authorization plugins can also be used to create policies that segregate user access to namespaces.",
            "data": {
                "queryId": "e84eaf4d-2f45-47b2-abe8-e581b06deb66",
                "queryName": "Ensure Administrative Boundaries Between Resources",
                "group": "Access Control [Taken from category]",
                "queryUrl": "Ensure Administrative Boundaries Between Resources [Taken from query_name]",
                "queryId": "e84eaf4d-2f45-47b2-abe8-e581b06deb66 [Taken from query_id]",
                "fileName": "/examples/awsconfig.yaml",
                "line": 14,
                "platform": "Kubernetes",
                "issueType": "IncorrectValue",
                "expectedValue": "ensure that these namespaces are the ones you need and are adequately administered as per your requirements.",
                "value": "namespaces in use: default, kube-system"
            },
            "comments": {},
            "vulnerabilityDetails": {}
        },
        {
            "type": "kics",
            "id": "cmfodjuaEdCSV5re8+ANJPE6MZU=",
            "similarityId": "eb0774b5e67aaf6b7bd634dae0f13c46b13e88eb1754802b2b6d8ed8c89a8d6e",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:27Z",
            "firstFoundAt": "2024-11-26T15:55:27Z",
            "foundAt": "2024-11-26T15:55:27Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Kubernetes External Secret Storage and Management System usage should be considered if you have more complex secret management needs, rather than using Kubernetes Secrets directly. Additionally, ensure that access to secrets is carefully limited",
            "data": {
                "queryId": "b9c83569-459b-4110-8f79-6305aa33cb37",
                "queryName": "Using Kubernetes Native Secret Management",
                "group": "Secret Management [Taken from category]",
                "queryUrl": "Using Kubernetes Native Secret Management [Taken from query_name]",
                "queryId": "b9c83569-459b-4110-8f79-6305aa33cb37 [Taken from query_id]",
                "fileName": "/secret.yaml",
                "line": 4,
                "platform": "Kubernetes",
                "issueType": "MissingAttribute",
                "expectedValue": "External secret storage should be used",
                "value": "External secret storage is not in use"
            },
            "comments": {},
            "vulnerabilityDetails": {}
        },
        {
            "type": "containers",
            "id": "CVE-2022-3522",
            "similarityId": "CVE-2022-3522",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2022-3522",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2022-3522",
            "similarityId": "CVE-2022-3522",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2022-3522",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2022-48628",
            "similarityId": "CVE-2022-48628",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: drop messages from MDS when unmounting\n\nWhen unmounting all the dirty buffers will be flushed and after\nthe last osd request is finished the last reference of the i_count\nwill be released. Then it will flush the dirty cap/snap to MDSs,\nand the unmounting won't wait the possible acks, which will ihold\nthe inodes when updating the metadata locally but makes no sense\nany more, of this. This will make the evict_inodes() to skip these\ninodes.\n\nIf encrypt is enabled the kernel generate a warning when removing\nthe encrypt keys when the skipped inodes still hold the keyring:\n\nWARNING: CPU: 4 PID: 168846 at fs/crypto/keyring.c:242 fscrypt_destroy_keyring+0x7e/0xd0\nCPU: 4 PID: 168846 Comm: umount Tainted: G S  6.1.0-rc5-ceph-g72ead199864c #1\nHardware name: Supermicro SYS-5018R-WR/X10SRW-F, BIOS 2.0 12/17/2015\nRIP: 0010:fscrypt_destroy_keyring+0x7e/0xd0\nRSP: 0018:ffffc9000b277e28 EFLAGS: 00010202\nRAX: 0000000000000002 RBX: ffff88810d52ac00 RCX: ffff88810b56aa00\nRDX: 0000000080000000 RSI: ffffffff822f3a09 RDI: ffff888108f59000\nRBP: ffff8881d394fb88 R08: 0000000000000028 R09: 0000000000000000\nR10: 0000000000000001 R11: 11ff4fe6834fcd91 R12: ffff8881d394fc40\nR13: ffff888108f59000 R14: ffff8881d394f800 R15: 0000000000000000\nFS:  00007fd83f6f1080(0000) GS:ffff88885fd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f918d417000 CR3: 000000017f89a005 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\ngeneric_shutdown_super+0x47/0x120\nkill_anon_super+0x14/0x30\nceph_kill_sb+0x36/0x90 [ceph]\ndeactivate_locked_super+0x29/0x60\ncleanup_mnt+0xb8/0x140\ntask_work_run+0x67/0xb0\nexit_to_user_mode_prepare+0x23d/0x240\nsyscall_exit_to_user_mode+0x25/0x60\ndo_syscall_64+0x40/0x80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7fd83dc39e9b\n\nLater the kernel will crash when iput() the inodes and dereferencing\nthe \"sb-\u003es_master_keys\", which has been released by the\ngeneric_shutdown_super().",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2022-48628",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2022-48628",
            "similarityId": "CVE-2022-48628",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: drop messages from MDS when unmounting\n\nWhen unmounting all the dirty buffers will be flushed and after\nthe last osd request is finished the last reference of the i_count\nwill be released. Then it will flush the dirty cap/snap to MDSs,\nand the unmounting won't wait the possible acks, which will ihold\nthe inodes when updating the metadata locally but makes no sense\nany more, of this. This will make the evict_inodes() to skip these\ninodes.\n\nIf encrypt is enabled the kernel generate a warning when removing\nthe encrypt keys when the skipped inodes still hold the keyring:\n\nWARNING: CPU: 4 PID: 168846 at fs/crypto/keyring.c:242 fscrypt_destroy_keyring+0x7e/0xd0\nCPU: 4 PID: 168846 Comm: umount Tainted: G S  6.1.0-rc5-ceph-g72ead199864c #1\nHardware name: Supermicro SYS-5018R-WR/X10SRW-F, BIOS 2.0 12/17/2015\nRIP: 0010:fscrypt_destroy_keyring+0x7e/0xd0\nRSP: 0018:ffffc9000b277e28 EFLAGS: 00010202\nRAX: 0000000000000002 RBX: ffff88810d52ac00 RCX: ffff88810b56aa00\nRDX: 0000000080000000 RSI: ffffffff822f3a09 RDI: ffff888108f59000\nRBP: ffff8881d394fb88 R08: 0000000000000028 R09: 0000000000000000\nR10: 0000000000000001 R11: 11ff4fe6834fcd91 R12: ffff8881d394fc40\nR13: ffff888108f59000 R14: ffff8881d394f800 R15: 0000000000000000\nFS:  00007fd83f6f1080(0000) GS:ffff88885fd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f918d417000 CR3: 000000017f89a005 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\ngeneric_shutdown_super+0x47/0x120\nkill_anon_super+0x14/0x30\nceph_kill_sb+0x36/0x90 [ceph]\ndeactivate_locked_super+0x29/0x60\ncleanup_mnt+0xb8/0x140\ntask_work_run+0x67/0xb0\nexit_to_user_mode_prepare+0x23d/0x240\nsyscall_exit_to_user_mode+0x25/0x60\ndo_syscall_64+0x40/0x80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7fd83dc39e9b\n\nLater the kernel will crash when iput() the inodes and dereferencing\nthe \"sb-\u003es_master_keys\", which has been released by the\ngeneric_shutdown_super().",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2022-48628",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-34255",
            "similarityId": "CVE-2023-34255",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2023-2124. Reason: This candidate is a duplicate of CVE-2023-2124. Notes: All CVE users should reference CVE-2023-2124 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-34255",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-34255",
            "similarityId": "CVE-2023-34255",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2023-2124. Reason: This candidate is a duplicate of CVE-2023-2124. Notes: All CVE users should reference CVE-2023-2124 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-34255",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-39804",
            "similarityId": "CVE-2023-39804",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
            "data": {
                "packageName": "tar",
                "packageVersion": "1.34+dfsg-1.2",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 6.2,
                "cveName": "CVE-2023-39804",
                "cweId": "",
                "cvss": {
                    "scope": "UNCHANGED",
                    "score": "6.2",
                    "severity": "Medium",
                    "attack_vector": "LOCAL",
                    "integrity_impact": "NONE",
                    "user_interaction": "NONE",
                    "attack_complexity": "LOW",
                    "availability_impact": "HIGH",
                    "privileges_required": "NONE",
                    "confidentiality_impact": "NONE"
                }
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-4128",
            "similarityId": "CVE-2023-4128",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: ** REJECT ** DO NOT USE THIS CVE RECORD. ConsultIDs: CVE-2023-4206, CVE-2023-4207, CVE-2023-4208.  Reason: This record is a duplicate of CVE-2023-4206, CVE-2023-4207, CVE-2023-4208. Notes: All CVE users should reference CVE-2023-4206, CVE-2023-4207, CVE-2023-4208 instead of this record. All references and descriptions in this record have been removed to prevent accidental usage.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-4128",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-4128",
            "similarityId": "CVE-2023-4128",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: ** REJECT ** DO NOT USE THIS CVE RECORD. ConsultIDs: CVE-2023-4206, CVE-2023-4207, CVE-2023-4208.  Reason: This record is a duplicate of CVE-2023-4206, CVE-2023-4207, CVE-2023-4208. Notes: All CVE users should reference CVE-2023-4206, CVE-2023-4207, CVE-2023-4208 instead of this record. All references and descriptions in this record have been removed to prevent accidental usage.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-4128",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-4610",
            "similarityId": "CVE-2023-4610",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: The SRCU code was added in upstream kernel v6.4-rc1 and removed before v6.4. This bug only existed in development kernels. Please see https://lore.kernel.org/all/ZTKVfoQZplpB8rki@casper.infradead.org and https://bugzilla.suse.com/show_bug.cgi?id=1215932 for more information.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-4610",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-4610",
            "similarityId": "CVE-2023-4610",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "Rejected reason: The SRCU code was added in upstream kernel v6.4-rc1 and removed before v6.4. This bug only existed in development kernels. Please see https://lore.kernel.org/all/ZTKVfoQZplpB8rki@casper.infradead.org and https://bugzilla.suse.com/show_bug.cgi?id=1215932 for more information.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-4610",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52442",
            "similarityId": "CVE-2023-52442",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: validate session id and tree id in compound request\n\n`smb2_get_msg()` in smb2_get_ksmbd_tcon() and smb2_check_user_session()\nwill always return the first request smb2 header in a compound request.\nif `SMB2_TREE_CONNECT_HE` is the first command in compound request, will\nreturn 0, i.e. The tree id check is skipped.\nThis patch use ksmbd_req_buf_next() to get current command in compound.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52442",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52442",
            "similarityId": "CVE-2023-52442",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: validate session id and tree id in compound request\n\n`smb2_get_msg()` in smb2_get_ksmbd_tcon() and smb2_check_user_session()\nwill always return the first request smb2 header in a compound request.\nif `SMB2_TREE_CONNECT_HE` is the first command in compound request, will\nreturn 0, i.e. The tree id check is skipped.\nThis patch use ksmbd_req_buf_next() to get current command in compound.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52442",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52475",
            "similarityId": "CVE-2023-52475",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: powermate - fix use-after-free in powermate_config_complete\n\nsyzbot has found a use-after-free bug [1] in the powermate driver. This\nhappens when the device is disconnected, which leads to a memory free from\nthe powermate_device struct.  When an asynchronous control message\ncompletes after the kfree and its callback is invoked, the lock does not\nexist anymore and hence the bug.\n\nUse usb_kill_urb() on pm-\u003econfig to cancel any in-progress requests upon\ndevice disconnection.\n\n[1] https://syzkaller.appspot.com/bug?extid=0434ac83f907a1dbdd1e",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52475",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52475",
            "similarityId": "CVE-2023-52475",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: powermate - fix use-after-free in powermate_config_complete\n\nsyzbot has found a use-after-free bug [1] in the powermate driver. This\nhappens when the device is disconnected, which leads to a memory free from\nthe powermate_device struct.  When an asynchronous control message\ncompletes after the kfree and its callback is invoked, the lock does not\nexist anymore and hence the bug.\n\nUse usb_kill_urb() on pm-\u003econfig to cancel any in-progress requests upon\ndevice disconnection.\n\n[1] https://syzkaller.appspot.com/bug?extid=0434ac83f907a1dbdd1e",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52475",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52476",
            "similarityId": "CVE-2023-52476",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/lbr: Filter vsyscall addresses\n\nWe found that a panic can occur when a vsyscall is made while LBR sampling\nis active. If the vsyscall is interrupted (NMI) for perf sampling, this\ncall sequence can occur (most recent at top):\n\n    __insn_get_emulate_prefix()\n    insn_get_emulate_prefix()\n    insn_get_prefixes()\n    insn_get_opcode()\n    decode_branch_type()\n    get_branch_type()\n    intel_pmu_lbr_filter()\n    intel_pmu_handle_irq()\n    perf_event_nmi_handler()\n\nWithin __insn_get_emulate_prefix() at frame 0, a macro is called:\n\n    peek_nbyte_next(insn_byte_t, insn, i)\n\nWithin this macro, this dereference occurs:\n\n    (insn)-\u003enext_byte\n\nInspecting registers at this point, the value of the next_byte field is the\naddress of the vsyscall made, for example the location of the vsyscall\nversion of gettimeofday() at 0xffffffffff600000. The access to an address\nin the vsyscall region will trigger an oops due to an unhandled page fault.\n\nTo fix the bug, filtering for vsyscalls can be done when\ndetermining the branch type. This patch will return\na \"none\" branch if a kernel address if found to lie in the\nvsyscall region.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52476",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52476",
            "similarityId": "CVE-2023-52476",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/lbr: Filter vsyscall addresses\n\nWe found that a panic can occur when a vsyscall is made while LBR sampling\nis active. If the vsyscall is interrupted (NMI) for perf sampling, this\ncall sequence can occur (most recent at top):\n\n    __insn_get_emulate_prefix()\n    insn_get_emulate_prefix()\n    insn_get_prefixes()\n    insn_get_opcode()\n    decode_branch_type()\n    get_branch_type()\n    intel_pmu_lbr_filter()\n    intel_pmu_handle_irq()\n    perf_event_nmi_handler()\n\nWithin __insn_get_emulate_prefix() at frame 0, a macro is called:\n\n    peek_nbyte_next(insn_byte_t, insn, i)\n\nWithin this macro, this dereference occurs:\n\n    (insn)-\u003enext_byte\n\nInspecting registers at this point, the value of the next_byte field is the\naddress of the vsyscall made, for example the location of the vsyscall\nversion of gettimeofday() at 0xffffffffff600000. The access to an address\nin the vsyscall region will trigger an oops due to an unhandled page fault.\n\nTo fix the bug, filtering for vsyscalls can be done when\ndetermining the branch type. This patch will return\na \"none\" branch if a kernel address if found to lie in the\nvsyscall region.",
            "data": {
                "packageName": "linux",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52476",
                "cweId": "",
                "cvss": null
            }
        },
        {
            "type": "containers",
            "id": "CVE-2023-52477",
            "similarityId": "CVE-2023-52477",
            "status": "NEW",
            "state": "TO_VERIFY",
            "severity": "INFO",
            "confidenceLevel": 0,
            "created": "2024-11-26T15:55:36Z",
            "firstFoundAt": "2024-11-26T15:55:23Z",
            "foundAt": "2024-11-26T15:55:36Z",
            "firstScanId": "579d2b2b-7794-4f6d-8119-a4b8cf2b48d3",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: hub: Guard against accesses to uninitialized BOS descriptors\n\nMany functions in drivers/usb/core/hub.c and drivers/usb/core/hub.h\naccess fields inside udev-\u003ebos without checking if it was allocated and\ninitialized. If usb_get_bos_descriptor() fails for whatever\nreason, udev-\u003ebos will be NULL and those accesses will result in a\ncrash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000018\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 5 PID: 17818 Comm: kworker/5:1 Tainted: G W 5.15.108-18910-gab0e1cb584e1 #1 \u003cHASH:1f9e 1\u003e\nHardware name: Google Kindred/Kindred, BIOS Google_Kindred.12672.413.0 02/03/2021\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:hub_port_reset+0x193/0x788\nCode: 89 f7 e8 20 f7 15 00 48 8b 43 08 80 b8 96 03 00 00 03 75 36 0f b7 88 92 03 00 00 81 f9 10 03 00 00 72 27 48 8b 80 a8 03 00 00 \u003c48\u003e 83 78 18 00 74 19 48 89 df 48 8b 75 b0 ba 02 00 00 00 4c 89 e9\nRSP: 0018:ffffab740c53fcf8 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffffa1bc5f678000 RCX: 0000000000000310\nRDX: fffffffffffffdff RSI: 0000000000000286 RDI: ffffa1be9655b840\nRBP: ffffab740c53fd70 R08: 00001b7d5edaa20c R09: ffffffffb005e060\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: ffffab740c53fd3e R14: 0000000000000032 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffffa1be96540000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000018 CR3: 000000022e80c005 CR4: 00000000003706e0\nCall Trace:\nhub_event+0x73f/0x156e\n? hub_activate+0x5b7/0x68f\nprocess_one_work+0x1a2/0x487\nworker_thread+0x11a/0x288\nkthread+0x13a/0x152\n? process_one_work+0x487/0x487\n? kthread_associate_blkcg+0x70/0x70\nret_from_fork+0x1f/0x30\n\nFall back to a default behavior if the BOS descriptor isn't accessible\nand skip all the functionalities that depend on it: LPM support checks,\nSuper Speed capabilitiy checks, U1/U2 states setup.",
            "data": {
                "packageName": "linux-libc-dev",
                "packageVersion": "6.1.38-4",
                "imageName": "library/golang",
                "imageTag": "1.19",
                "imageFilePath": "Dockerfile",
                "imageOrigin": "Dockerfile"
            },
            "comments": {
                "comments": ""
            },
            "vulnerabilityDetails": {
                "cvssScore": 0,
                "cveName": "CVE-2023-52477",
                "cweId": "",
                "cvss": null
            }
        }
    ],
    "totalCount": 4303
}