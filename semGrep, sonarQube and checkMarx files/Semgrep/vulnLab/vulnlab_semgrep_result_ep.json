{"errors": [{"code": 2, "level": "warn", "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on app/lab/sql-injection/find-password/jquery.js:\n ", "path": "app/lab/sql-injection/find-password/jquery.js", "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection", "type": "Timeout"}, {"code": 2, "level": "warn", "message": "Timeout when running javascript.express.security.cors-misconfiguration.cors-misconfiguration on app/lab/sql-injection/find-password/jquery.js:\n ", "path": "app/lab/sql-injection/find-password/jquery.js", "rule_id": "javascript.express.security.cors-misconfiguration.cors-misconfiguration", "type": "Timeout"}, {"code": 2, "level": "warn", "message": "Timeout when running javascript.express.security.x-frame-options-misconfiguration.x-frame-options-misconfiguration on app/lab/sql-injection/find-password/jquery.js:\n ", "path": "app/lab/sql-injection/find-password/jquery.js", "rule_id": "javascript.express.security.x-frame-options-misconfiguration.x-frame-options-misconfiguration", "type": "Timeout"}, {"code": 3, "level": "warn", "message": "Syntax error at line app/lab/xss/news/flaticon.html:2:\n `<html lang=\"en\">\n<head>\n    <title>Flaticon Webfont</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"flaticon.css\"/>\n    <meta charset=\"UTF-8\">\n    <style>\n        html, body, div, span, applet, object, iframe,\n        h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n        a, abbr, acronym, address, big, cite, code,\n        del, dfn, em, img, ins, kbd, q, s, samp,\n        small, strike, strong, sub, sup, tt, var,\n        b, u, i, center,\n        dl, dt, dd, ol, ul, li,\n        fieldset, form, label, legend,\n        table, caption, tbody, tfoot, thead, tr, th, td,\n        article, aside, canvas, details, embed,\n        figure, figcaption, footer, header, hgroup,\n        menu, nav, output, ruby, section, summary,\n        time, mark, audio, video {\n            margin: 0;\n            padding: 0;\n            border: 0;\n            font-size: 100%;\n            font: inherit;\n            vertical-align: baseline;\n        }\n\n        /* HTML5 display-role reset for older browsers */\n        article, aside, details, figcaption, figure,\n        footer, header, hgroup, menu, nav, section {\n            display: block;\n        }\n\n        body {\n            line-height: 1;\n        }\n\n        ol, ul {\n            list-style: none;\n        }\n\n        blockquote, q {\n            quotes: none;\n        }\n\n        blockquote:before, blockquote:after,\n        q:before, q:after {\n            content: '';\n            content: none;\n        }\n\n        table {\n            border-collapse: collapse;\n            border-spacing: 0;\n        }\n\n        body {\n            font-family: Helvetica, Arial, sans-serif;\n            font-size: 16px;\n            color: #5f7d95;\n        }\n\n        a {\n            color: #4AD295;\n            font-weight: bold;\n            text-decoration: none;\n        }\n\n        * {\n            -moz-box-sizing: border-box;\n            -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        [class^=\"flaticon-\"]:before, [class*=\" flaticon-\"]:before, [class^=\"flaticon-\"]:after, [class*=\" flaticon-\"]:after {\n            font-family: Flaticon;\n            font-size: 30px;\n            font-style: normal;\n            margin-left: 20px;\n            color: #333;\n        }\n\n        .wrapper {\n            max-width: 600px;\n            margin: auto;\n            padding: 0 1em;\n        }\n\n        .title {\n            margin-bottom: 24px;\n            text-transform: uppercase;\n            font-weight: bold;\n        }\n\n        header {\n            text-align: center;\n            padding: 24px;\n        }\n\n        header .logo {\n            width: 210px;\n            height: auto;\n            border: none;\n            display: inline-block;\n        }\n\n        header strong {\n            font-size: 28px;\n            font-weight: 500;\n            vertical-align: middle;\n        }\n\n        .demo {\n            margin: 2em auto;\n            line-height: 1.25em;\n        }\n\n        .demo ul li {\n            margin-bottom: 12px;\n        }\n\n        .demo ul li code {\n            background-color: #1D262D;\n            border-radius: 3px;\n            padding: 12px;\n            display: inline-block;\n            color: #fff;\n            font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;\n            font-weight: lighter;\n            margin-top: 12px;\n            font-size: 13px;\n            word-break: break-all;\n        }\n\n        .demo ul li code .red {\n            color: #EC3A3B;\n        }\n\n        .demo ul li code .green {\n            color: #4AD295;\n        }\n\n        .demo ul li code .yellow {\n            color: #FFEEB6;\n        }\n\n        .demo ul li code .blue {\n            color: #2C8CF4;\n        }\n\n        .demo ul li code .purple {\n            color: #4949E7;\n        }\n\n        .demo ul li code .dots {\n            margin-top: 0.5em;\n            display: block;\n        }\n\n        #glyphs {\n            border-bottom: 1px solid #E3E9ED;\n            padding: 2em 0;\n            text-align: center;\n        }\n\n        .glyph {\n            display: inline-block;\n            width: 9em;\n            margin: 1em;\n            text-align: center;\n            vertical-align: top;\n            background: #FFF;\n        }\n\n        .glyph .flaticon {\n            padding: 10px;\n            display: block;\n            font-family: \"Flaticon\";\n            font-size: 64px;\n            line-height: 1;\n        }\n\n        .glyph .flaticon:before {\n            font-size: 64px;\n            color: #5f7d95;\n            margin-left: 0;\n        }\n\n        .class-name {\n            font-size: 0.65em;\n            background-color: #E3E9ED;\n            color: #869FB2;\n            border-radius: 4px 4px 0 0;\n            padding: 0.5em;\n            font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;\n        }\n\n        .author-name {\n            font-size: 0.6em;\n            background-color: #EFF3F6;\n            border-top: 0;\n            border-radius: 0 0 4px 4px;\n            padding: 0.5em;\n        }\n\n        .author-name a {\n            color: #1D262D;\n        }\n\n        .class-name:last-child {\n            font-size: 10px;\n            color: #888;\n        }\n\n        .class-name:last-child a {\n            font-size: 10px;\n            color: #555;\n        }\n\n        .glyph > input {\n            display: block;\n            width: 100px;\n            margin: 5px auto;\n            text-align: center;\n            font-size: 12px;\n            cursor: text;\n        }\n\n        .glyph > input.icon-input {\n            font-family: \"Flaticon\";\n            font-size: 16px;\n            margin-bottom: 10px;\n        }\n\n        .attribution .title {\n            margin-top: 2em;\n        }\n\n        .attribution textarea {\n            background-color: #F8FAFB;\n            color: #1D262D;\n            padding: 1em;\n            border: none;\n            box-shadow: none;\n            border: 1px solid #E3E9ED;\n            border-radius: 4px;\n            resize: none;\n            width: 100%;\n            height: 150px;\n            font-size: 0.8em;\n            font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;\n            -webkit-appearance: none;\n        }\n\n        .attribution textarea:hover {\n            border-color: #CFD9E0;\n        }\n\n        .attribution textarea:focus {\n            border-color: #4AD295;\n        }\n\n        .iconsuse {\n            margin: 2em auto;\n            text-align: center;\n            max-width: 1200px;\n        }\n\n        .iconsuse:after {\n            content: '';\n            display: table;\n            clear: both;\n        }\n\n        .iconsuse .image {\n            float: left;\n            width: 25%;\n            padding: 0 1em;\n        }\n\n        .iconsuse .image p {\n            margin-bottom: 1em;\n        }\n\n        .iconsuse .image span {\n            display: block;\n            font-size: 0.65em;\n            background-color: #222;\n            color: #fff;\n            border-radius: 4px;\n            padding: 0.5em;\n            color: #FFFF99;\n            margin-top: 1em;\n            font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;\n        }\n\n        .flaticon:before {\n            color: #5f7d95;\n        }\n\n        #footer {\n            text-align: center;\n            background-color: #1D262D;\n            color: #869FB2;\n            padding: 12px;\n            font-size: 14px;\n        }\n\n        #footer a {\n            font-weight: normal;\n        }\n\n        @media (max-width: 960px) {\n            .iconsuse .image {\n                width: 50%;\n            }\n        }\n\n        .preview {\n            width: 100px;\n            display: inline-block;\n            margin: 10px;\n        }\n\n        .preview .inner {\n            display: inline-block;\n            width: 100%;\n            text-align: center;\n            background: #f5f5f5;\n            -webkit-border-radius: 3px 3px 0 0;\n            -moz-border-radius: 3px 3px 0 0;\n            border-radius: 3px 3px 0 0;\n        }\n\n        .preview .inner  {\n            line-height: 85px;\n            font-size: 40px;\n            color: #333;\n        }\n\n        .label {\n            display: inline-block;\n            width: 100%;\n            box-sizing: border-box;\n            padding: 5px;\n            font-size: 10px;\n            font-family: Monaco, monospace;\n            color: #666;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            background: #ddd;\n            -webkit-border-radius: 0 0 3px 3px;\n            -moz-border-radius: 0 0 3px 3px;\n            border-radius: 0 0 3px 3px;\n            color: #666;\n        }\n    </style>\n</head>\n<body>\n    <header>\n        <a href=\"https://www.flaticon.com/\" target=\"_blank\" class=\"logo\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 394.3 76.5\">\n                <path d=\"M156.6,69.4H145.3V7.1h11.3Z\" style=\"fill:#0e2a47\"/>\n                <path d=\"M206.2,69.4h-11V64.8a15.4,15.4,0,0,1-12.6,5.7c-11.6,0-20.3-9.5-20.3-22.1s8.8-22.1,20.3-22.1a15.4,15.4,0,0,1,12.6,5.8V27.5h11Zm-32.4-21c0,6.4,4.2,11.6,10.8,11.6s10.8-4.9,10.8-11.6-4.4-11.6-10.8-11.6S173.9,42,173.9,48.4Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M262.5,13.7a7.2,7.2,0,0,1-14.4,0,7.2,7.2,0,1,1,14.4,0ZM261,69.4H249.6v-42H261Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path id=\"_Trazado_\" data-name=\"&lt;Trazado&gt;\"\n                      d=\"M139.6,17.8a16.6,16.6,0,0,0-8-1.4c-3.2.4-4.9,2-4.9,5.9v5.1h13V37.5h-13v32H115.4v-32h-7.8v-10h7.8V22.2c0-9.9,5.2-16.3,15-16.3a23.4,23.4,0,0,1,9.3,1.8Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M235.1,60c-3.5,0-6.3-1.9-6.3-7.1V37.5H244v-10H228.8V15H217.5V27.5h-5.7v10h5.7V53.7c0,10.9,5.3,16.8,15.7,16.8A22.9,22.9,0,0,0,244,68l-4.3-9.1A12.3,12.3,0,0,1,235.1,60Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M348.9,48.4c0,12.6-9.7,22.1-22.7,22.1s-22.7-9.4-22.7-22.1,9.6-22.1,22.7-22.1S348.9,35.8,348.9,48.4Zm-33.9,0c0,6.8,4.8,11.6,11.1,11.6s11.2-4.8,11.2-11.6-4.8-11.6-11.2-11.6S315.1,41.6,315.1,48.4Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M394.3,42.7V69.4H382.9V46.3c0-6.1-3-9.4-8.2-9.4s-8.9,3.2-8.9,9.5v23H354.6v-42h11v4.9c3-4.5,7.6-6.1,12.3-6.1C387.5,26.3,394.3,33,394.3,42.7Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M298,55.7h0a12.4,12.4,0,0,1-8.2,4.2h-.9l-1.8-.2a10,10,0,0,1-7.4-5.6,13.2,13.2,0,0,1-1.2-5.8,13,13,0,0,1,1.3-5.9,10.1,10.1,0,0,1,7.5-5.5h2.4a11.7,11.7,0,0,1,8.3,4.2l5.5-9.6a19.9,19.9,0,0,0-8.1-4.3,23.4,23.4,0,0,0-6.1-.8,25.2,25.2,0,0,0-7.5,1.1,20.9,20.9,0,0,0-8,4.6,21.9,21.9,0,0,0-6.8,16.4,21.9,21.9,0,0,0,6.7,16.3,20.9,20.9,0,0,0,8,4.6,25.2,25.2,0,0,0,7.7,1.2,23.6,23.6,0,0,0,6.2-.8,20,20,0,0,0,8.1-4.4Z\"\n                      style=\"fill:#0e2a47\"/>\n                <path d=\"M46.3,26.5H26.9L20.8,16H52.4L61.6,0H9.4A9.3,9.3,0,0,0,1.3,4.7a9.3,9.3,0,0,0,0,9.4L34.6,71.8a9.4,9.4,0,0,0,16.2,0l1.1-1.9L36.6,43.3Z\"\n                      style=\"fill:#4ad295\"/>\n                <path d=\"M84.2,4.7A9.3,9.3,0,0,0,76.1,0H73.8l-25,43.3,9.2,16L84.2,14A9.3,9.3,0,0,0,84.2,4.7Z\"\n                      style=\"fill:#4ad295\"/>\n            </svg>\n        </a>\n    </header>\n    <section class=\"demo wrapper\">\n\n        <p class=\"title\">Webfont Instructions</p>\n\n        <ul>\n            <li>\n                <span class=\"num\">1. </span>Copy the \"Fonts\" files and CSS files to your website CSS folder.\n            </li>\n            <li>\n                <span class=\"num\">2. </span>Add the CSS link to your website source code on header.\n                <code class=\"big\">\n                    &lt;<span class=\"red\">head</span>&gt;\n                    <br/><span class=\"dots\">...</span>\n                    <br/>&lt;<span class=\"red\">link</span> <span class=\"green\">rel</span>=<span\n                        class=\"yellow\">\"stylesheet\"</span> <span class=\"green\">type</span>=<span\n                        class=\"yellow\">\"text/css\"</span> <span class=\"green\">href</span>=<span class=\"yellow\">\"your_website_domain/css_root/flaticon.css\"</span>&gt;\n                    <br/><span class=\"dots\">...</span>\n                    <br/>&lt;/<span class=\"red\">head</span>&gt;\n                </code>\n            </li>\n\n            <li>\n                <p>\n                    <span class=\"num\">3. </span>Use the icon class on <code>\"<span class=\"blue\">display</span>:<span\n                        class=\"purple\"> inline</span>\"</code> elements:\n                    <br/>\n                    Use example: <code>&lt;<span class=\"red\">i</span> <span class=\"green\">class</span>=<span class=\"yellow\">&quot;flaticon-airplane49&quot;</span>&gt;&lt;/<span\n                        class=\"red\">i</span>&gt;</code> or <code>&lt;<span class=\"red\">span</span> <span\n                        class=\"green\">class</span>=<span class=\"yellow\">&quot;flaticon-airplane49&quot;</span>&gt;&lt;/<span\n                        class=\"red\">span</span>&gt;</code>\n            </li>\n        </ul>\n\n    </section>\n    <section id=\"glyphs\">\n            <div class=\"glyph\">\n                <i class=\"flaticon flaticon-up-arrow\"></i>\n                <div class=\"class-name\">.flaticon-up-arrow</div>\n                <div class=\"author-name\">Author: <a data-file=\"up-arrow\" href=\"https://www.flaticon.com/authors/pixel-perfect\">Pixel perfect</a> </div>\n            </div>\n\n            <div class=\"glyph\">\n                <i class=\"flaticon flaticon-down-arrow\"></i>\n                <div class=\"class-name\">.flaticon-down-arrow</div>\n                <div class=\"author-name\">Author: <a data-file=\"down-arrow\" href=\"https://www.flaticon.com/authors/pixel-perfect\">Pixel perfect</a> </div>\n            </div>\n\n    </section>\n\n    <section class=\"attribution wrapper\"   style=\"text-align:center;\">\n\n        <div class=\"title\">License and attribution:</div><div class=\"attrDiv\">Font generated by <a href=\"https://www.flaticon.com\">flaticon.com</a>. <div><p>Under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC</a>: <a data-file=\"down-arrow\" href=\"https://www.flaticon.com/authors/pixel-perfect\">Pixel perfect</a></p>  </div>\n        </div>\n        <div class=\"title\">Copy the Attribution License:</div>\n\n        <textarea onclick=\"this.focus();this.select();\">Font generated by &lt;a href=&quot;https://www.flaticon.com&quot;&gt;flaticon.com&lt;/a&gt;. <p>Under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC</a>: <a data-file=\"down-arrow\" href=\"https://www.flaticon.com/authors/pixel-perfect\">Pixel perfect</a></p> \n        </textarea>\n\n    </section>\n\n    <section class=\"iconsuse\">\n\n        <div class=\"title\">Examples:</div>\n            <div class=\"image\">\n                <p>\n                    <i class=\"flaticon flaticon-up-arrow\"></i>\n                    <span>&lt;i class=&quot;flaticon-up-arrow&quot;&gt;&lt;/i&gt;</span>\n                </p>\n            </div>\n            <div class=\"image` was unexpected", "path": "app/lab/xss/news/flaticon.html", "spans": [{"end": {"col": 30, "line": 459, "offset": 15222}, "file": "app/lab/xss/news/flaticon.html", "start": {"col": 1, "line": 2, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 30, "line": 459, "offset": 15222}, "path": "app/lab/xss/news/flaticon.html", "start": {"col": 1, "line": 2, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line app/lab/sql-injection/get-blind-error/deneme.html:13:\n `<?php echo $strings['title']; ?>` was unexpected", "path": "app/lab/sql-injection/get-blind-error/deneme.html", "spans": [{"end": {"col": 41, "line": 13, "offset": 32}, "file": "app/lab/sql-injection/get-blind-error/deneme.html", "start": {"col": 9, "line": 13, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 41, "line": 13, "offset": 32}, "path": "app/lab/sql-injection/get-blind-error/deneme.html", "start": {"col": 9, "line": 13, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": [".github/workflows/docker-image.yml", "Dockerfile", "LICENSE.md", "README.md", "app/.htaccess", "app/config/config.php", "app/footer.php", "app/functions.php", "app/head.php", "app/index.php", "app/lab/api-hacking/api-hacking1/all_wallpapers.php", "app/lab/api-hacking/api-hacking1/api/all_wallpapers.php", "app/lab/api-hacking/api-hacking1/api/backup_images/1_delete_me.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/1_rick-and-morty-macbook-2880-x-1800-g3s43t1cye39jx5s.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/1_rick-and-morty-sunglasses-pink-blue-wallpaper.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/1_wp4945601.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/2_1458290-The-Last-of-Us-2-Naughty-Dog-Sony-Playstation-4K.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/2_1491251-The-Last-of-Us-2-video-games-PlayStation-4-screen.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/3_544298.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/3_mr-robot-control-illusion-3t2s38ni80wrmasf.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/3_mr-robot-mask-f-society-artwork-4k-on-2880x1800.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/4_130672-lara-croft-tomb-raider-5k.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/4_b610a778f896dbcb966e0d6083db2460.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/4_tomb-raider-dark-sea-hd-lt4fxkxaz442tu1s.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/5_3105122.jpg", "app/lab/api-hacking/api-hacking1/api/backup_images/5_d027bacc775eea447f19eb18b352c024.jpeg", "app/lab/api-hacking/api-hacking1/api/backup_images/5_wp10244267.jpg", "app/lab/api-hacking/api-hacking1/api/delete_image.php", "app/lab/api-hacking/api-hacking1/api/get_images.php", "app/lab/api-hacking/api-hacking1/api/logout.php", "app/lab/api-hacking/api-hacking1/api/reset_images.php", "app/lab/api-hacking/api-hacking1/api/upload.php", "app/lab/api-hacking/api-hacking1/api/uploads/1_delete_me.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/1_rick-and-morty-macbook-2880-x-1800-g3s43t1cye39jx5s.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/1_rick-and-morty-sunglasses-pink-blue-wallpaper.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/1_wp4945601.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/2_1458290-The-Last-of-Us-2-Naughty-Dog-Sony-Playstation-4K.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/2_1491251-The-Last-of-Us-2-video-games-PlayStation-4-screen.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/3_544298.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/3_mr-robot-control-illusion-3t2s38ni80wrmasf.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/3_mr-robot-mask-f-society-artwork-4k-on-2880x1800.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/4_130672-lara-croft-tomb-raider-5k.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/4_b610a778f896dbcb966e0d6083db2460.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/4_tomb-raider-dark-sea-hd-lt4fxkxaz442tu1s.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/5_3105122.jpg", "app/lab/api-hacking/api-hacking1/api/uploads/5_d027bacc775eea447f19eb18b352c024.jpeg", "app/lab/api-hacking/api-hacking1/api/uploads/5_wp10244267.jpg", "app/lab/api-hacking/api-hacking1/api/users.json", "app/lab/api-hacking/api-hacking1/api/users.php", "app/lab/api-hacking/api-hacking1/dashboard.php", "app/lab/api-hacking/api-hacking1/en.ini", "app/lab/api-hacking/api-hacking1/fr.ini", "app/lab/api-hacking/api-hacking1/index.php", "app/lab/api-hacking/api-hacking1/tr.ini", "app/lab/broken-authentication/2FA/2fa.php", "app/lab/broken-authentication/2FA/admin.php", "app/lab/broken-authentication/2FA/en.ini", "app/lab/broken-authentication/2FA/fr.ini", "app/lab/broken-authentication/2FA/index.php", "app/lab/broken-authentication/2FA/tr.ini", "app/lab/broken-authentication/brute-force/ar.ini", "app/lab/broken-authentication/brute-force/brute.php", "app/lab/broken-authentication/brute-force/css/bootstrap.min.css", "app/lab/broken-authentication/brute-force/en.ini", "app/lab/broken-authentication/brute-force/fr.ini", "app/lab/broken-authentication/brute-force/index.php", "app/lab/broken-authentication/brute-force/tr.ini", "app/lab/broken-authentication/brute-force/users.db", "app/lab/broken-authentication/no-redirect/bootstrap.min.css", "app/lab/broken-authentication/no-redirect/en.ini", "app/lab/broken-authentication/no-redirect/fr.ini", "app/lab/broken-authentication/no-redirect/index.php", "app/lab/broken-authentication/no-redirect/login.php", "app/lab/broken-authentication/no-redirect/tr.ini", "app/lab/captcha-bypass/bypass/en.ini", "app/lab/captcha-bypass/bypass/fr.ini", "app/lab/captcha-bypass/bypass/index.php", "app/lab/captcha-bypass/bypass/tr.ini", "app/lab/captcha-bypass/bypass/view_messages.php", "app/lab/captcha-bypass/bypass1/captcha.png", "app/lab/captcha-bypass/bypass1/comment.db", "app/lab/captcha-bypass/bypass1/en.ini", "app/lab/captcha-bypass/bypass1/fr.ini", "app/lab/captcha-bypass/bypass1/index.php", "app/lab/captcha-bypass/bypass1/reset_table.php", "app/lab/captcha-bypass/bypass1/tr.ini", "app/lab/command-injection/.DS_Store", "app/lab/command-injection/blind-command-injection/.DS_Store", "app/lab/command-injection/blind-command-injection/blind.php", "app/lab/command-injection/blind-command-injection/bootstrap.min.css", "app/lab/command-injection/blind-command-injection/database.db", "app/lab/command-injection/blind-command-injection/en.ini", "app/lab/command-injection/blind-command-injection/fr.ini", "app/lab/command-injection/blind-command-injection/index.php", "app/lab/command-injection/blind-command-injection/tr.ini", "app/lab/command-injection/bootstrap.min.css", "app/lab/command-injection/ping-hard/.DS_Store", "app/lab/command-injection/ping-hard/ar.ini", "app/lab/command-injection/ping-hard/en.ini", "app/lab/command-injection/ping-hard/fr.ini", "app/lab/command-injection/ping-hard/index.php", "app/lab/command-injection/ping-hard/tr.ini", "app/lab/command-injection/ping-low/.DS_Store", "app/lab/command-injection/ping-low/ar.ini", "app/lab/command-injection/ping-low/en.ini", "app/lab/command-injection/ping-low/fr.ini", "app/lab/command-injection/ping-low/index.php", "app/lab/command-injection/ping-low/tr.ini", "app/lab/command-injection/ping-medium/ar.ini", "app/lab/command-injection/ping-medium/en.ini", "app/lab/command-injection/ping-medium/fr.ini", "app/lab/command-injection/ping-medium/index.php", "app/lab/command-injection/ping-medium/tr.ini", "app/lab/command-injection/stock-check/.DS_Store", "app/lab/command-injection/stock-check/ar.ini", "app/lab/command-injection/stock-check/en.ini", "app/lab/command-injection/stock-check/fr.ini", "app/lab/command-injection/stock-check/images/resim.jpg", "app/lab/command-injection/stock-check/images/resim2.jpg", "app/lab/command-injection/stock-check/images/resim3.jpg", "app/lab/command-injection/stock-check/index.php", "app/lab/command-injection/stock-check/stok.pl", "app/lab/command-injection/stock-check/tr.ini", "app/lab/csrf/changing-password/assets/css/bootstrap.min.css", "app/lab/csrf/changing-password/assets/css/chat.css", "app/lab/csrf/changing-password/assets/css/style.css", "app/lab/csrf/changing-password/assets/css/typing.css", "app/lab/csrf/changing-password/assets/images/chatbox-icon.png", "app/lab/csrf/changing-password/assets/js/Chat.js", "app/lab/csrf/changing-password/assets/js/app.js", "app/lab/csrf/changing-password/database.db", "app/lab/csrf/changing-password/en.ini", "app/lab/csrf/changing-password/fr.ini", "app/lab/csrf/changing-password/index.php", "app/lab/csrf/changing-password/login.php", "app/lab/csrf/changing-password/logout.php", "app/lab/csrf/changing-password/post.php", "app/lab/csrf/changing-password/reset.php", "app/lab/csrf/changing-password/tr.ini", "app/lab/csrf/follow/assets/css/bootstrap.min.css", "app/lab/csrf/follow/assets/css/chat.css", "app/lab/csrf/follow/assets/css/style.css", "app/lab/csrf/follow/assets/css/typing.css", "app/lab/csrf/follow/assets/images/chatbox-icon.png", "app/lab/csrf/follow/assets/js/Chat.js", "app/lab/csrf/follow/assets/js/app.js", "app/lab/csrf/follow/bootstrap.min.css", "app/lab/csrf/follow/database.db", "app/lab/csrf/follow/en.ini", "app/lab/csrf/follow/followers.php", "app/lab/csrf/follow/fr.ini", "app/lab/csrf/follow/index.php", "app/lab/csrf/follow/logout.php", "app/lab/csrf/follow/post.php", "app/lab/csrf/follow/reset.php", "app/lab/csrf/follow/tr.ini", "app/lab/csrf/money-transfer/assets/css/bootstrap.min.css", "app/lab/csrf/money-transfer/assets/css/chat.css", "app/lab/csrf/money-transfer/assets/css/style.css", "app/lab/csrf/money-transfer/assets/css/typing.css", "app/lab/csrf/money-transfer/assets/images/chatbox-icon.png", "app/lab/csrf/money-transfer/assets/js/Chat.js", "app/lab/csrf/money-transfer/assets/js/app.js", "app/lab/csrf/money-transfer/bootstrap.min.css", "app/lab/csrf/money-transfer/database.db", "app/lab/csrf/money-transfer/en.ini", "app/lab/csrf/money-transfer/fr.ini", "app/lab/csrf/money-transfer/index.php", "app/lab/csrf/money-transfer/logout.php", "app/lab/csrf/money-transfer/money.php", "app/lab/csrf/money-transfer/post.php", "app/lab/csrf/money-transfer/reset.php", "app/lab/csrf/money-transfer/tr.ini", "app/lab/file-inclusion/admin.php", "app/lab/file-inclusion/assets/css/bootstrap.css", "app/lab/file-inclusion/learn-the-capital-1/en.ini", "app/lab/file-inclusion/learn-the-capital-1/england.php", "app/lab/file-inclusion/learn-the-capital-1/fr.ini", "app/lab/file-inclusion/learn-the-capital-1/france.php", "app/lab/file-inclusion/learn-the-capital-1/germany.php", "app/lab/file-inclusion/learn-the-capital-1/index.php", "app/lab/file-inclusion/learn-the-capital-1/north_korea.php", "app/lab/file-inclusion/learn-the-capital-1/tr.ini", "app/lab/file-inclusion/learn-the-capital-1/turkey.php", "app/lab/file-inclusion/learn-the-capital-2/en.ini", "app/lab/file-inclusion/learn-the-capital-2/england.php", "app/lab/file-inclusion/learn-the-capital-2/fr.ini", "app/lab/file-inclusion/learn-the-capital-2/france.php", "app/lab/file-inclusion/learn-the-capital-2/germany.php", "app/lab/file-inclusion/learn-the-capital-2/index.php", "app/lab/file-inclusion/learn-the-capital-2/north_korea.php", "app/lab/file-inclusion/learn-the-capital-2/tr.ini", "app/lab/file-inclusion/learn-the-capital-2/turkey.php", "app/lab/file-inclusion/learn-the-capital-3/en.ini", "app/lab/file-inclusion/learn-the-capital-3/england.php", "app/lab/file-inclusion/learn-the-capital-3/fr.ini", "app/lab/file-inclusion/learn-the-capital-3/france.php", "app/lab/file-inclusion/learn-the-capital-3/germany.php", "app/lab/file-inclusion/learn-the-capital-3/index.php", "app/lab/file-inclusion/learn-the-capital-3/north_korea.php", "app/lab/file-inclusion/learn-the-capital-3/tr.ini", "app/lab/file-inclusion/learn-the-capital-3/turkey.php", "app/lab/file-upload/blacklist-1/bootstrap.min.css", "app/lab/file-upload/blacklist-1/delete.php", "app/lab/file-upload/blacklist-1/en.ini", "app/lab/file-upload/blacklist-1/fr.ini", "app/lab/file-upload/blacklist-1/index.php", "app/lab/file-upload/blacklist-1/tr.ini", "app/lab/file-upload/blacklist-2/bootstrap.min.css", "app/lab/file-upload/blacklist-2/delete.php", "app/lab/file-upload/blacklist-2/en.ini", "app/lab/file-upload/blacklist-2/fr.ini", "app/lab/file-upload/blacklist-2/index.php", "app/lab/file-upload/blacklist-2/tr.ini", "app/lab/file-upload/magic-header/bootstrap.min.css", "app/lab/file-upload/magic-header/delete.php", "app/lab/file-upload/magic-header/en.ini", "app/lab/file-upload/magic-header/fr.ini", "app/lab/file-upload/magic-header/index.php", "app/lab/file-upload/magic-header/tr.ini", "app/lab/file-upload/mime-type/bootstrap.min.css", "app/lab/file-upload/mime-type/delete.php", "app/lab/file-upload/mime-type/en.ini", "app/lab/file-upload/mime-type/fr.ini", "app/lab/file-upload/mime-type/index.php", "app/lab/file-upload/mime-type/tr.ini", "app/lab/file-upload/unrestricted/bootstrap.min.css", "app/lab/file-upload/unrestricted/delete.php", "app/lab/file-upload/unrestricted/en.ini", "app/lab/file-upload/unrestricted/fr.ini", "app/lab/file-upload/unrestricted/index.php", "app/lab/file-upload/unrestricted/tr.ini", "app/lab/idor/about/bootstrap.min.css", "app/lab/idor/about/database.db", "app/lab/idor/about/en.ini", "app/lab/idor/about/fr.ini", "app/lab/idor/about/index.php", "app/lab/idor/about/info/pp/ashtoncox.jpg", "app/lab/idor/about/info/pp/bradleygreer.jpg", "app/lab/idor/about/info/pp/cedrickelly.jpg", "app/lab/idor/about/info/pp/chardemarshall.jpg", "app/lab/idor/about/info/pp/garrettwinters.jpg", "app/lab/idor/about/info/pp/glorialittle.jpg", "app/lab/idor/about/info/pp/jacksonbradshaw.jpg", "app/lab/idor/about/info/pp/jenagaines.jpg", "app/lab/idor/about/info/pp/olivialiang.jpg", "app/lab/idor/about/info/pp/sergebaldwin.jpg", "app/lab/idor/about/profiles.php", "app/lab/idor/about/saveprofile.php", "app/lab/idor/about/tr.ini", "app/lab/idor/address-entry/bootstrap.min.css", "app/lab/idor/address-entry/database.db", "app/lab/idor/address-entry/en.ini", "app/lab/idor/address-entry/fr.ini", "app/lab/idor/address-entry/index.php", "app/lab/idor/address-entry/reset.php", "app/lab/idor/address-entry/tr.ini", "app/lab/idor/changing-password/bootstrap.min.css", "app/lab/idor/changing-password/database.db", "app/lab/idor/changing-password/en.ini", "app/lab/idor/changing-password/fr.ini", "app/lab/idor/changing-password/index.php", "app/lab/idor/changing-password/reset.php", "app/lab/idor/changing-password/tr.ini", "app/lab/idor/invoices/bootstrap.min.css", "app/lab/idor/invoices/database.db", "app/lab/idor/invoices/en.ini", "app/lab/idor/invoices/files/1488123e984e51410617a97acb514288.pdf", "app/lab/idor/invoices/files/2504436eb0b65562a4033d387fe6b595.pdf", "app/lab/idor/invoices/files/3b1957df534f887c8d00eed5e4f44b15.pdf", "app/lab/idor/invoices/files/659bb3884ae57d872238eb93721ca397.pdf", "app/lab/idor/invoices/files/8c50a83a90d479610490880fd384e183.pdf", "app/lab/idor/invoices/files/9d766e2de09342cd8e5af025e29597f5.pdf", "app/lab/idor/invoices/files/a9f65d8bbabb2183d49713c7aae7c49b.pdf", "app/lab/idor/invoices/files/cd7df2aa8367bd489687dac190532d12.pdf", "app/lab/idor/invoices/files/e7801ac4122b2f1b34faf46092966954.pdf", "app/lab/idor/invoices/files/f7d42faab066990c8883dfccce222efc.pdf", "app/lab/idor/invoices/files/index.php", "app/lab/idor/invoices/fr.ini", "app/lab/idor/invoices/index.php", "app/lab/idor/invoices/tr.ini", "app/lab/idor/money-transfer/bootstrap.min.css", "app/lab/idor/money-transfer/database.db", "app/lab/idor/money-transfer/en.ini", "app/lab/idor/money-transfer/fr.ini", "app/lab/idor/money-transfer/index.php", "app/lab/idor/money-transfer/reset.php", "app/lab/idor/money-transfer/tr.ini", "app/lab/idor/shopping-cart/3Dvalid.php", "app/lab/idor/shopping-cart/add.php", "app/lab/idor/shopping-cart/cart.php", "app/lab/idor/shopping-cart/code.php", "app/lab/idor/shopping-cart/conn.php", "app/lab/idor/shopping-cart/css/messageStyle.css", "app/lab/idor/shopping-cart/css/style.css", "app/lab/idor/shopping-cart/delete.php", "app/lab/idor/shopping-cart/en.ini", "app/lab/idor/shopping-cart/fr.ini", "app/lab/idor/shopping-cart/img/avatar1.png", "app/lab/idor/shopping-cart/img/cat.jpg", "app/lab/idor/shopping-cart/img/flag.png", "app/lab/idor/shopping-cart/img/market.png", "app/lab/idor/shopping-cart/img/yavuzlar.png", "app/lab/idor/shopping-cart/index.php", "app/lab/idor/shopping-cart/messageBox.php", "app/lab/idor/shopping-cart/messageYavuzlar.php", "app/lab/idor/shopping-cart/productsDB.sqlite3", "app/lab/idor/shopping-cart/tr.ini", "app/lab/idor/shopping-cart/verify.php", "app/lab/idor/ticket-sales/bootstrap.min.css", "app/lab/idor/ticket-sales/database.db", "app/lab/idor/ticket-sales/en.ini", "app/lab/idor/ticket-sales/fr.ini", "app/lab/idor/ticket-sales/index.php", "app/lab/idor/ticket-sales/reset.php", "app/lab/idor/ticket-sales/tr.ini", "app/lab/insecure-deserialization/admin-account-1/css/bootstrap.min.css", "app/lab/insecure-deserialization/admin-account-1/db.php", "app/lab/insecure-deserialization/admin-account-1/en.ini", "app/lab/insecure-deserialization/admin-account-1/fr.ini", "app/lab/insecure-deserialization/admin-account-1/index.php", "app/lab/insecure-deserialization/admin-account-1/login.php", "app/lab/insecure-deserialization/admin-account-1/tr.ini", "app/lab/insecure-deserialization/admin-account-1/user.php", "app/lab/insecure-deserialization/admin-account-2/ar.ini", "app/lab/insecure-deserialization/admin-account-2/css/bootstrap.min.css", "app/lab/insecure-deserialization/admin-account-2/css/normalize.min.css", "app/lab/insecure-deserialization/admin-account-2/db.php", "app/lab/insecure-deserialization/admin-account-2/en.ini", "app/lab/insecure-deserialization/admin-account-2/fr.ini", "app/lab/insecure-deserialization/admin-account-2/index.php", "app/lab/insecure-deserialization/admin-account-2/login.php", "app/lab/insecure-deserialization/admin-account-2/tr.ini", "app/lab/insecure-deserialization/admin-account-2/user.php", "app/lab/insecure-deserialization/full-privileges/ar.ini", "app/lab/insecure-deserialization/full-privileges/css/bootstrap.min.css", "app/lab/insecure-deserialization/full-privileges/css/font.css", "app/lab/insecure-deserialization/full-privileges/css/normalize.min.css", "app/lab/insecure-deserialization/full-privileges/db.php", "app/lab/insecure-deserialization/full-privileges/en.ini", "app/lab/insecure-deserialization/full-privileges/fr.ini", "app/lab/insecure-deserialization/full-privileges/index.php", "app/lab/insecure-deserialization/full-privileges/login.php", "app/lab/insecure-deserialization/full-privileges/permission.php", "app/lab/insecure-deserialization/full-privileges/tr.ini", "app/lab/insecure-deserialization/full-privileges/user.php", "app/lab/insecure-deserialization/jwt-attack/bootstrap.min.css", "app/lab/insecure-deserialization/jwt-attack/clearJWT.php", "app/lab/insecure-deserialization/jwt-attack/composer.json", "app/lab/insecure-deserialization/jwt-attack/composer.lock", "app/lab/insecure-deserialization/jwt-attack/en.ini", "app/lab/insecure-deserialization/jwt-attack/fr.ini", "app/lab/insecure-deserialization/jwt-attack/function.php", "app/lab/insecure-deserialization/jwt-attack/index.php", "app/lab/insecure-deserialization/jwt-attack/tr.ini", "app/lab/insecure-deserialization/random-nick-generator/ar.ini", "app/lab/insecure-deserialization/random-nick-generator/css/bootstrap.min.css", "app/lab/insecure-deserialization/random-nick-generator/css/font.css", "app/lab/insecure-deserialization/random-nick-generator/css/normalize.min.css", "app/lab/insecure-deserialization/random-nick-generator/db.php", "app/lab/insecure-deserialization/random-nick-generator/en.ini", "app/lab/insecure-deserialization/random-nick-generator/fr.ini", "app/lab/insecure-deserialization/random-nick-generator/index.php", "app/lab/insecure-deserialization/random-nick-generator/login.php", "app/lab/insecure-deserialization/random-nick-generator/randomGenerator.php", "app/lab/insecure-deserialization/random-nick-generator/tr.ini", "app/lab/insecure-deserialization/random-nick-generator/user.php", "app/lab/path-traversal/path-traversal-2/en.ini", "app/lab/path-traversal/path-traversal-2/fr.ini", "app/lab/path-traversal/path-traversal-2/img/1.png", "app/lab/path-traversal/path-traversal-2/img/2.png", "app/lab/path-traversal/path-traversal-2/img/3.png", "app/lab/path-traversal/path-traversal-2/img/4.png", "app/lab/path-traversal/path-traversal-2/index.php", "app/lab/path-traversal/path-traversal-2/product-detail.php", "app/lab/path-traversal/path-traversal-2/tr.ini", "app/lab/race-condition/race-condition1/bootstrap.min.css", "app/lab/race-condition/race-condition1/connection.php", "app/lab/race-condition/race-condition1/database.db", "app/lab/race-condition/race-condition1/en.ini", "app/lab/race-condition/race-condition1/fr.ini", "app/lab/race-condition/race-condition1/index.php", "app/lab/race-condition/race-condition1/registers.php", "app/lab/race-condition/race-condition1/tr.ini", "app/lab/race-condition/race-condition2/en.ini", "app/lab/race-condition/race-condition2/fr.ini", "app/lab/race-condition/race-condition2/index.php", "app/lab/race-condition/race-condition2/tr.ini", "app/lab/sql-injection/dump.sql", "app/lab/sql-injection/find-password/bootstrap.min.css", "app/lab/sql-injection/find-password/dependencies/dbConnect.php", "app/lab/sql-injection/find-password/dependencies/dbVul.php", "app/lab/sql-injection/find-password/dependencies/head.php", "app/lab/sql-injection/find-password/en.ini", "app/lab/sql-injection/find-password/fr.ini", "app/lab/sql-injection/find-password/index.php", "app/lab/sql-injection/find-password/jquery.js", "app/lab/sql-injection/find-password/tr.ini", "app/lab/sql-injection/get-blind-error/bootstrap.min.css", "app/lab/sql-injection/get-blind-error/deneme.html", "app/lab/sql-injection/get-blind-error/en.ini", "app/lab/sql-injection/get-blind-error/fr.ini", "app/lab/sql-injection/get-blind-error/images/1.png", "app/lab/sql-injection/get-blind-error/images/10.png", "app/lab/sql-injection/get-blind-error/images/2.png", "app/lab/sql-injection/get-blind-error/images/3.png", "app/lab/sql-injection/get-blind-error/images/4.png", "app/lab/sql-injection/get-blind-error/images/5.png", "app/lab/sql-injection/get-blind-error/images/6.png", "app/lab/sql-injection/get-blind-error/images/7.png", "app/lab/sql-injection/get-blind-error/images/8.png", "app/lab/sql-injection/get-blind-error/images/9.png", "app/lab/sql-injection/get-blind-error/index.php", "app/lab/sql-injection/get-blind-error/tr.ini", "app/lab/sql-injection/post-blind-boolean/bootstrap.min.css", "app/lab/sql-injection/post-blind-boolean/en.ini", "app/lab/sql-injection/post-blind-boolean/fr.ini", "app/lab/sql-injection/post-blind-boolean/index.php", "app/lab/sql-injection/post-blind-boolean/tr.ini", "app/lab/sql-injection/post-blind-time/bootstrap.min.css", "app/lab/sql-injection/post-blind-time/en.ini", "app/lab/sql-injection/post-blind-time/fr.ini", "app/lab/sql-injection/post-blind-time/index.php", "app/lab/sql-injection/post-blind-time/tr.ini", "app/lab/sql-injection/post-login/admin.php", "app/lab/sql-injection/post-login/bootstrap.min.css", "app/lab/sql-injection/post-login/en.ini", "app/lab/sql-injection/post-login/fr.ini", "app/lab/sql-injection/post-login/index.php", "app/lab/sql-injection/post-login/style.css", "app/lab/sql-injection/post-login/tr.ini", "app/lab/ssti/SSTI-Basic/database.db", "app/lab/ssti/SSTI-Basic/en.ini", "app/lab/ssti/SSTI-Basic/fr.ini", "app/lab/ssti/SSTI-Basic/index.php", "app/lab/ssti/SSTI-Basic/tr.ini", "app/lab/ssti/SSTI-Blacklist/bootstrap.min.css", "app/lab/ssti/SSTI-Blacklist/composer.json", "app/lab/ssti/SSTI-Blacklist/composer.lock", "app/lab/ssti/SSTI-Blacklist/en.ini", "app/lab/ssti/SSTI-Blacklist/fr.ini", "app/lab/ssti/SSTI-Blacklist/index.php", "app/lab/ssti/SSTI-Blacklist/tr.ini", "app/lab/xss/basic-dom-based/bootstrap.min.css", "app/lab/xss/basic-dom-based/en.ini", "app/lab/xss/basic-dom-based/fr.ini", "app/lab/xss/basic-dom-based/index.php", "app/lab/xss/basic-dom-based/tr.ini", "app/lab/xss/basic-reflected/bootstrap.min.css", "app/lab/xss/basic-reflected/en.ini", "app/lab/xss/basic-reflected/fr.ini", "app/lab/xss/basic-reflected/index.php", "app/lab/xss/basic-reflected/tr.ini", "app/lab/xss/basic-stored/bootstrap.min.css", "app/lab/xss/basic-stored/database.db", "app/lab/xss/basic-stored/en.ini", "app/lab/xss/basic-stored/fr.ini", "app/lab/xss/basic-stored/index.php", "app/lab/xss/basic-stored/stored.php", "app/lab/xss/basic-stored/tr.ini", "app/lab/xss/html-attribute-manipulation/bootstrap.min.css", "app/lab/xss/html-attribute-manipulation/en.ini", "app/lab/xss/html-attribute-manipulation/fr.ini", "app/lab/xss/html-attribute-manipulation/index.php", "app/lab/xss/html-attribute-manipulation/poster.jpg", "app/lab/xss/html-attribute-manipulation/poster2.jpg", "app/lab/xss/html-attribute-manipulation/ticket.php", "app/lab/xss/html-attribute-manipulation/tr.ini", "app/lab/xss/image-upload/bootstrap.min.css", "app/lab/xss/image-upload/database.db", "app/lab/xss/image-upload/en.ini", "app/lab/xss/image-upload/fr.ini", "app/lab/xss/image-upload/index.php", "app/lab/xss/image-upload/tr.ini", "app/lab/xss/image-upload/uploads/download.jpeg", "app/lab/xss/news/bootstrap.min.css", "app/lab/xss/news/en.ini", "app/lab/xss/news/flaticon.css", "app/lab/xss/news/flaticon.eot", "app/lab/xss/news/flaticon.html", "app/lab/xss/news/flaticon.scss", "app/lab/xss/news/flaticon.svg", "app/lab/xss/news/flaticon.ttf", "app/lab/xss/news/flaticon.woff", "app/lab/xss/news/flaticon.woff2", "app/lab/xss/news/fr.ini", "app/lab/xss/news/hackernews.db", "app/lab/xss/news/index.php", "app/lab/xss/news/tr.ini", "app/lab/xss/our-gallery/1.jpg", "app/lab/xss/our-gallery/2.jpg", "app/lab/xss/our-gallery/3.jpg", "app/lab/xss/our-gallery/4.jpg", "app/lab/xss/our-gallery/bootstrap.min.css", "app/lab/xss/our-gallery/en.ini", "app/lab/xss/our-gallery/fr.ini", "app/lab/xss/our-gallery/index.php", "app/lab/xss/our-gallery/tr.ini", "app/lab/xss/user-agent/bootstrap.min.css", "app/lab/xss/user-agent/database.db", "app/lab/xss/user-agent/en.ini", "app/lab/xss/user-agent/fr.ini", "app/lab/xss/user-agent/index.php", "app/lab/xss/user-agent/tr.ini", "app/lab/xss/user-agent/user_agent_stored.php", "app/lab/xxe/xml/bootstrap.min.css", "app/lab/xxe/xml/en.ini", "app/lab/xxe/xml/fr.ini", "app/lab/xxe/xml/index.php", "app/lab/xxe/xml/test.php", "app/lab/xxe/xml/tr.ini", "app/lang/en.ini", "app/lang/fr.ini", "app/lang/lang.php", "app/lang/tr.ini", "app/main.json", "app/public/assets/css/theme-rtl.css", "app/public/assets/css/theme-rtl.css.map", "app/public/assets/css/theme-rtl.min.css", "app/public/assets/css/theme-rtl.min.css.map", "app/public/assets/css/theme.css", "app/public/assets/css/theme.css.map", "app/public/assets/css/theme.min.css", "app/public/assets/css/theme.min.css.map", "app/public/assets/fonts/CircularStd-Black.eot", "app/public/assets/fonts/CircularStd-Black.ttf", "app/public/assets/fonts/CircularStd-Black.woff", "app/public/assets/fonts/CircularStd-Black.woff2", "app/public/assets/fonts/CircularStd-BlackItalic.eot", "app/public/assets/fonts/CircularStd-BlackItalic.ttf", "app/public/assets/fonts/CircularStd-BlackItalic.woff", "app/public/assets/fonts/CircularStd-BlackItalic.woff2", "app/public/assets/fonts/CircularStd-Bold.eot", "app/public/assets/fonts/CircularStd-Bold.ttf", "app/public/assets/fonts/CircularStd-Bold.woff", "app/public/assets/fonts/CircularStd-Bold.woff2", "app/public/assets/fonts/CircularStd-BoldItalic.eot", "app/public/assets/fonts/CircularStd-BoldItalic.ttf", "app/public/assets/fonts/CircularStd-BoldItalic.woff", "app/public/assets/fonts/CircularStd-BoldItalic.woff2", "app/public/assets/fonts/CircularStd-Book.eot", "app/public/assets/fonts/CircularStd-Book.ttf", "app/public/assets/fonts/CircularStd-Book.woff", "app/public/assets/fonts/CircularStd-Book.woff2", "app/public/assets/fonts/CircularStd-BookItalic.eot", "app/public/assets/fonts/CircularStd-BookItalic.ttf", "app/public/assets/fonts/CircularStd-BookItalic.woff", "app/public/assets/fonts/CircularStd-BookItalic.woff2", "app/public/assets/fonts/CircularStd-Medium.eot", "app/public/assets/fonts/CircularStd-Medium.ttf", "app/public/assets/fonts/CircularStd-Medium.woff", "app/public/assets/fonts/CircularStd-Medium.woff2", "app/public/assets/fonts/CircularStd-MediumItalic.eot", "app/public/assets/fonts/CircularStd-MediumItalic.ttf", "app/public/assets/fonts/CircularStd-MediumItalic.woff", "app/public/assets/fonts/CircularStd-MediumItalic.woff2", "app/public/assets/img/back.png", "app/public/assets/img/en.png", "app/public/assets/img/fr.png", "app/public/assets/img/gallery/brands/cyropslogo.png", "app/public/assets/img/gallery/brands/sibervatangray.png", "app/public/assets/img/gallery/brands/yavuzlargray.png", "app/public/assets/img/gallery/facebook-line1.svg", "app/public/assets/img/gallery/instagram-line1.svg", "app/public/assets/img/gallery/linkedin-line1.svg", "app/public/assets/img/gallery/logo.png", "app/public/assets/img/gallery/twitter-line1.svg", "app/public/assets/img/logo.png", "app/public/assets/img/source.png", "app/public/assets/img/tr.png", "app/public/assets/img/vulns/api.png", "app/public/assets/img/vulns/broken.png", "app/public/assets/img/vulns/captcha.png", "app/public/assets/img/vulns/command.png", "app/public/assets/img/vulns/csrf.png", "app/public/assets/img/vulns/directory2.png", "app/public/assets/img/vulns/file.png", "app/public/assets/img/vulns/idor.png", "app/public/assets/img/vulns/insecure.png", "app/public/assets/img/vulns/lfi.png", "app/public/assets/img/vulns/path-traversal.png", "app/public/assets/img/vulns/race.png", "app/public/assets/img/vulns/sqli.png", "app/public/assets/img/vulns/ssti.png", "app/public/assets/img/vulns/upload.png", "app/public/assets/img/vulns/xss.png", "app/public/assets/img/vulns/xxe.png", "app/public/assets/js/bootstrap-navbar.js", "app/public/assets/js/theme.js", "app/public/assets/js/theme.js.map", "app/public/assets/js/theme.min.js.map", "app/public/assets/js/vlnav.js", "app/public/vendors/bootstrap/bootstrap.min.js.map", "app/public/vendors/swiper/swiper-bundle.min.css", "app/resources.json", "app/route.php", "app/source-code.php", "app/vuln.php", "run.sh"]}, "results": [{"check_id": "dockerfile.security.missing-user.missing-user", "end": {"col": 25, "line": 57, "offset": 1296}, "extra": {"engine_kind": "OSS", "fingerprint": "f79749f9fbc37d2e827b480fedbe4f70e84c729b7fe58338ec14f76c48f92758d9b6e4cfb5ec7bb31726fe1c1835c3bbccb88d5ff1c4999fd5db175d9189aa43_0", "fix": "USER non-root\nCMD [\"/usr/sbin/run.sh\"]", "is_ignored": false, "lines": "CMD [\"/usr/sbin/run.sh\"]", "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-269: Improper Privilege Management"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 20148, "rule_id": "AbUN06", "rv_id": 928286, "url": "https://semgrep.dev/playground/r/0bTpAQq/dockerfile.security.missing-user.missing-user", "version_id": "0bTpAQq"}}, "shortlink": "https://sg.run/Gbvn", "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user", "subcategory": ["audit"], "technology": ["dockerfile"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$...VARS": {"abstract_content": "[\"/usr/sbin/run.sh\"]", "end": {"col": 25, "line": 57, "offset": 1296}, "start": {"col": 5, "line": 57, "offset": 1276}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "Dockerfile", "start": {"col": 1, "line": 57, "offset": 1272}}, {"check_id": "php.lang.security.injection.tainted-filename.tainted-filename", "end": {"col": 32, "line": 13, "offset": 284}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$imageToDelete", "location": {"end": {"col": 19, "line": 8, "offset": 137}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 5, "line": 8, "offset": 123}}}, {"content": "$targetFile", "location": {"end": {"col": 16, "line": 11, "offset": 214}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 5, "line": 11, "offset": 203}}}], "taint_sink": ["CliLoc", [{"end": {"col": 32, "line": 13, "offset": 284}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 21, "line": 13, "offset": 273}}, "$targetFile"]], "taint_source": ["CliLoc", [{"end": {"col": 27, "line": 8, "offset": 145}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 22, "line": 8, "offset": 140}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "c0b3155939b59704786780e9468dfe51927577d71b288128a007b52467be60df771d1455a23c7163f3fb9ab939f4c91303b836d755f57ae4cad8c3598894e2bb_0", "is_ignored": false, "lines": "    if (file_exists($targetFile) && unlink($targetFile)) {", "message": "File name based on user input risks server-side request forgery.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 16250, "rule_id": "5rUpro", "rv_id": 834265, "url": "https://semgrep.dev/playground/r/BjTe09O/php.lang.security.injection.tainted-filename.tainted-filename", "version_id": "BjTe09O"}}, "shortlink": "https://sg.run/Ayqp", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$FILENAME": {"abstract_content": "$targetFile", "end": {"col": 32, "line": 13, "offset": 284}, "propagated_value": {"svalue_abstract_content": "$uploadDirectory.$imageToDelete", "svalue_end": {"col": 52, "line": 11, "offset": 250}, "svalue_start": {"col": 19, "line": 11, "offset": 217}}, "start": {"col": 21, "line": 13, "offset": 273}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 21, "line": 13, "offset": 273}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 56, "line": 13, "offset": 308}, "extra": {"engine_kind": "OSS", "fingerprint": "5d9f6b1a00632e81925686c241111c7aab6c6b7c7e647c1186572e31a4336b8cf5051aa46f9fa7bfa356ceb6bc0c46c261a88824ff6d52e88c5a4f0a6261dc5e_0", "is_ignored": false, "lines": "    if (file_exists($targetFile) && unlink($targetFile)) {", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 37, "line": 13, "offset": 289}}, {"check_id": "php.lang.security.injection.tainted-filename.tainted-filename", "end": {"col": 55, "line": 13, "offset": 307}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$imageToDelete", "location": {"end": {"col": 19, "line": 8, "offset": 137}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 5, "line": 8, "offset": 123}}}, {"content": "$targetFile", "location": {"end": {"col": 16, "line": 11, "offset": 214}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 5, "line": 11, "offset": 203}}}], "taint_sink": ["CliLoc", [{"end": {"col": 55, "line": 13, "offset": 307}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 44, "line": 13, "offset": 296}}, "$targetFile"]], "taint_source": ["CliLoc", [{"end": {"col": 27, "line": 8, "offset": 145}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 22, "line": 8, "offset": 140}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "c0b3155939b59704786780e9468dfe51927577d71b288128a007b52467be60df771d1455a23c7163f3fb9ab939f4c91303b836d755f57ae4cad8c3598894e2bb_1", "is_ignored": false, "lines": "    if (file_exists($targetFile) && unlink($targetFile)) {", "message": "File name based on user input risks server-side request forgery.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 16250, "rule_id": "5rUpro", "rv_id": 834265, "url": "https://semgrep.dev/playground/r/BjTe09O/php.lang.security.injection.tainted-filename.tainted-filename", "version_id": "BjTe09O"}}, "shortlink": "https://sg.run/Ayqp", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$FILENAME": {"abstract_content": "$targetFile", "end": {"col": 55, "line": 13, "offset": 307}, "propagated_value": {"svalue_abstract_content": "$uploadDirectory.$imageToDelete", "svalue_end": {"col": 52, "line": 11, "offset": 250}, "svalue_start": {"col": 19, "line": 11, "offset": 217}}, "start": {"col": 44, "line": 13, "offset": 296}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/api-hacking/api-hacking1/api/delete_image.php", "start": {"col": 44, "line": 13, "offset": 296}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 20, "offset": 386}, "extra": {"engine_kind": "OSS", "fingerprint": "35d457ec53a99e5ac94cced89db1c8b8dbb5fc1f72ab815649d8da20e73625396d9f8415ddcc6d9fbe707f9d5603e5bb8e7a766250b8531d7c72fb64d2e96e0c_0", "is_ignored": false, "lines": "        unlink($file);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/api-hacking/api-hacking1/api/reset_images.php", "start": {"col": 9, "line": 20, "offset": 373}}, {"check_id": "php.lang.security.search-active-debug.search-active-debug", "end": {"col": 29, "line": 2, "offset": 34}, "extra": {"engine_kind": "OSS", "fingerprint": "28009b12999a1a645c46a4609269ad23351586f963f8735edabcba110b4e7960b9c6a68cbbbbb0281adcbade78851341304a0f541b5bda9f370aaf860fd9d58c_0", "is_ignored": false, "lines": "ini_set('display_errors', 1);", "message": "Debug logging is explicitly enabled. This can potentially disclose sensitive information and should never be active on production systems.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::lang", "debug::search::active-debug-code::wordpress"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://www.php.net/manual/en/function.setcookie.php", "https://www.php.net/manual/en/function.session-set-cookie-params.php", "https://www.php.net/manual/en/configuration.file.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27189, "rule_id": "j2UngK", "rv_id": 850729, "url": "https://semgrep.dev/playground/r/DkTGz7r/php.lang.security.search-active-debug.search-active-debug", "version_id": "DkTGz7r"}}, "shortlink": "https://sg.run/PKeW", "source": "https://semgrep.dev/r/php.lang.security.search-active-debug.search-active-debug", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$1": {"abstract_content": "1", "end": {"col": 2, "line": 1, "offset": 1}, "start": {"col": 1, "line": 1, "offset": 0}}, "$X": {"abstract_content": "1", "end": {"col": 28, "line": 2, "offset": 33}, "start": {"col": 27, "line": 2, "offset": 32}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 1, "line": 2, "offset": 6}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 102, "line": 119, "offset": 4047}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$num1", "location": {"end": {"col": 6, "line": 71, "offset": 2008}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 1, "line": 71, "offset": 2003}}}], "taint_sink": ["CliLoc", [{"end": {"col": 102, "line": 119, "offset": 4047}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 61, "line": 119, "offset": 4006}}, "<?= generateCaptchaImage($num1, $num2) ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 52, "line": 71, "offset": 2054}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 38, "line": 71, "offset": 2040}}, "$_POST['num1']"]]}, "engine_kind": "OSS", "fingerprint": "b183ee1f376c06d0059f36e982ea66594340aa1e013af031b90580a16be021941948c7640b9f1e2fa23b3e66f6bc8a66d525362ee17f6353eddc384e40deb913_0", "is_ignored": false, "lines": "                            <img src=\"data:image/png;base64,<?= generateCaptchaImage($num1, $num2) ?>\" alt=\"Captcha Resmi\" id=\"captcha-image\">", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 44, "line": 71, "offset": 2046}, "start": {"col": 38, "line": 71, "offset": 2040}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 61, "line": 119, "offset": 4006}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 88, "line": 124, "offset": 4440}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$num1", "location": {"end": {"col": 6, "line": 71, "offset": 2008}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 1, "line": 71, "offset": 2003}}}], "taint_sink": ["CliLoc", [{"end": {"col": 88, "line": 124, "offset": 4440}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 75, "line": 124, "offset": 4427}}, "<?= $num1; ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 52, "line": 71, "offset": 2054}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 38, "line": 71, "offset": 2040}}, "$_POST['num1']"]]}, "engine_kind": "OSS", "fingerprint": "b183ee1f376c06d0059f36e982ea66594340aa1e013af031b90580a16be021941948c7640b9f1e2fa23b3e66f6bc8a66d525362ee17f6353eddc384e40deb913_1", "is_ignored": false, "lines": "                        <input type=\"hidden\" name=\"num1\" id=\"num1\" value=\"<?= $num1; ?>\">", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 44, "line": 71, "offset": 2046}, "start": {"col": 38, "line": 71, "offset": 2040}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 75, "line": 124, "offset": 4427}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 88, "line": 125, "offset": 4530}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$num2", "location": {"end": {"col": 6, "line": 72, "offset": 2081}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 1, "line": 72, "offset": 2076}}}], "taint_sink": ["CliLoc", [{"end": {"col": 88, "line": 125, "offset": 4530}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 75, "line": 125, "offset": 4517}}, "<?= $num2; ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 52, "line": 72, "offset": 2127}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 38, "line": 72, "offset": 2113}}, "$_POST['num2']"]]}, "engine_kind": "OSS", "fingerprint": "b183ee1f376c06d0059f36e982ea66594340aa1e013af031b90580a16be021941948c7640b9f1e2fa23b3e66f6bc8a66d525362ee17f6353eddc384e40deb913_2", "is_ignored": false, "lines": "                        <input type=\"hidden\" name=\"num2\" id=\"num2\" value=\"<?= $num2; ?>\">", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 44, "line": 72, "offset": 2119}, "start": {"col": 38, "line": 72, "offset": 2113}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 75, "line": 125, "offset": 4517}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 216, "line": 126, "offset": 4748}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 216, "line": 126, "offset": 4748}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 142, "line": 126, "offset": 4674}}, "<?= isset($_POST['captcha']) ? htmlspecialchars($_POST['captcha']) : '' ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 207, "line": 126, "offset": 4739}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 190, "line": 126, "offset": 4722}}, "$_POST['captcha']"]]}, "engine_kind": "OSS", "fingerprint": "b183ee1f376c06d0059f36e982ea66594340aa1e013af031b90580a16be021941948c7640b9f1e2fa23b3e66f6bc8a66d525362ee17f6353eddc384e40deb913_3", "is_ignored": false, "lines": "                        <input type=\"text\" class=\"form-control\" id=\"captcha\" name=\"captcha\" placeholder=\"<?= $strings['captcha']; ?>\" value=\"<?= isset($_POST['captcha']) ? htmlspecialchars($_POST['captcha']) : '' ?>\">", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 196, "line": 126, "offset": 4728}, "start": {"col": 190, "line": 126, "offset": 4722}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/captcha-bypass/bypass/index.php", "start": {"col": 142, "line": 126, "offset": 4674}}, {"check_id": "php.lang.security.exec-use.exec-use", "end": {"col": 73, "line": 13, "offset": 277}, "extra": {"engine_kind": "OSS", "fingerprint": "207bc9ad023629d9f5325645914eae1116a9938cb12a2e760607651c95045bc99898a20bbb1ea96520ddf17b703d136fa77b3693c5d2633ad05541a715bc9b37_0", "is_ignored": false, "lines": "exec ('echo ' . $_SERVER[\"HTTP_USER_AGENT\"] . ' >> /tmp/userAgent.log');", "message": "Executing non-constant commands. This can lead to command injection.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9391, "rule_id": "qNUjye", "rv_id": 834260, "url": "https://semgrep.dev/playground/r/JdTlrJZ/php.lang.security.exec-use.exec-use", "version_id": "JdTlrJZ"}}, "shortlink": "https://sg.run/5Q1j", "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$FUNC": {"abstract_content": "exec", "end": {"col": 5, "line": 13, "offset": 209}, "start": {"col": 1, "line": 13, "offset": 205}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/blind-command-injection/blind.php", "start": {"col": 1, "line": 13, "offset": 205}}, {"check_id": "php.laravel.security.laravel-command-injection.laravel-command-injection", "end": {"col": 71, "line": 13, "offset": 275}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 71, "line": 13, "offset": 275}, "path": "app/lab/command-injection/blind-command-injection/blind.php", "start": {"col": 7, "line": 13, "offset": 211}}, "'echo ' . $_SERVER[\"HTTP_USER_AGENT\"] . ' >> /tmp/userAgent.log'"]], "taint_source": ["CliLoc", [{"end": {"col": 44, "line": 13, "offset": 248}, "path": "app/lab/command-injection/blind-command-injection/blind.php", "start": {"col": 17, "line": 13, "offset": 221}}, "$_SERVER[\"HTTP_USER_AGENT\"]"]]}, "engine_kind": "OSS", "fingerprint": "854d5536dde2afbc577214f26123a62282bdb5aeb20e5cf00dc212fce0efb40f0e3c7684dce1185bcd3befdfd003219ace77fb262dd2c9aefc14c6efa46b747a_0", "is_ignored": false, "lines": "exec ('echo ' . $_SERVER[\"HTTP_USER_AGENT\"] . ' >> /tmp/userAgent.log');", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A03:2021 - Injection", "A01:2017 - Injection"], "references": ["https://www.php.net/manual/en/ref.exec.php", "https://www.php.net/manual/en/ref.filesystem.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36402, "rule_id": "3qUbw4", "rv_id": 850748, "url": "https://semgrep.dev/playground/r/NdTBnrX/php.laravel.security.laravel-command-injection.laravel-command-injection", "version_id": "NdTBnrX"}}, "shortlink": "https://sg.run/JPYR", "source": "https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$1": {"abstract_content": "HTTP_USER_AGENT", "end": {"col": 16, "line": 1, "offset": 15}, "start": {"col": 1, "line": 1, "offset": 0}}, "$MEMBER": {"abstract_content": "HTTP_USER_AGENT", "end": {"col": 42, "line": 13, "offset": 246}, "start": {"col": 27, "line": 13, "offset": 231}}, "$SINK": {"abstract_content": "'echo '.$_SERVER[\"HTTP_USER_AGENT\"].' >> /tmp/userAgent.log'", "end": {"col": 71, "line": 13, "offset": 275}, "start": {"col": 7, "line": 13, "offset": 211}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/blind-command-injection/blind.php", "start": {"col": 7, "line": 13, "offset": 211}}, {"check_id": "php.lang.security.tainted-command-injection.tainted-command-injection", "end": {"col": 35, "line": 46, "offset": 1358}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 34, "offset": 899}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 5, "line": 34, "offset": 893}}}], "taint_sink": ["CliLoc", [{"end": {"col": 35, "line": 46, "offset": 1358}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 6, "line": 46, "offset": 1329}}, "exec(\"ping -c5 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 34, "offset": 908}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 14, "line": 34, "offset": 902}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "278a9c427acbfb3f64dee565188fd313917b69fd762957c804e5dafc27acab3ba43f301a0a0353457311b234da9139161cfe514abd085625fa78eebc889af757_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/function.eval", "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27195, "rule_id": "NbUzg9", "rv_id": 850736, "url": "https://semgrep.dev/playground/r/6xTDpWL/php.lang.security.tainted-command-injection.tainted-command-injection", "version_id": "6xTDpWL"}}, "shortlink": "https://sg.run/Bpj2", "source": "https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Command Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 6, "line": 46, "offset": 1329}}, {"check_id": "php.lang.security.tainted-exec.tainted-exec", "end": {"col": 35, "line": 46, "offset": 1358}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 34, "offset": 899}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 5, "line": 34, "offset": 893}}}], "taint_sink": ["CliLoc", [{"end": {"col": 35, "line": 46, "offset": 1358}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 6, "line": 46, "offset": 1329}}, "exec(\"ping -c5 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 34, "offset": 908}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 14, "line": 34, "offset": 902}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "34c4e91efd2d00613476ab155624fef25206dc9911bac4e2f04a49932c27d33860088ad054f2f7d4a7b224e415abb525e017e64306f5405b87e064b709fa9204_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2021 - Injection"], "references": ["https://www.stackhawk.com/blog/php-command-injection/", "https://brightsec.com/blog/code-injection-php/", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73146, "rule_id": "9AUw06", "rv_id": 834280, "url": "https://semgrep.dev/playground/r/1QTPLDD/php.lang.security.tainted-exec.tainted-exec", "version_id": "1QTPLDD"}}, "shortlink": "https://sg.run/JAkP", "source": "https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 6, "line": 46, "offset": 1329}}, {"check_id": "php.lang.security.exec-use.exec-use", "end": {"col": 36, "line": 46, "offset": 1359}, "extra": {"engine_kind": "OSS", "fingerprint": "ce13be4fcbac950feca966f02476b07fa2dd1681ff79b40621ceedf9b07df4842ebe4d0bfdfacba4807e0fdda36bd0d4f562415e956403d975295fcd9b9776dd_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9391, "rule_id": "qNUjye", "rv_id": 834260, "url": "https://semgrep.dev/playground/r/JdTlrJZ/php.lang.security.exec-use.exec-use", "version_id": "JdTlrJZ"}}, "shortlink": "https://sg.run/5Q1j", "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$FUNC": {"abstract_content": "exec", "end": {"col": 10, "line": 46, "offset": 1333}, "start": {"col": 6, "line": 46, "offset": 1329}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 6, "line": 46, "offset": 1329}}, {"check_id": "php.laravel.security.laravel-command-injection.laravel-command-injection", "end": {"col": 28, "line": 46, "offset": 1351}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 34, "offset": 899}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 5, "line": 34, "offset": 893}}}], "taint_sink": ["CliLoc", [{"end": {"col": 28, "line": 46, "offset": 1351}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 11, "line": 46, "offset": 1334}}, "\"ping -c5 $input\""]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 34, "offset": 908}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 14, "line": 34, "offset": 902}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "90cfcab820442904e0bd103b1e1ee1fe8c8cf73d97a9067336c1da3434e3f0cd376c9dd4cb1c40c623318741bc062423d6a637c1a3f400e3552bee4706d8fde8_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A03:2021 - Injection", "A01:2017 - Injection"], "references": ["https://www.php.net/manual/en/ref.exec.php", "https://www.php.net/manual/en/ref.filesystem.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36402, "rule_id": "3qUbw4", "rv_id": 850748, "url": "https://semgrep.dev/playground/r/NdTBnrX/php.laravel.security.laravel-command-injection.laravel-command-injection", "version_id": "NdTBnrX"}}, "shortlink": "https://sg.run/JPYR", "source": "https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$SINK": {"abstract_content": "\"\"ping -c5 $input\"", "end": {"col": 28, "line": 46, "offset": 1351}, "start": {"col": 11, "line": 46, "offset": 1334}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-hard/index.php", "start": {"col": 11, "line": 46, "offset": 1334}}, {"check_id": "php.lang.security.tainted-command-injection.tainted-command-injection", "end": {"col": 35, "line": 40, "offset": 893}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 12, "line": 37, "offset": 815}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 37, "offset": 809}}}], "taint_sink": ["CliLoc", [{"end": {"col": 35, "line": 40, "offset": 893}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 40, "offset": 864}}, "exec(\"ping -c5 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 37, "offset": 824}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 15, "line": 37, "offset": 818}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "b963b16077fba85218f259377f8eb3bea9f490e8fd71866abd858ec700858087d0ade69ab187561c5c47f058db2a7d458b157571f7574158ad719cbefe0df206_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/function.eval", "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27195, "rule_id": "NbUzg9", "rv_id": 850736, "url": "https://semgrep.dev/playground/r/6xTDpWL/php.lang.security.tainted-command-injection.tainted-command-injection", "version_id": "6xTDpWL"}}, "shortlink": "https://sg.run/Bpj2", "source": "https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Command Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 40, "offset": 864}}, {"check_id": "php.lang.security.tainted-exec.tainted-exec", "end": {"col": 35, "line": 40, "offset": 893}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 12, "line": 37, "offset": 815}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 37, "offset": 809}}}], "taint_sink": ["CliLoc", [{"end": {"col": 35, "line": 40, "offset": 893}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 40, "offset": 864}}, "exec(\"ping -c5 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 37, "offset": 824}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 15, "line": 37, "offset": 818}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "c0ea98ec38f71b78e12166da54c195e756eb6d486eb27789017cc26434cab3c8fb27e38b0e1df5a459e6923d43d8977f3fc7932682a5dd8e2f9b45a1f694aab7_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2021 - Injection"], "references": ["https://www.stackhawk.com/blog/php-command-injection/", "https://brightsec.com/blog/code-injection-php/", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73146, "rule_id": "9AUw06", "rv_id": 834280, "url": "https://semgrep.dev/playground/r/1QTPLDD/php.lang.security.tainted-exec.tainted-exec", "version_id": "1QTPLDD"}}, "shortlink": "https://sg.run/JAkP", "source": "https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 40, "offset": 864}}, {"check_id": "php.lang.security.exec-use.exec-use", "end": {"col": 36, "line": 40, "offset": 894}, "extra": {"engine_kind": "OSS", "fingerprint": "11fa0432e89e1c7693484019609fd6d04f0028b34ad5292da452b136aa87ab3d33505a1c8ad8954b832e868fec6bfc35c45e8c8073435041339c38d315a384bd_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9391, "rule_id": "qNUjye", "rv_id": 834260, "url": "https://semgrep.dev/playground/r/JdTlrJZ/php.lang.security.exec-use.exec-use", "version_id": "JdTlrJZ"}}, "shortlink": "https://sg.run/5Q1j", "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$FUNC": {"abstract_content": "exec", "end": {"col": 10, "line": 40, "offset": 868}, "start": {"col": 6, "line": 40, "offset": 864}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 40, "offset": 864}}, {"check_id": "php.laravel.security.laravel-command-injection.laravel-command-injection", "end": {"col": 28, "line": 40, "offset": 886}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 12, "line": 37, "offset": 815}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 6, "line": 37, "offset": 809}}}], "taint_sink": ["CliLoc", [{"end": {"col": 28, "line": 40, "offset": 886}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 11, "line": 40, "offset": 869}}, "\"ping -c5 $input\""]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 37, "offset": 824}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 15, "line": 37, "offset": 818}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "1cb319a85dabaeb9bf432e9bc9017cb9ea4955c4db0ffe238e8a02278022755515d42549e2d495a3d6582c943ea1101a29192a300bf7d22a46f076d00af40a18_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -c5 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A03:2021 - Injection", "A01:2017 - Injection"], "references": ["https://www.php.net/manual/en/ref.exec.php", "https://www.php.net/manual/en/ref.filesystem.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36402, "rule_id": "3qUbw4", "rv_id": 850748, "url": "https://semgrep.dev/playground/r/NdTBnrX/php.laravel.security.laravel-command-injection.laravel-command-injection", "version_id": "NdTBnrX"}}, "shortlink": "https://sg.run/JPYR", "source": "https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$SINK": {"abstract_content": "\"\"ping -c5 $input\"", "end": {"col": 28, "line": 40, "offset": 886}, "start": {"col": 11, "line": 40, "offset": 869}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-low/index.php", "start": {"col": 11, "line": 40, "offset": 869}}, {"check_id": "php.lang.security.tainted-command-injection.tainted-command-injection", "end": {"col": 36, "line": 55, "offset": 1271}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 41, "offset": 870}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 5, "line": 41, "offset": 864}}}], "taint_sink": ["CliLoc", [{"end": {"col": 36, "line": 55, "offset": 1271}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 6, "line": 55, "offset": 1241}}, "exec(\"ping -n 3 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 41, "offset": 879}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 14, "line": 41, "offset": 873}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "6e47d623eb0a921dd8f287fa6264acf5b089de146ec8455ba5376aefd395f14f29d4a1543718fdafa7de5a18ee5e66617ba973db8cac174f01a3b5a7f526fac5_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -n 3 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/function.eval", "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27195, "rule_id": "NbUzg9", "rv_id": 850736, "url": "https://semgrep.dev/playground/r/6xTDpWL/php.lang.security.tainted-command-injection.tainted-command-injection", "version_id": "6xTDpWL"}}, "shortlink": "https://sg.run/Bpj2", "source": "https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Command Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 6, "line": 55, "offset": 1241}}, {"check_id": "php.lang.security.tainted-exec.tainted-exec", "end": {"col": 36, "line": 55, "offset": 1271}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 41, "offset": 870}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 5, "line": 41, "offset": 864}}}], "taint_sink": ["CliLoc", [{"end": {"col": 36, "line": 55, "offset": 1271}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 6, "line": 55, "offset": 1241}}, "exec(\"ping -n 3 $input\", $out)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 41, "offset": 879}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 14, "line": 41, "offset": 873}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "d91becf14defaddf961bb712cf954789770a335107423c00f141e38444d2449c2513f959891395a0c16c92f0b7b7cf27152167f0ecbbe4f29e0e309fe91a93c8_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -n 3 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2021 - Injection"], "references": ["https://www.stackhawk.com/blog/php-command-injection/", "https://brightsec.com/blog/code-injection-php/", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73146, "rule_id": "9AUw06", "rv_id": 834280, "url": "https://semgrep.dev/playground/r/1QTPLDD/php.lang.security.tainted-exec.tainted-exec", "version_id": "1QTPLDD"}}, "shortlink": "https://sg.run/JAkP", "source": "https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 6, "line": 55, "offset": 1241}}, {"check_id": "php.lang.security.exec-use.exec-use", "end": {"col": 37, "line": 55, "offset": 1272}, "extra": {"engine_kind": "OSS", "fingerprint": "1abde025f087f0536316e20f8f7e527e131369f10997ab2a855bb784742f4b814d6853a35416b1746d2ac71289efdc0c4c1fc58eaf7686480f6c101cb48c653d_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -n 3 $input\", $out);", "message": "Executing non-constant commands. This can lead to command injection.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9391, "rule_id": "qNUjye", "rv_id": 834260, "url": "https://semgrep.dev/playground/r/JdTlrJZ/php.lang.security.exec-use.exec-use", "version_id": "JdTlrJZ"}}, "shortlink": "https://sg.run/5Q1j", "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$FUNC": {"abstract_content": "exec", "end": {"col": 10, "line": 55, "offset": 1245}, "start": {"col": 6, "line": 55, "offset": 1241}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 6, "line": 55, "offset": 1241}}, {"check_id": "php.laravel.security.laravel-command-injection.laravel-command-injection", "end": {"col": 29, "line": 55, "offset": 1264}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$input", "location": {"end": {"col": 11, "line": 41, "offset": 870}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 5, "line": 41, "offset": 864}}}], "taint_sink": ["CliLoc", [{"end": {"col": 29, "line": 55, "offset": 1264}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 11, "line": 55, "offset": 1246}}, "\"ping -n 3 $input\""]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 41, "offset": 879}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 14, "line": 41, "offset": 873}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "86005d70e969537cb7641cd37eeb91ccb64369cf4701818b3f8d20a9b605f5d8dd98b7fc496ad2610126cd88a44fe0f8750a8caae91ebd0514c92facd2684911_0", "is_ignored": false, "lines": "\t\t\t\t\texec(\"ping -n 3 $input\", $out);", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A03:2021 - Injection", "A01:2017 - Injection"], "references": ["https://www.php.net/manual/en/ref.exec.php", "https://www.php.net/manual/en/ref.filesystem.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36402, "rule_id": "3qUbw4", "rv_id": 850748, "url": "https://semgrep.dev/playground/r/NdTBnrX/php.laravel.security.laravel-command-injection.laravel-command-injection", "version_id": "NdTBnrX"}}, "shortlink": "https://sg.run/JPYR", "source": "https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$SINK": {"abstract_content": "\"\"ping -n 3 $input\"", "end": {"col": 29, "line": 55, "offset": 1264}, "start": {"col": 11, "line": 55, "offset": 1246}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/ping-medium/index.php", "start": {"col": 11, "line": 55, "offset": 1246}}, {"check_id": "php.lang.security.exec-use.exec-use", "end": {"col": 48, "line": 71, "offset": 1533}, "extra": {"engine_kind": "OSS", "fingerprint": "e30d0ecaf3fc14bbad8a63a7a614dab6612095f2df7ba2a600a4d241a47bf3826c281e0a3b59e386da8c87a8b1169f92340a3c524d2e49cd7b26ba46001129f3_0", "is_ignored": false, "lines": "\t\t\t\t\t$result = shell_exec(\"perl stok.pl $cmd\");", "message": "Executing non-constant commands. This can lead to command injection.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/SystemExecFunctionsSniff.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9391, "rule_id": "qNUjye", "rv_id": 834260, "url": "https://semgrep.dev/playground/r/JdTlrJZ/php.lang.security.exec-use.exec-use", "version_id": "JdTlrJZ"}}, "shortlink": "https://sg.run/5Q1j", "source": "https://semgrep.dev/r/php.lang.security.exec-use.exec-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$FUNC": {"abstract_content": "shell_exec", "end": {"col": 26, "line": 71, "offset": 1511}, "start": {"col": 16, "line": 71, "offset": 1501}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 71, "offset": 1491}}, {"check_id": "php.lang.security.tainted-command-injection.tainted-command-injection", "end": {"col": 47, "line": 71, "offset": 1532}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}, {"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}], "taint_sink": ["CliLoc", [{"end": {"col": 47, "line": 71, "offset": 1532}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 16, "line": 71, "offset": 1501}}, "shell_exec(\"perl stok.pl $cmd\")"]], "taint_source": ["CliLoc", [{"end": {"col": 18, "line": 69, "offset": 1469}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 13, "line": 69, "offset": 1464}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "2ca1bafe70772e4435a1966b90b9a0209f1852488e7e1dc5d36956885df630cb13fc2ef8df3b2f9c9f095a2af85fba9294da601398e10ee86054db3c56f7c924_0", "is_ignored": false, "lines": "\t\t\t\t\t$result = shell_exec(\"perl stok.pl $cmd\");", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input that is used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/function.eval", "https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27195, "rule_id": "NbUzg9", "rv_id": 850736, "url": "https://semgrep.dev/playground/r/6xTDpWL/php.lang.security.tainted-command-injection.tainted-command-injection", "version_id": "6xTDpWL"}}, "shortlink": "https://sg.run/Bpj2", "source": "https://semgrep.dev/r/php.lang.security.tainted-command-injection.tainted-command-injection", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Command Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 16, "line": 71, "offset": 1501}}, {"check_id": "php.lang.security.tainted-exec.tainted-exec", "end": {"col": 47, "line": 71, "offset": 1532}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}, {"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}], "taint_sink": ["CliLoc", [{"end": {"col": 47, "line": 71, "offset": 1532}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 16, "line": 71, "offset": 1501}}, "shell_exec(\"perl stok.pl $cmd\")"]], "taint_source": ["CliLoc", [{"end": {"col": 18, "line": 69, "offset": 1469}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 13, "line": 69, "offset": 1464}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "a0755991b65d4df72439542b3aae6ba0b85c15e6317c45221cb9beebb8754548ef4c62cac186856c692e070fc44a4159679160dc1e94c396285f4789e592091c_0", "is_ignored": false, "lines": "\t\t\t\t\t$result = shell_exec(\"perl stok.pl $cmd\");", "message": "Executing non-constant commands. This can lead to command injection. You should use `escapeshellarg()` when using command.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2021 - Injection"], "references": ["https://www.stackhawk.com/blog/php-command-injection/", "https://brightsec.com/blog/code-injection-php/", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73146, "rule_id": "9AUw06", "rv_id": 834280, "url": "https://semgrep.dev/playground/r/1QTPLDD/php.lang.security.tainted-exec.tainted-exec", "version_id": "1QTPLDD"}}, "shortlink": "https://sg.run/JAkP", "source": "https://semgrep.dev/r/php.lang.security.tainted-exec.tainted-exec", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 16, "line": 71, "offset": 1501}}, {"check_id": "php.laravel.security.laravel-command-injection.laravel-command-injection", "end": {"col": 46, "line": 71, "offset": 1531}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}, {"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}], "taint_sink": ["CliLoc", [{"end": {"col": 46, "line": 71, "offset": 1531}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 27, "line": 71, "offset": 1512}}, "\"perl stok.pl $cmd\""]], "taint_source": ["CliLoc", [{"end": {"col": 18, "line": 69, "offset": 1469}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 13, "line": 69, "offset": 1464}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "1d3352103a5ce1ac35352286acea7a0b2ba4f8fb1246b1708b6153cc373e0f8f9980e36a0a6ef78cede4ba21facd572d195ce4428160856abdb5578a02c428aa_0", "is_ignored": false, "lines": "\t\t\t\t\t$result = shell_exec(\"perl stok.pl $cmd\");", "message": "Untrusted input might be injected into a command executed by the application, which can lead to a command injection vulnerability. An attacker can execute arbitrary commands, potentially gaining complete control of the system. To prevent this vulnerability, avoid executing OS commands with user input. If this is unavoidable, validate and sanitize the user input, and use safe methods for executing the commands. In PHP, it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to correctly sanitize input when used respectively as system commands or command arguments.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "os::sink::os-command-or-thread::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A03:2021 - Injection", "A01:2017 - Injection"], "references": ["https://www.php.net/manual/en/ref.exec.php", "https://www.php.net/manual/en/ref.filesystem.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36402, "rule_id": "3qUbw4", "rv_id": 850748, "url": "https://semgrep.dev/playground/r/NdTBnrX/php.laravel.security.laravel-command-injection.laravel-command-injection", "version_id": "NdTBnrX"}}, "shortlink": "https://sg.run/JPYR", "source": "https://semgrep.dev/r/php.laravel.security.laravel-command-injection.laravel-command-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$SINK": {"abstract_content": "\"\"perl stok.pl $cmd\"", "end": {"col": 46, "line": 71, "offset": 1531}, "start": {"col": 27, "line": 71, "offset": 1512}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 27, "line": 71, "offset": 1512}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 212, "line": 74, "offset": 1752}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$cmd", "location": {"end": {"col": 10, "line": 69, "offset": 1461}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 69, "offset": 1457}}}, {"content": "$result", "location": {"end": {"col": 13, "line": 71, "offset": 1498}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 71, "offset": 1491}}}], "taint_sink": ["CliLoc", [{"end": {"col": 212, "line": 74, "offset": 1752}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 74, "offset": 1546}}, "echo '<div class=\"alert alert-primary\" role=\"alert\" style=\" width:1000px;\" > <strong>  <p style=\"text-align:center;\">' . $strings['result'] . '' . $result . ' ' . $strings['pieces'] . '</p></strong></div>';"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 69, "offset": 1483}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 13, "line": 69, "offset": 1464}}, "$_GET[\"product_id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7bfcbf36259576223dad52d86b705c64bfe5e191cfa710df8fb569c25ce0a4d047c8b123078cd19de691c0ec64d73372a088d1dbcd0d271feb619277f8341fe9_0", "is_ignored": false, "lines": "\t\t\t\t\techo '<div class=\"alert alert-primary\" role=\"alert\" style=\" width:1000px;\" > <strong>  <p style=\"text-align:center;\">' . $strings['result'] . '' . $result . ' ' . $strings['pieces'] . '</p></strong></div>';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 18, "line": 69, "offset": 1469}, "start": {"col": 13, "line": 69, "offset": 1464}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/command-injection/stock-check/index.php", "start": {"col": 6, "line": 74, "offset": 1546}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 54, "line": 37, "offset": 991}, "extra": {"engine_kind": "OSS", "fingerprint": "51dc43720f4c80ac30e65bd4dffa57c82692b75c48a3241c4d5d7db7963268f52f7c9022348c9293dc99e64ae79ee6788e0969b3619efad22529c2ffbf4a4f1c_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 37, "offset": 968}, "start": {"col": 13, "line": 37, "offset": 950}}, "$HTML": {"abstract_content": "isClicked", "end": {"col": 53, "line": 37, "offset": 990}, "start": {"col": 44, "line": 37, "offset": 981}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/changing-password/assets/js/Chat.js", "start": {"col": 13, "line": 37, "offset": 950}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 57, "line": 39, "offset": 1077}, "extra": {"engine_kind": "OSS", "fingerprint": "2546bb1a5aad0866ecbcc324fb823f6c41cdc836aa0b0d680974bf1e1512420aa05d125855ca0000ce87d4ac3b827790518a95ec0b152224b0011ea8b931bcbb_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isNotClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 39, "offset": 1051}, "start": {"col": 13, "line": 39, "offset": 1033}}, "$HTML": {"abstract_content": "isNotClicked", "end": {"col": 56, "line": 39, "offset": 1076}, "start": {"col": 44, "line": 39, "offset": 1064}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/changing-password/assets/js/Chat.js", "start": {"col": 13, "line": 39, "offset": 1033}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 101, "line": 47, "offset": 1549}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$message", "location": {"end": {"col": 17, "line": 7, "offset": 100}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 9, "line": 7, "offset": 92}}}], "taint_sink": ["CliLoc", [{"end": {"col": 101, "line": 47, "offset": 1549}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 25, "line": 47, "offset": 1473}}, "'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")'"]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 7, "offset": 109}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 20, "line": 7, "offset": 103}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "8c8224725218bbeecc90b4d9d4faff04020997530d18d54e72accb4a0859cdbca201f29e301010d751828d6de5694622b3b83a8839a97cf99fb0fa9fa172f2f8_0", "is_ignored": false, "lines": "            $insert_s = 'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")';", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "INSERT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$message.'\")'", "end": {"col": 101, "line": 47, "offset": 1549}, "start": {"col": 88, "line": 47, "offset": 1536}}, "$SQLSTR": {"abstract_content": "INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"", "end": {"col": 86, "line": 47, "offset": 1534}, "start": {"col": 26, "line": 47, "offset": 1474}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 25, "line": 47, "offset": 1473}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 102, "line": 56, "offset": 1985}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$message", "location": {"end": {"col": 17, "line": 7, "offset": 100}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 9, "line": 7, "offset": 92}}}], "taint_sink": ["CliLoc", [{"end": {"col": 102, "line": 56, "offset": 1985}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 25, "line": 56, "offset": 1908}}, "'INSERT INTO csrf_chat (authority, message) VALUES (\"admin\", \"'.$message.'\")'"]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 7, "offset": 109}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 20, "line": 7, "offset": 103}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "5b339a7856b6e1e112b72ff16e22ebc4deac1813016d7a9d26cf62a4fcdc445fba7f1c48e38515f61728363913dcbb8d3f50d902f3ba218c3ad04cc12dbecb41_0", "is_ignored": false, "lines": "            $insert_s = 'INSERT INTO csrf_chat (authority, message) VALUES (\"admin\", \"'.$message.'\")';", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "INSERT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$message.'\")'", "end": {"col": 102, "line": 56, "offset": 1985}, "start": {"col": 89, "line": 56, "offset": 1972}}, "$SQLSTR": {"abstract_content": "INSERT INTO csrf_chat (authority, message) VALUES (\"admin\", \"", "end": {"col": 87, "line": 56, "offset": 1970}, "start": {"col": 26, "line": 56, "offset": 1909}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/changing-password/post.php", "start": {"col": 25, "line": 56, "offset": 1908}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 54, "line": 37, "offset": 991}, "extra": {"engine_kind": "OSS", "fingerprint": "ab91f09bafc9d44b7b0621b5e92e0d1a2b2bc9d793b76094c82ed051726485681035a60482433d65afcabb0988906bbc4df0a91bfc35ff7ea5afc7703d9398ea_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 37, "offset": 968}, "start": {"col": 13, "line": 37, "offset": 950}}, "$HTML": {"abstract_content": "isClicked", "end": {"col": 53, "line": 37, "offset": 990}, "start": {"col": 44, "line": 37, "offset": 981}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/follow/assets/js/Chat.js", "start": {"col": 13, "line": 37, "offset": 950}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 57, "line": 39, "offset": 1077}, "extra": {"engine_kind": "OSS", "fingerprint": "96af668d7f0a7f4bd3f85cb78b904bfe4ced242e4575ed80b225cb2c3736026158585cc7001d52c9df2e229d57f7065379e3f9fad2b42d731bc4051b61f2c24c_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isNotClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 39, "offset": 1051}, "start": {"col": 13, "line": 39, "offset": 1033}}, "$HTML": {"abstract_content": "isNotClicked", "end": {"col": 56, "line": 39, "offset": 1076}, "start": {"col": 44, "line": 39, "offset": 1064}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/follow/assets/js/Chat.js", "start": {"col": 13, "line": 39, "offset": 1033}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 97, "line": 48, "offset": 1581}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$message", "location": {"end": {"col": 17, "line": 5, "offset": 63}, "path": "app/lab/csrf/follow/post.php", "start": {"col": 9, "line": 5, "offset": 55}}}, {"content": "$message", "location": {"end": {"col": 17, "line": 5, "offset": 63}, "path": "app/lab/csrf/follow/post.php", "start": {"col": 9, "line": 5, "offset": 55}}}], "taint_sink": ["CliLoc", [{"end": {"col": 97, "line": 48, "offset": 1581}, "path": "app/lab/csrf/follow/post.php", "start": {"col": 21, "line": 48, "offset": 1505}}, "'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")'"]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 5, "offset": 72}, "path": "app/lab/csrf/follow/post.php", "start": {"col": 20, "line": 5, "offset": 66}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "9be679d77913383914395fada9fa3bf8b65eecd4fa529c9c714d7fef46a78cc773f7c5537793badb550146404fbedf05788f3ba5089cb564dc7b35d27e21ebda_0", "is_ignored": false, "lines": "        $insert_s = 'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")';", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "INSERT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$message.'\")'", "end": {"col": 97, "line": 48, "offset": 1581}, "start": {"col": 84, "line": 48, "offset": 1568}}, "$SQLSTR": {"abstract_content": "INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"", "end": {"col": 82, "line": 48, "offset": 1566}, "start": {"col": 22, "line": 48, "offset": 1506}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/follow/post.php", "start": {"col": 21, "line": 48, "offset": 1505}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 54, "line": 37, "offset": 991}, "extra": {"engine_kind": "OSS", "fingerprint": "178f1c0f1666abc7d6bbd7b27388ee4ee304e42b3486007b512aa4812cd07dda06510fd35a568d04ee0f7c1be51c329c1319bfcb25e5a8869d29caff4d1494ca_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 37, "offset": 968}, "start": {"col": 13, "line": 37, "offset": 950}}, "$HTML": {"abstract_content": "isClicked", "end": {"col": 53, "line": 37, "offset": 990}, "start": {"col": 44, "line": 37, "offset": 981}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/money-transfer/assets/js/Chat.js", "start": {"col": 13, "line": 37, "offset": 950}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 57, "line": 39, "offset": 1077}, "extra": {"engine_kind": "OSS", "fingerprint": "823b66cb0d592a743d111839c99db9f909482374764ce2bfbaaad26522a23fa70e71b1717a4a2e623988a225ae53c37269c02558af1c50c51e500c611c2897f1_0", "is_ignored": false, "lines": "            button.children[0].innerHTML = isNotClicked;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "button.children[0]", "end": {"col": 31, "line": 39, "offset": 1051}, "start": {"col": 13, "line": 39, "offset": 1033}}, "$HTML": {"abstract_content": "isNotClicked", "end": {"col": 56, "line": 39, "offset": 1076}, "start": {"col": 44, "line": 39, "offset": 1064}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/money-transfer/assets/js/Chat.js", "start": {"col": 13, "line": 39, "offset": 1033}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 97, "line": 67, "offset": 2663}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$message", "location": {"end": {"col": 17, "line": 5, "offset": 63}, "path": "app/lab/csrf/money-transfer/post.php", "start": {"col": 9, "line": 5, "offset": 55}}}, {"content": "$message", "location": {"end": {"col": 17, "line": 5, "offset": 63}, "path": "app/lab/csrf/money-transfer/post.php", "start": {"col": 9, "line": 5, "offset": 55}}}], "taint_sink": ["CliLoc", [{"end": {"col": 97, "line": 67, "offset": 2663}, "path": "app/lab/csrf/money-transfer/post.php", "start": {"col": 21, "line": 67, "offset": 2587}}, "'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")'"]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 5, "offset": 72}, "path": "app/lab/csrf/money-transfer/post.php", "start": {"col": 20, "line": 5, "offset": 66}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "7594dede26f1e3b18028306bcad361c4d79dbe6e63382ab6b6a87d4943b65868c198a35ee2324eb7f1266a8b41ec6b6ed6e941c8d84015234bd37be8e397e520_0", "is_ignored": false, "lines": "        $insert_s = 'INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"'.$message.'\")';", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "INSERT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$message.'\")'", "end": {"col": 97, "line": 67, "offset": 2663}, "start": {"col": 84, "line": 67, "offset": 2650}}, "$SQLSTR": {"abstract_content": "INSERT INTO csrf_chat (authority, message) VALUES (\"user\", \"", "end": {"col": 82, "line": 67, "offset": 2648}, "start": {"col": 22, "line": 67, "offset": 2588}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/csrf/money-transfer/post.php", "start": {"col": 21, "line": 67, "offset": 2587}}, {"check_id": "php.lang.security.tainted-path-traversal.tainted-path-traversal", "end": {"col": 44, "line": 49, "offset": 2169}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 44, "line": 49, "offset": 2169}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 29, "line": 49, "offset": 2154}}, "include($page);"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "702ccfb04ed60fb0e470ecd1e1a6267aecc0e0f7959e3c6315243050c6af224d6e59507455a4d53b59b72b9d67ba95ce93be46b6d314fe95bd02bb62749a1fef_0", "is_ignored": false, "lines": "                            include($page);", "message": "Detected user input going into a php include or require command, which can lead to path traversal and sensitive data being exposed. These commands can also lead to code execution. Instead, allowlist files that the user can access or rigorously validate user input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-23: Relative Path Traversal"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://medium.com/@emmapinheiro42/php-include-ignore-4a3ba81371af", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27197, "rule_id": "wdUR68", "rv_id": 850738, "url": "https://semgrep.dev/playground/r/zyTWPrR/php.lang.security.tainted-path-traversal.tainted-path-traversal", "version_id": "zyTWPrR"}}, "shortlink": "https://sg.run/WGrg", "source": "https://semgrep.dev/r/php.lang.security.tainted-path-traversal.tainted-path-traversal", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 29, "line": 49, "offset": 2154}}, {"check_id": "php.laravel.security.laravel-path-traversal.laravel-path-traversal", "end": {"col": 42, "line": 49, "offset": 2167}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 42, "line": 49, "offset": 2167}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 37, "line": 49, "offset": 2162}}, "$page"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "c793e0296a17949114ef0c518ea4c1f243655728e22b7e39a616a2b205d9149bbc01382e875f9b16d362e19a30627e9448197a013081e9d828f4a1977c731f82_0", "is_ignored": false, "lines": "                            include($page);", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. In PHP, this can lead to both local file inclusion (LFI) or remote file inclusion (RFI) if user input reaches this statement. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "file::sink::file-access::laravel", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md#path-traversal"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36491, "rule_id": "OrUBb8", "rv_id": 850757, "url": "https://semgrep.dev/playground/r/nWTyq0J/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "version_id": "nWTyq0J"}}, "shortlink": "https://sg.run/5v1K", "source": "https://semgrep.dev/r/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$FILE": {"abstract_content": "$page", "end": {"col": 42, "line": 49, "offset": 2167}, "propagated_value": {"svalue_abstract_content": "$_GET['country']", "svalue_end": {"col": 53, "line": 48, "offset": 2124}, "svalue_start": {"col": 37, "line": 48, "offset": 2108}}, "start": {"col": 37, "line": 49, "offset": 2162}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-1/index.php", "start": {"col": 37, "line": 49, "offset": 2162}}, {"check_id": "php.lang.security.tainted-path-traversal.tainted-path-traversal", "end": {"col": 44, "line": 51, "offset": 2350}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 44, "line": 51, "offset": 2350}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 29, "line": 51, "offset": 2335}}, "include($page);"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "81c541f169b69e523e3a35d431d197e09e3759c0fb48a29e4a5bf8512cee3c2a42f1ef57889185d5347b90529ddbb3db559b6dca3c14306e457bf0505ffc1718_0", "is_ignored": false, "lines": "                            include($page);", "message": "Detected user input going into a php include or require command, which can lead to path traversal and sensitive data being exposed. These commands can also lead to code execution. Instead, allowlist files that the user can access or rigorously validate user input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-23: Relative Path Traversal"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://medium.com/@emmapinheiro42/php-include-ignore-4a3ba81371af", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27197, "rule_id": "wdUR68", "rv_id": 850738, "url": "https://semgrep.dev/playground/r/zyTWPrR/php.lang.security.tainted-path-traversal.tainted-path-traversal", "version_id": "zyTWPrR"}}, "shortlink": "https://sg.run/WGrg", "source": "https://semgrep.dev/r/php.lang.security.tainted-path-traversal.tainted-path-traversal", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 29, "line": 51, "offset": 2335}}, {"check_id": "php.laravel.security.laravel-path-traversal.laravel-path-traversal", "end": {"col": 42, "line": 51, "offset": 2348}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 42, "line": 51, "offset": 2348}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 37, "line": 51, "offset": 2343}}, "$page"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "f22fdbf7abe6cce5b9af032bf93ea61a783289f33307a38d7c787b1576e3907ae091319489f2b56e655c43d6dfc2253a30cbb672369b0532e73dae29e703e278_0", "is_ignored": false, "lines": "                            include($page);", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. In PHP, this can lead to both local file inclusion (LFI) or remote file inclusion (RFI) if user input reaches this statement. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "file::sink::file-access::laravel", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md#path-traversal"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36491, "rule_id": "OrUBb8", "rv_id": 850757, "url": "https://semgrep.dev/playground/r/nWTyq0J/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "version_id": "nWTyq0J"}}, "shortlink": "https://sg.run/5v1K", "source": "https://semgrep.dev/r/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$FILE": {"abstract_content": "$page", "end": {"col": 42, "line": 51, "offset": 2348}, "start": {"col": 37, "line": 51, "offset": 2343}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-2/index.php", "start": {"col": 37, "line": 51, "offset": 2343}}, {"check_id": "php.lang.security.tainted-path-traversal.tainted-path-traversal", "end": {"col": 48, "line": 54, "offset": 2399}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 48, "line": 54, "offset": 2399}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 33, "line": 54, "offset": 2384}}, "include($page);"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "41f2e3a5ecbde273f197c687226f2b4eeffbf9aae1c8aab8283703b037655722dd387415370500037018f6f8f844cf638694023be9087dd2fde041fb3170ece7_0", "is_ignored": false, "lines": "                                include($page);", "message": "Detected user input going into a php include or require command, which can lead to path traversal and sensitive data being exposed. These commands can also lead to code execution. Instead, allowlist files that the user can access or rigorously validate user input.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-23: Relative Path Traversal"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://medium.com/@emmapinheiro42/php-include-ignore-4a3ba81371af", "https://www.acunetix.com/websitesecurity/php-security-2/"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27197, "rule_id": "wdUR68", "rv_id": 850738, "url": "https://semgrep.dev/playground/r/zyTWPrR/php.lang.security.tainted-path-traversal.tainted-path-traversal", "version_id": "zyTWPrR"}}, "shortlink": "https://sg.run/WGrg", "source": "https://semgrep.dev/r/php.lang.security.tainted-path-traversal.tainted-path-traversal", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 33, "line": 54, "offset": 2384}}, {"check_id": "php.laravel.security.laravel-path-traversal.laravel-path-traversal", "end": {"col": 46, "line": 54, "offset": 2397}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$page", "location": {"end": {"col": 34, "line": 48, "offset": 2105}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 29, "line": 48, "offset": 2100}}}], "taint_sink": ["CliLoc", [{"end": {"col": 46, "line": 54, "offset": 2397}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 41, "line": 54, "offset": 2392}}, "$page"]], "taint_source": ["CliLoc", [{"end": {"col": 42, "line": 48, "offset": 2113}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 37, "line": 48, "offset": 2108}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "a8452244cb30d2aaedb33132f377c2fd5603548f07e8c7d029fc15bdbaed8158fa6f49be4367856dfb0f3d03b8c52e94951f05a2696c8e690a0ffa78767f4143_0", "is_ignored": false, "lines": "                                include($page);", "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the file path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. In PHP, this can lead to both local file inclusion (LFI) or remote file inclusion (RFI) if user input reaches this statement. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "file::sink::file-access::laravel", "file::sink::file-access::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md#path-traversal"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36491, "rule_id": "OrUBb8", "rv_id": 850757, "url": "https://semgrep.dev/playground/r/nWTyq0J/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "version_id": "nWTyq0J"}}, "shortlink": "https://sg.run/5v1K", "source": "https://semgrep.dev/r/php.laravel.security.laravel-path-traversal.laravel-path-traversal", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$FILE": {"abstract_content": "$page", "end": {"col": 46, "line": 54, "offset": 2397}, "propagated_value": {"svalue_abstract_content": "$_GET['country']", "svalue_end": {"col": 53, "line": 48, "offset": 2124}, "svalue_start": {"col": 37, "line": 48, "offset": 2108}}, "start": {"col": 41, "line": 54, "offset": 2392}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-inclusion/learn-the-capital-3/index.php", "start": {"col": 41, "line": 54, "offset": 2392}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 7, "offset": 116}, "extra": {"engine_kind": "OSS", "fingerprint": "6172677b0b4268cb641d3ee520d977b79021d9e7dbe30fe7f3dc24fb6543489a2dc762502527d2b71046ea58f85e8c26304d24ed708ac786dfc4168017f70613_0", "is_ignored": false, "lines": "      unlink($upload);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-upload/blacklist-1/delete.php", "start": {"col": 7, "line": 7, "offset": 101}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 7, "offset": 116}, "extra": {"engine_kind": "OSS", "fingerprint": "53dce212d6fd6255c7759eaff3718fa78d5095cdbbdbed8e6bf2172a7dc104ced5ab5aa72de7563add5b4a2a521319ff027108ab8c1f4246a85e1f841cf5325c_0", "is_ignored": false, "lines": "      unlink($upload);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-upload/blacklist-2/delete.php", "start": {"col": 7, "line": 7, "offset": 101}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 7, "offset": 116}, "extra": {"engine_kind": "OSS", "fingerprint": "5cd239495452ef7df63514d005f4bffbbb99ca0dfcbcd161410baeb3ca65583757202ee1d1c485cb0f86cbe3bd84e06127652d404378c922fb6966aa5e121877_0", "is_ignored": false, "lines": "      unlink($upload);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-upload/magic-header/delete.php", "start": {"col": 7, "line": 7, "offset": 101}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 7, "offset": 116}, "extra": {"engine_kind": "OSS", "fingerprint": "a723547de51a40d1442ebacc29b097b24df079fc645e334c4e44f3b0e9e2013a2f9b1b31d3c8cf9dd4ce74ca6ae1c2c849856eb8c7b5ffee0be50ce31e037035_0", "is_ignored": false, "lines": "      unlink($upload);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-upload/mime-type/delete.php", "start": {"col": 7, "line": 7, "offset": 101}}, {"check_id": "php.lang.security.unlink-use.unlink-use", "end": {"col": 22, "line": 7, "offset": 116}, "extra": {"engine_kind": "OSS", "fingerprint": "205eb32956c629e251c8b91a8ae3bc7bc113784423b2c79fdaa9090e3c56c33b659129d45370aaed277406627734c446b8eaa112b661d41a3cbaed2277a281ee_0", "is_ignored": false, "lines": "      unlink($upload);", "message": "Using user input when deleting files with `unlink()` is potentially dangerous. A malicious actor could use this to modify or access files they have no right to.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://www.php.net/manual/en/function.unlink", "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13969, "rule_id": "eqUzDE", "rv_id": 834281, "url": "https://semgrep.dev/playground/r/9lTJ0jz/php.lang.security.unlink-use.unlink-use", "version_id": "9lTJ0jz"}}, "shortlink": "https://sg.run/rYeR", "source": "https://semgrep.dev/r/php.lang.security.unlink-use.unlink-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Path Traversal"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/file-upload/unrestricted/delete.php", "start": {"col": 7, "line": 7, "offset": 101}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 63, "line": 115, "offset": 5555}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$text", "location": {"end": {"col": 28, "line": 114, "offset": 5475}, "path": "app/lab/idor/shopping-cart/index.php", "start": {"col": 23, "line": 114, "offset": 5470}}}], "taint_sink": ["CliLoc", [{"end": {"col": 63, "line": 115, "offset": 5555}, "path": "app/lab/idor/shopping-cart/index.php", "start": {"col": 23, "line": 115, "offset": 5515}}, "echo $strings['alert_purchased'] .$text;"]], "taint_source": ["CliLoc", [{"end": {"col": 44, "line": 114, "offset": 5491}, "path": "app/lab/idor/shopping-cart/index.php", "start": {"col": 31, "line": 114, "offset": 5478}}, "$_GET['text']"]]}, "engine_kind": "OSS", "fingerprint": "f22763ed25dacdd4e2032befd9cf501624c7208cd2557b4a4ed1e6b60b9bd69f2c2d7f00dc83e3bdbaaf98ab895bb5c8a9805a8625e390574b728da97aa28286_0", "is_ignored": false, "lines": "                      echo $strings['alert_purchased'] .$text; ?>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 36, "line": 114, "offset": 5483}, "start": {"col": 31, "line": 114, "offset": 5478}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/idor/shopping-cart/index.php", "start": {"col": 23, "line": 115, "offset": 5515}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 88, "line": 40, "offset": 1411}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$total", "location": {"end": {"col": 19, "line": 23, "offset": 566}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 13, "line": 23, "offset": 560}}}], "taint_sink": ["CliLoc", [{"end": {"col": 88, "line": 40, "offset": 1411}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 112, "line": 38, "offset": 1213}}, "'</b> <br> <hr>'.\n                    $strings[\"alert_number_of_tickets\"].'<b> '.$_POST['amount'].'</b> <br>'.\n                    $strings[\"alert_money\"].'<b> '.$total.' '.$strings[\"money_symbol\"]."]], "taint_source": ["CliLoc", [{"end": {"col": 33, "line": 23, "offset": 580}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 27, "line": 23, "offset": 574}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "ba924dbf3119723e6ae790f2a1df868ad448fd374e27e03eb66517d00457d2c76b416ddc3cf112da51be3f03b96e5c1e5449962f58b1352aef3b85bd4ebfe39a_0", "is_ignored": false, "lines": "                    $message1 = '<div class=\"alert alert-success\" role=\"alert\"> <b>'.$strings[\"alert_success\"].'</b> <br> <hr>'.\n                    $strings[\"alert_number_of_tickets\"].'<b> '.$_POST['amount'].'</b> <br>'.\n                    $strings[\"alert_money\"].'<b> '.$total.' '.$strings[\"money_symbol\"].'</b> </div>';", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "'", "end": {"col": 58, "line": 39, "offset": 1288}, "start": {"col": 57, "line": 39, "offset": 1287}}, "$2": {"abstract_content": "'", "end": {"col": 92, "line": 39, "offset": 1322}, "start": {"col": 91, "line": 39, "offset": 1321}}, "$ENDTAG": {"abstract_content": "'<b> '$_POST['amount']'</b> <br>'$strings[\"alert_money\"]'<b> '$total' '$strings[\"money_symbol\"]........'</b> </div>'", "end": {"col": 101, "line": 40, "offset": 1424}, "start": {"col": 57, "line": 39, "offset": 1287}}, "$PHP": {"abstract_content": "'</b> <br> <hr>'$strings[\"alert_number_of_tickets\"].", "end": {"col": 88, "line": 40, "offset": 1411}, "start": {"col": 112, "line": 38, "offset": 1213}}, "$TAG": {"abstract_content": "'<div class=\"alert alert-success\" role=\"alert\"> <b>'$strings[\"alert_success\"].", "end": {"col": 88, "line": 40, "offset": 1411}, "start": {"col": 33, "line": 38, "offset": 1134}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 112, "line": 38, "offset": 1213}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 99, "line": 89, "offset": 2977}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$total", "location": {"end": {"col": 19, "line": 23, "offset": 566}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 13, "line": 23, "offset": 560}}}, {"content": "$money_in_account", "location": {"end": {"col": 34, "line": 30, "offset": 794}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 17, "line": 30, "offset": 777}}}], "taint_sink": ["CliLoc", [{"end": {"col": 99, "line": 89, "offset": 2977}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 76, "line": 89, "offset": 2954}}, "echo $money_in_account;"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 23, "offset": 596}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 27, "line": 23, "offset": 574}}, "$_POST['ticket_money']"]]}, "engine_kind": "OSS", "fingerprint": "56b91c23d608d48c263cda099e4f027cfc7e748a75331d57f60caa1ed6ef617c805512af732174801935faa2d52bb56967e48eb1c2b47fd97935e21ae6996b3f_0", "is_ignored": false, "lines": "                            <?= $strings[\"money_in_account\"]; ?> <b> <?php echo $money_in_account; ?> <?= $strings[\"money_symbol\"]; ?> </b>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 33, "line": 23, "offset": 580}, "start": {"col": 27, "line": 23, "offset": 574}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 76, "line": 89, "offset": 2954}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 40, "line": 100, "offset": 3370}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$total", "location": {"end": {"col": 19, "line": 23, "offset": 566}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 13, "line": 23, "offset": 560}}}, {"content": "$message1", "location": {"end": {"col": 30, "line": 38, "offset": 1131}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 21, "line": 38, "offset": 1122}}}], "taint_sink": ["CliLoc", [{"end": {"col": 40, "line": 100, "offset": 3370}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 25, "line": 100, "offset": 3355}}, "echo $message1;"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 23, "offset": 596}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 27, "line": 23, "offset": 574}}, "$_POST['ticket_money']"]]}, "engine_kind": "OSS", "fingerprint": "56b91c23d608d48c263cda099e4f027cfc7e748a75331d57f60caa1ed6ef617c805512af732174801935faa2d52bb56967e48eb1c2b47fd97935e21ae6996b3f_1", "is_ignored": false, "lines": "                        echo $message1;", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_POST", "end": {"col": 33, "line": 23, "offset": 580}, "start": {"col": 27, "line": 23, "offset": 574}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/idor/ticket-sales/index.php", "start": {"col": 25, "line": 100, "offset": 3355}}, {"check_id": "php.lang.security.unserialize-use.unserialize-use", "end": {"col": 75, "line": 11, "offset": 261}, "extra": {"engine_kind": "OSS", "fingerprint": "1618b3d3db040d57fb3f6d1c129044bfa1b7982235066745f097ed0c5fd20444a62c4aee317f16fd8b9d84594e510e9213954192f4ad273cca544961f67f1803_0", "is_ignored": false, "lines": "    $user = unserialize( base64_decode( $_COOKIE['V2VsY29tZS1hZG1pbgo'] ));", "message": "Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution. Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.php.net/manual/en/function.unserialize.php", "https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13970, "rule_id": "v8U9OJ", "rv_id": 834282, "url": "https://semgrep.dev/playground/r/yeTN16L/php.lang.security.unserialize-use.unserialize-use", "version_id": "yeTN16L"}}, "shortlink": "https://sg.run/b24E", "source": "https://semgrep.dev/r/php.lang.security.unserialize-use.unserialize-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/admin-account-1/index.php", "start": {"col": 13, "line": 11, "offset": 199}}, {"check_id": "php.lang.security.unserialize-use.unserialize-use", "end": {"col": 98, "line": 11, "offset": 302}, "extra": {"engine_kind": "OSS", "fingerprint": "1726c684e3e8b4ae7b95f16c16dca7276b793119f5704ff6cbd66fa40a1f772b71297d5e07079b6fe9f726986c90d66de845b30fe49f2b5085a1e5ca7cfe9c68_0", "is_ignored": false, "lines": "    $user = unserialize( urldecode( base64_decode ( $_COOKIE['d2VsY29tZS1hZG1pbmlzdHJhdG9y'] ) ));", "message": "Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution. Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.php.net/manual/en/function.unserialize.php", "https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13970, "rule_id": "v8U9OJ", "rv_id": 834282, "url": "https://semgrep.dev/playground/r/yeTN16L/php.lang.security.unserialize-use.unserialize-use", "version_id": "yeTN16L"}}, "shortlink": "https://sg.run/b24E", "source": "https://semgrep.dev/r/php.lang.security.unserialize-use.unserialize-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/admin-account-2/index.php", "start": {"col": 13, "line": 11, "offset": 217}}, {"check_id": "php.lang.security.unserialize-use.unserialize-use", "end": {"col": 100, "line": 15, "offset": 343}, "extra": {"engine_kind": "OSS", "fingerprint": "73586c2ed28558a8fc763369d889aa620eed13fc0b82700d1a6ae849d9831257033fdf1f3ce48b69831d05a52f7c39043583fd6759ab8b479f4d1d234215e19a_0", "is_ignored": false, "lines": "    $user = unserialize( urldecode( base64_decode ( $_COOKIE['Z3JhbnQtZnVsbC1wcml2aWxpZ2VzCg'] ) ));", "message": "Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution. Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.php.net/manual/en/function.unserialize.php", "https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13970, "rule_id": "v8U9OJ", "rv_id": 834282, "url": "https://semgrep.dev/playground/r/yeTN16L/php.lang.security.unserialize-use.unserialize-use", "version_id": "yeTN16L"}}, "shortlink": "https://sg.run/b24E", "source": "https://semgrep.dev/r/php.lang.security.unserialize-use.unserialize-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 13, "line": 15, "offset": 256}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 64, "line": 58, "offset": 1314}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$user", "location": {"end": {"col": 10, "line": 15, "offset": 253}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 5, "line": 15, "offset": 248}}}, {"content": "$permissions", "location": {"end": {"col": 15, "line": 54, "offset": 1123}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 54, "offset": 1111}}}, {"content": "$delete", "location": {"end": {"col": 10, "line": 55, "offset": 1155}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 55, "offset": 1148}}}], "taint_sink": ["CliLoc", [{"end": {"col": 64, "line": 58, "offset": 1314}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 58, "offset": 1265}}, "$strings['delete'].\" : \".canDo($delete,$strings)."]], "taint_source": ["CliLoc", [{"end": {"col": 61, "line": 15, "offset": 304}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 53, "line": 15, "offset": 296}}, "$_COOKIE"]]}, "engine_kind": "OSS", "fingerprint": "2f60693002daa824f4993fd4e6abd7721c2a8ea1ff1084136578b706276cb70a16eb6209c49412c842fa244509f2c97664544919f0d3b95f3f804418fa082347_0", "is_ignored": false, "lines": "  echo \"<h1>\".$strings['delete'].\" : \".canDo($delete,$strings).\"</h1>\";", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "\"", "end": {"col": 9, "line": 58, "offset": 1259}, "start": {"col": 8, "line": 58, "offset": 1258}}, "$2": {"abstract_content": "\"", "end": {"col": 14, "line": 58, "offset": 1264}, "start": {"col": 13, "line": 58, "offset": 1263}}, "$ENDTAG": {"abstract_content": "canDo($delete$strings).\"</h1>\"", "end": {"col": 71, "line": 58, "offset": 1321}, "start": {"col": 40, "line": 58, "offset": 1290}}, "$PHP": {"abstract_content": "$strings['delete']\" : \".", "end": {"col": 64, "line": 58, "offset": 1314}, "start": {"col": 15, "line": 58, "offset": 1265}}, "$TAG": {"abstract_content": "\"<h1>\"", "end": {"col": 14, "line": 58, "offset": 1264}, "start": {"col": 8, "line": 58, "offset": 1258}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 58, "offset": 1265}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 64, "line": 59, "offset": 1386}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$user", "location": {"end": {"col": 10, "line": 15, "offset": 253}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 5, "line": 15, "offset": 248}}}, {"content": "$permissions", "location": {"end": {"col": 15, "line": 54, "offset": 1123}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 54, "offset": 1111}}}, {"content": "$update", "location": {"end": {"col": 10, "line": 56, "offset": 1192}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 56, "offset": 1185}}}], "taint_sink": ["CliLoc", [{"end": {"col": 64, "line": 59, "offset": 1386}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 59, "offset": 1337}}, "$strings['update'].\" : \".canDo($update,$strings)."]], "taint_source": ["CliLoc", [{"end": {"col": 61, "line": 15, "offset": 304}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 53, "line": 15, "offset": 296}}, "$_COOKIE"]]}, "engine_kind": "OSS", "fingerprint": "843b54d9b7a73cbf12bf1f66758fb06e48e263a8f8fc032eeb843b30358455b87feefe0ca0e45b092a249809a78f532b9709a017f59d688a57a0625687cd71c6_0", "is_ignored": false, "lines": "  echo \"<h1>\".$strings['update'].\" : \".canDo($update,$strings).\"</h1>\";", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "\"", "end": {"col": 9, "line": 59, "offset": 1331}, "start": {"col": 8, "line": 59, "offset": 1330}}, "$2": {"abstract_content": "\"", "end": {"col": 14, "line": 59, "offset": 1336}, "start": {"col": 13, "line": 59, "offset": 1335}}, "$ENDTAG": {"abstract_content": "canDo($update$strings).\"</h1>\"", "end": {"col": 71, "line": 59, "offset": 1393}, "start": {"col": 40, "line": 59, "offset": 1362}}, "$PHP": {"abstract_content": "$strings['update']\" : \".", "end": {"col": 64, "line": 59, "offset": 1386}, "start": {"col": 15, "line": 59, "offset": 1337}}, "$TAG": {"abstract_content": "\"<h1>\"", "end": {"col": 14, "line": 59, "offset": 1336}, "start": {"col": 8, "line": 59, "offset": 1330}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 59, "offset": 1337}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 58, "line": 60, "offset": 1452}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$user", "location": {"end": {"col": 10, "line": 15, "offset": 253}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 5, "line": 15, "offset": 248}}}, {"content": "$permissions", "location": {"end": {"col": 15, "line": 54, "offset": 1123}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 54, "offset": 1111}}}, {"content": "$add", "location": {"end": {"col": 7, "line": 57, "offset": 1226}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 3, "line": 57, "offset": 1222}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 60, "offset": 1452}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 60, "offset": 1409}}, "$strings['add'].\" : \".canDo($add,$strings)."]], "taint_source": ["CliLoc", [{"end": {"col": 61, "line": 15, "offset": 304}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 53, "line": 15, "offset": 296}}, "$_COOKIE"]]}, "engine_kind": "OSS", "fingerprint": "24b0e9a60a48155abe7531709e107406673724c6a4026d80bc71c3d62ee9ed1541c9b0b23cd5f3a53180e32e37a0b16d7ae31fdf19f965c8304d409c71c8e9fa_0", "is_ignored": false, "lines": "  echo \"<h1>\".$strings['add'].\" : \".canDo($add,$strings).\"</h1>\";", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "\"", "end": {"col": 9, "line": 60, "offset": 1403}, "start": {"col": 8, "line": 60, "offset": 1402}}, "$2": {"abstract_content": "\"", "end": {"col": 14, "line": 60, "offset": 1408}, "start": {"col": 13, "line": 60, "offset": 1407}}, "$ENDTAG": {"abstract_content": "canDo($add$strings).\"</h1>\"", "end": {"col": 65, "line": 60, "offset": 1459}, "start": {"col": 37, "line": 60, "offset": 1431}}, "$PHP": {"abstract_content": "$strings['add']\" : \".", "end": {"col": 58, "line": 60, "offset": 1452}, "start": {"col": 15, "line": 60, "offset": 1409}}, "$TAG": {"abstract_content": "\"<h1>\"", "end": {"col": 14, "line": 60, "offset": 1408}, "start": {"col": 8, "line": 60, "offset": 1402}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/full-privileges/index.php", "start": {"col": 15, "line": 60, "offset": 1409}}, {"check_id": "php.lang.security.unserialize-use.unserialize-use", "end": {"col": 64, "line": 14, "offset": 263}, "extra": {"engine_kind": "OSS", "fingerprint": "39311f66ed71924a849a0bf7db5a39fbbbee3e1a1a62df329d80e72be63c24dbffd017873f47018b282f2289bfd35475caeebd668610b5b20e745084d6fb375c_0", "is_ignored": false, "lines": "    $user = unserialize(base64_decode ( $_COOKIE['Session'] ) );", "message": "Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution. Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://www.php.net/manual/en/function.unserialize.php", "https://owasp.org/www-project-top-ten/2017/A8_2017-Insecure_Deserialization.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13970, "rule_id": "v8U9OJ", "rv_id": 834282, "url": "https://semgrep.dev/playground/r/yeTN16L/php.lang.security.unserialize-use.unserialize-use", "version_id": "yeTN16L"}}, "shortlink": "https://sg.run/b24E", "source": "https://semgrep.dev/r/php.lang.security.unserialize-use.unserialize-use", "subcategory": ["audit"], "technology": ["php"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 13, "line": 14, "offset": 212}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 31, "line": 82, "offset": 1677}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$user", "location": {"end": {"col": 10, "line": 14, "offset": 209}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 5, "line": 14, "offset": 204}}}, {"content": "$randomNames", "location": {"end": {"col": 17, "line": 15, "offset": 281}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 5, "line": 15, "offset": 269}}}, {"content": "$randomName", "location": {"end": {"col": 46, "line": 79, "offset": 1622}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 35, "line": 79, "offset": 1611}}}], "taint_sink": ["CliLoc", [{"end": {"col": 31, "line": 82, "offset": 1677}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 20, "line": 82, "offset": 1666}}, "$randomName"]], "taint_source": ["CliLoc", [{"end": {"col": 49, "line": 14, "offset": 248}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 41, "line": 14, "offset": 240}}, "$_COOKIE"]]}, "engine_kind": "OSS", "fingerprint": "e7466e83315d8e5335167612ca6bf89e8a961e554fa2caff71e1ed0e04f0e87a16f6de33710f794158b58d7dd4407eb3191bd414320d012f1b72c131d2e7c6a4_0", "is_ignored": false, "lines": "       echo \"<td>\".$randomName.\"</td>\";", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "\"", "end": {"col": 14, "line": 82, "offset": 1660}, "start": {"col": 13, "line": 82, "offset": 1659}}, "$2": {"abstract_content": "\"", "end": {"col": 19, "line": 82, "offset": 1665}, "start": {"col": 18, "line": 82, "offset": 1664}}, "$ENDTAG": {"abstract_content": "\"</td>\"", "end": {"col": 39, "line": 82, "offset": 1685}, "start": {"col": 32, "line": 82, "offset": 1678}}, "$PHP": {"abstract_content": "$randomName", "end": {"col": 31, "line": 82, "offset": 1677}, "start": {"col": 20, "line": 82, "offset": 1666}}, "$TAG": {"abstract_content": "\"<td>\"", "end": {"col": 19, "line": 82, "offset": 1665}, "start": {"col": 13, "line": 82, "offset": 1659}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/insecure-deserialization/random-nick-generator/index.php", "start": {"col": 20, "line": 82, "offset": 1666}}, {"check_id": "php.lang.security.injection.tainted-filename.tainted-filename", "end": {"col": 91, "line": 30, "offset": 895}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$productId", "location": {"end": {"col": 27, "line": 27, "offset": 702}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 27, "offset": 692}}}, {"content": "$productId", "location": {"end": {"col": 27, "line": 27, "offset": 702}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 27, "offset": 692}}}, {"content": "$filePath", "location": {"end": {"col": 26, "line": 29, "offset": 767}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 29, "offset": 758}}}, {"content": "$filePath", "location": {"end": {"col": 26, "line": 29, "offset": 767}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 29, "offset": 758}}}], "taint_sink": ["CliLoc", [{"end": {"col": 91, "line": 30, "offset": 895}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 50, "line": 30, "offset": 854}}, "\"/var/www/html/lab/path/img/\" . $filePath"]], "taint_source": ["CliLoc", [{"end": {"col": 35, "line": 27, "offset": 710}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 30, "line": 27, "offset": 705}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "8e02136c5dd748441ae1a5084ba4c2b0fcd17a7275c6b22498f0931ade1b647325cd761420f1dace9c6b94db0faf3556063edd6547badd1e181e65d957d80222_0", "is_ignored": false, "lines": "                $fileContent = file_get_contents(\"/var/www/html/lab/path/img/\" . $filePath);", "message": "File name based on user input risks server-side request forgery.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 16250, "rule_id": "5rUpro", "rv_id": 834265, "url": "https://semgrep.dev/playground/r/BjTe09O/php.lang.security.injection.tainted-filename.tainted-filename", "version_id": "BjTe09O"}}, "shortlink": "https://sg.run/Ayqp", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$FILENAME": {"abstract_content": "\"/var/www/html/lab/path/img/\".$filePath", "end": {"col": 91, "line": 30, "offset": 895}, "start": {"col": 50, "line": 30, "offset": 854}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 50, "line": 30, "offset": 854}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 59, "line": 36, "offset": 1119}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$productId", "location": {"end": {"col": 27, "line": 27, "offset": 702}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 27, "offset": 692}}}], "taint_sink": ["CliLoc", [{"end": {"col": 59, "line": 36, "offset": 1119}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 36, "offset": 1077}}, "echo '<img src=\"img/' . $productId . '\">';"]], "taint_source": ["CliLoc", [{"end": {"col": 48, "line": 27, "offset": 723}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 30, "line": 27, "offset": 705}}, "$_GET['productId']"]]}, "engine_kind": "OSS", "fingerprint": "0b6c9bda671dc4b9af011dd8ffb82bd0d957986cc5fec229e72d37e6cdd7ebeab33249e6e42fc3739af1607b4c00ca04efff4a16f26b7f5719cf2ce9ee3e9f73_0", "is_ignored": false, "lines": "                echo '<img src=\"img/' . $productId . '\">';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 35, "line": 27, "offset": 710}, "start": {"col": 30, "line": 27, "offset": 705}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/path-traversal/path-traversal-2/product-detail.php", "start": {"col": 17, "line": 36, "offset": 1077}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 67, "line": 16, "offset": 447}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$email", "location": {"end": {"col": 11, "line": 11, "offset": 234}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 5, "line": 11, "offset": 228}}}, {"content": "$email", "location": {"end": {"col": 11, "line": 11, "offset": 234}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 5, "line": 11, "offset": 228}}}], "taint_sink": ["CliLoc", [{"end": {"col": 67, "line": 16, "offset": 447}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 23, "line": 16, "offset": 403}}, "\"SELECT * FROM kayit WHERE email = '$email'\""]], "taint_source": ["CliLoc", [{"end": {"col": 37, "line": 11, "offset": 260}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 31, "line": 11, "offset": 254}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "3513e0e5690b3ed537fe5ee92eb4ded83c44fbd2af16f097e4318f33199ff02cdbbf3a3b2e4dae58ea7b4230c60d9245c94443177c55e33dc2e47d4b6a729329_0", "is_ignored": false, "lines": "        $kontrolSql = \"SELECT * FROM kayit WHERE email = '$email'\";", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "SELECT * FROM kayit WHERE email = '", "end": {"col": 59, "line": 16, "offset": 439}, "start": {"col": 24, "line": 16, "offset": 404}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 23, "line": 16, "offset": 403}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 110, "line": 24, "offset": 1000}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$ad", "location": {"end": {"col": 8, "line": 9, "offset": 141}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 5, "line": 9, "offset": 138}}}, {"content": "$ad", "location": {"end": {"col": 8, "line": 9, "offset": 141}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 5, "line": 9, "offset": 138}}}], "taint_sink": ["CliLoc", [{"end": {"col": 110, "line": 24, "offset": 1000}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 24, "line": 24, "offset": 914}}, "\"INSERT INTO kayit (ad, soyad, email, tel) VALUES ('$ad', '$soyad', '$email', '$tel')\""]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 9, "offset": 167}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 28, "line": 9, "offset": 161}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "32728a831fb9e4f0ea4da603e1a03f469fdba31cf31e6e6679a3d410a6abe167736a5e7906068c8e10cf9aa02441e07d3681fe2139a9ba7e4c35d0b33c0c6567_0", "is_ignored": false, "lines": "            $ekleSql = \"INSERT INTO kayit (ad, soyad, email, tel) VALUES ('$ad', '$soyad', '$email', '$tel')\";", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "INSERT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "INSERT INTO kayit (ad, soyad, email, tel) VALUES ('", "end": {"col": 76, "line": 24, "offset": 966}, "start": {"col": 25, "line": 24, "offset": 915}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/race-condition/race-condition1/index.php", "start": {"col": 24, "line": 24, "offset": 914}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 87, "line": 91, "offset": 3598}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 87, "line": 91, "offset": 3598}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 73, "line": 90, "offset": 3484}}, "\"SELECT * FROM users WHERE \n                                                name LIKE '%\" . $_GET['search'] . \"%'\""]], "taint_source": ["CliLoc", [{"end": {"col": 70, "line": 91, "offset": 3581}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 65, "line": 91, "offset": 3576}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "ade66f01d026208237a2dce382c873dadb92b843f3c57dea57c2e75faf18b185060050f0a1a735981820e79e250733da6f8a028774abf16cf6f7c79ce674aee1_0", "is_ignored": false, "lines": "                                                $query = $mysqli->query(\"SELECT * FROM users WHERE \n                                                name LIKE '%\" . $_GET['search'] . \"%'\");", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$_GET['search'].\"%'\"", "end": {"col": 87, "line": 91, "offset": 3598}, "start": {"col": 65, "line": 91, "offset": 3576}}, "$SQLSTR": {"abstract_content": "SELECT * FROM users WHERE \n                                                name LIKE '%", "end": {"col": 61, "line": 91, "offset": 3572}, "start": {"col": 74, "line": 90, "offset": 3485}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 73, "line": 90, "offset": 3484}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 55, "line": 104, "offset": 4223}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$query", "location": {"end": {"col": 55, "line": 90, "offset": 3466}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 49, "line": 90, "offset": 3460}}}, {"content": "$list", "location": {"end": {"col": 60, "line": 92, "offset": 3660}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 55, "line": 92, "offset": 3655}}}], "taint_sink": ["CliLoc", [{"end": {"col": 55, "line": 104, "offset": 4223}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 53, "line": 94, "offset": 3788}}, "echo '\n                                                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['id'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['username'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['email'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['name'].'</td>\n                                  <td>'.$list['surname'].'</td>\n                                  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n                                                    ';"]], "taint_source": ["CliLoc", [{"end": {"col": 80, "line": 91, "offset": 3591}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 65, "line": 91, "offset": 3576}}, "$_GET['search']"]]}, "engine_kind": "OSS", "fingerprint": "c7cf9476f2d5699d39d8cdf815fd556fe51004320152b4ef2ad1673f44220af90e9a4deeae15881515ae1291593f892b5f9c8db01323c8ccf5cc14cb39f26cad_0", "is_ignored": false, "lines": "                                                    echo '\n                                                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['id'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['username'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['email'].'</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>'.$list['name'].'</td>\n                                  <td>'.$list['surname'].'</td>\n                                  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n                                                    ';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 70, "line": 91, "offset": 3581}, "start": {"col": 65, "line": 91, "offset": 3576}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/find-password/index.php", "start": {"col": 53, "line": 94, "offset": 3788}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 24, "line": 34, "offset": 1421}, "extra": {"engine_kind": "OSS", "fingerprint": "ba9392f1a268e1d770761801b867bba6ef4307a6329c8f089ddcbb379b5bd43b31692447c4868e04d470947825ae356742b673d439ac266bb436c0511d07cf66_0", "is_ignored": false, "lines": "                <form action=\"\" method=\"POST\" class=\"row justify-content-center\" style=\"margin: 2vh 0vh 6vh 0vh;\">\n                    <div class=\"col-md-10 button-con row justify-content-evenly \">\n                        <div class=\"bottom justify-content-center\" style=\"text-align: center;\">\n                            <img class=\"shadow-lg bg-body rounded img-fluid\" style=\"width:760px;padding : 0; margin-bottom: 0;\" src=\"images/1.png\" />\n                        </div>\n                        <div class=\"btn-group w-75 mt-3\">\n                            <button class=\"btn btn-warning\" type=\"submit\" name=\"next\" value=\"3\">\u0130leri</button>\n                            <button class=\"btn btn-primary\" type=\"submit\" name=\"prev\" value=\"1\">Geri</button>\n                        </div>\n                    </div>\n                </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 45, "line": 24, "offset": 629}, "start": {"col": 41, "line": 24, "offset": 625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/get-blind-error/deneme.html", "start": {"col": 17, "line": 24, "offset": 601}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 62, "line": 34, "offset": 789}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$img", "location": {"end": {"col": 9, "line": 32, "offset": 710}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 32, "offset": 706}}}, {"content": "$img", "location": {"end": {"col": 9, "line": 32, "offset": 710}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 32, "offset": 706}}}], "taint_sink": ["CliLoc", [{"end": {"col": 62, "line": 34, "offset": 789}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 24, "line": 34, "offset": 751}}, "\"SELECT * FROM images WHERE id = $img\""]], "taint_source": ["CliLoc", [{"end": {"col": 17, "line": 32, "offset": 718}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 12, "line": 32, "offset": 713}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "d1c32b753555f1092faf2f96a9977d28fe67228be934fbeb813d85f6f0a345aa046ab5e6729db9bf014d889ab44e62d782129595693d11d9763e7223248ba59d_0", "is_ignored": false, "lines": "    $user = $db->query(\"SELECT * FROM images WHERE id = $img\");", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "SELECT * FROM images WHERE id = ", "end": {"col": 57, "line": 34, "offset": 784}, "start": {"col": 25, "line": 34, "offset": 752}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 24, "line": 34, "offset": 751}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 206, "line": 74, "offset": 2340}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$_GET", "location": {"end": {"col": 10, "line": 23, "offset": 520}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 23, "offset": 515}}}, {"content": "$img", "location": {"end": {"col": 9, "line": 32, "offset": 710}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 32, "offset": 706}}}, {"content": "$user", "location": {"end": {"col": 10, "line": 34, "offset": 737}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 34, "offset": 732}}}, {"content": "$data", "location": {"end": {"col": 42, "line": 70, "offset": 2031}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 37, "line": 70, "offset": 2026}}}], "taint_sink": ["CliLoc", [{"end": {"col": 206, "line": 74, "offset": 2340}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 37, "line": 74, "offset": 2171}}, "echo '<img class=\"shadow bg-body rounded img-fluid\" style=\"width:765px; height: 400px; object-fit: cover; padding : 0; margin-bottom: 0;\" src=\"' . $data['path'] . '\"/>';"]], "taint_source": ["CliLoc", [{"end": {"col": 17, "line": 23, "offset": 527}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 5, "line": 23, "offset": 515}}, "$_GET['img']"]]}, "engine_kind": "OSS", "fingerprint": "cfafe7bbcb8c12b23f853c7d083398901b6bd54a7370667a019eefb7d262fc18380a279762e98336e083fe4a9ac9ce2d6d080023c9a4b453bd46bbe7c30f8b79_0", "is_ignored": false, "lines": "                                    echo '<img class=\"shadow bg-body rounded img-fluid\" style=\"width:765px; height: 400px; object-fit: cover; padding : 0; margin-bottom: 0;\" src=\"' . $data['path'] . '\"/>';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 10, "line": 23, "offset": 520}, "start": {"col": 5, "line": 23, "offset": 515}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/get-blind-error/index.php", "start": {"col": 37, "line": 74, "offset": 2171}}, {"check_id": "php.lang.security.injection.tainted-callable.tainted-callable", "end": {"col": 84, "line": 13, "offset": 301}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$search", "location": {"end": {"col": 12, "line": 9, "offset": 185}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 5, "line": 9, "offset": 178}}}, {"content": "$search", "location": {"end": {"col": 12, "line": 9, "offset": 185}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 5, "line": 9, "offset": 178}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 13, "offset": 301}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 31, "line": 13, "offset": 248}}, "\"SELECT * FROM stocks WHERE name = '\" . $search . \"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 9, "offset": 194}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 15, "line": 9, "offset": 188}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "4224b73e69e7efdb0471971bd409f117512abec42411a47d62d8dc956e392ad0ed9d27e8ef4d5d9d4a1eb854693ea42c74849c8dcccfbcad20f5d8fa147c0ca0_0", "is_ignored": false, "lines": "        $query = $db->prepare(\"SELECT * FROM stocks WHERE name = '\" . $search . \"'\");", "message": "Callable based on user input risks remote code execution.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-94: Improper Control of Generation of Code ('Code Injection')"], "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.types.callable.php"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 141958, "rule_id": "0oULBKK", "rv_id": 906493, "url": "https://semgrep.dev/playground/r/X0TA1AZ/php.lang.security.injection.tainted-callable.tainted-callable", "version_id": "X0TA1AZ"}}, "shortlink": "https://sg.run/YGb33", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-callable.tainted-callable", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$CALLABLE": {"abstract_content": "\"SELECT * FROM stocks WHERE name = '\".$search.\"'\"", "end": {"col": 84, "line": 13, "offset": 301}, "start": {"col": 31, "line": 13, "offset": 248}}, "$EVLOOP": {"abstract_content": "$db", "end": {"col": 21, "line": 13, "offset": 238}, "propagated_value": {"svalue_abstract_content": "new PDO'mysql:host=localhost; dbname=sql_injection''sql_injection'''", "svalue_end": {"col": 80, "line": 6, "offset": 139}, "svalue_start": {"col": 7, "line": 6, "offset": 66}}, "start": {"col": 18, "line": 13, "offset": 235}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 31, "line": 13, "offset": 248}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 84, "line": 13, "offset": 301}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$search", "location": {"end": {"col": 12, "line": 9, "offset": 185}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 5, "line": 9, "offset": 178}}}, {"content": "$search", "location": {"end": {"col": 12, "line": 9, "offset": 185}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 5, "line": 9, "offset": 178}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 13, "offset": 301}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 31, "line": 13, "offset": 248}}, "\"SELECT * FROM stocks WHERE name = '\" . $search . \"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 9, "offset": 194}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 15, "line": 9, "offset": 188}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "e32521f16fc5678aa404b665eacdcbe32760aa782f0052167da389ef4e63cccce354dcebfa81d8b35cd940361842118cbcc9bb4b923f416db0af673b294c0241_0", "is_ignored": false, "lines": "        $query = $db->prepare(\"SELECT * FROM stocks WHERE name = '\" . $search . \"'\");", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$search.\"'\"", "end": {"col": 84, "line": 13, "offset": 301}, "start": {"col": 71, "line": 13, "offset": 288}}, "$SQLSTR": {"abstract_content": "SELECT * FROM stocks WHERE name = '", "end": {"col": 67, "line": 13, "offset": 284}, "start": {"col": 32, "line": 13, "offset": 249}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/post-blind-boolean/index.php", "start": {"col": 31, "line": 13, "offset": 248}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 76, "line": 15, "offset": 366}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$email", "location": {"end": {"col": 15, "line": 14, "offset": 271}, "path": "app/lab/sql-injection/post-blind-time/index.php", "start": {"col": 9, "line": 14, "offset": 265}}}, {"content": "$email", "location": {"end": {"col": 15, "line": 14, "offset": 271}, "path": "app/lab/sql-injection/post-blind-time/index.php", "start": {"col": 9, "line": 14, "offset": 265}}}], "taint_sink": ["CliLoc", [{"end": {"col": 76, "line": 15, "offset": 366}, "path": "app/lab/sql-injection/post-blind-time/index.php", "start": {"col": 30, "line": 15, "offset": 320}}, "\"SELECT * FROM users WHERE email = '{$email}'\""]], "taint_source": ["CliLoc", [{"end": {"col": 24, "line": 14, "offset": 280}, "path": "app/lab/sql-injection/post-blind-time/index.php", "start": {"col": 18, "line": 14, "offset": 274}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "8703e4da7dc6ec683c3589e63eb4194de4c1e7626cea04a021b77237d40a021950577492f972ba724382c9d26221e890e6773c2ba216cfd15370e701caa2d2a5_0", "is_ignored": false, "lines": "        $user = $db -> query(\"SELECT * FROM users WHERE email = '{$email}'\");", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "SELECT * FROM users WHERE email = '", "end": {"col": 66, "line": 15, "offset": 356}, "start": {"col": 31, "line": 15, "offset": 321}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/post-blind-time/index.php", "start": {"col": 30, "line": 15, "offset": 320}}, {"check_id": "php.lang.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 104, "line": 19, "offset": 467}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$usr", "location": {"end": {"col": 6, "line": 16, "offset": 316}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 16, "offset": 312}}}, {"content": "$usr", "location": {"end": {"col": 6, "line": 16, "offset": 316}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 16, "offset": 312}}}], "taint_sink": ["CliLoc", [{"end": {"col": 104, "line": 19, "offset": 467}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 9, "line": 19, "offset": 372}}, "\"SELECT username,password FROM users WHERE username='\" . $usr . \"' AND password='\" . $pwd . \"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 13, "line": 16, "offset": 323}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 7, "line": 16, "offset": 317}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "fff81cefb418412f79723861da3b04fad1cae656c4c4d480b2b914af20f04357b55212a8c22e40c0a7d75abd8edee5fc56676ee54a60ba5e1608721386a53466_0", "is_ignored": false, "lines": "\t$sql = \"SELECT username,password FROM users WHERE username='\" . $usr . \"' AND password='\" . $pwd . \"'\";", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`$mysqli->prepare(\"INSERT INTO test(id, label) VALUES (?, ?)\");`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/www-community/attacks/SQL_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14757, "rule_id": "qNUXdL", "rv_id": 834268, "url": "https://semgrep.dev/playground/r/0bTwb4D/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "0bTwb4D"}}, "shortlink": "https://sg.run/lZYG", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$EXPR": {"abstract_content": "$usr\"' AND password='\"$pwd...\"'\"", "end": {"col": 104, "line": 19, "offset": 467}, "start": {"col": 66, "line": 19, "offset": 429}}, "$SQLSTR": {"abstract_content": "SELECT username,password FROM users WHERE username='", "end": {"col": 62, "line": 19, "offset": 425}, "start": {"col": 10, "line": 19, "offset": 373}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 9, "line": 19, "offset": 372}}, {"check_id": "php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection", "end": {"col": 34, "line": 22, "offset": 504}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$usr", "location": {"end": {"col": 6, "line": 16, "offset": 316}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 16, "offset": 312}}}, {"content": "$usr", "location": {"end": {"col": 6, "line": 16, "offset": 316}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 16, "offset": 312}}}, {"content": "$sql", "location": {"end": {"col": 6, "line": 19, "offset": 369}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 19, "offset": 365}}}, {"content": "$sql", "location": {"end": {"col": 6, "line": 19, "offset": 369}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 2, "line": 19, "offset": 365}}}], "taint_sink": ["CliLoc", [{"end": {"col": 34, "line": 22, "offset": 504}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 30, "line": 22, "offset": 500}}, "$sql"]], "taint_source": ["CliLoc", [{"end": {"col": 13, "line": 16, "offset": 323}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 7, "line": 16, "offset": 317}}, "$_POST"]]}, "engine_kind": "OSS", "fingerprint": "d02e0d67922889dd9b6b000104de1526540d98fd94f0166ad1e2bb4ad7385c98e666b6689c525b68213d606ce61c9624c23b76c6faaa982127cee8d3cdb41b72_0", "is_ignored": false, "lines": "if ($result = $mysqli->query($sql)) {", "message": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in PHP, it is possible to adopt prepared statements by using `PDO` with bind variables using `bindParam()`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::header::lang", "web::source::url-path-params::lang", "web::source::form-data::lang", "web::source::cookie::laravel", "web::source::http-params::laravel", "web::source::http-body::laravel", "web::source::header::laravel", "web::source::url-path-params::laravel", "web::source::form-data::laravel", "db::sink::sql-or-nosql-query::lang"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Laravel_Cheat_Sheet.md"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 36489, "rule_id": "wdU5LD", "rv_id": 850755, "url": "https://semgrep.dev/playground/r/d6TK9p3/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection", "version_id": "d6TK9p3"}}, "shortlink": "https://sg.run/PBq3", "source": "https://semgrep.dev/r/php.laravel.security.laravel-native-sql-injection.laravel-native-sql-injection", "subcategory": ["vuln"], "technology": ["laravel"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$M": {"abstract_content": "$mysqli", "end": {"col": 22, "line": 22, "offset": 492}, "propagated_value": {"svalue_abstract_content": "new mysqli'localhost''sql_injection''''sql_injection'", "svalue_end": {"col": 71, "line": 5, "offset": 129}, "svalue_start": {"col": 11, "line": 5, "offset": 69}}, "start": {"col": 15, "line": 22, "offset": 485}}, "$QUERY": {"abstract_content": "$sql", "end": {"col": 34, "line": 22, "offset": 504}, "propagated_value": {"svalue_abstract_content": "\"SELECT username,password FROM users WHERE username='\".$usr.\"' AND password='\".$pwd.\"'\"", "svalue_end": {"col": 104, "line": 19, "offset": 467}, "svalue_start": {"col": 9, "line": 19, "offset": 372}}, "start": {"col": 30, "line": 22, "offset": 500}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/sql-injection/post-login/index.php", "start": {"col": 30, "line": 22, "offset": 500}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 48, "line": 42, "offset": 1267}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$search", "location": {"end": {"col": 12, "line": 30, "offset": 850}, "path": "app/lab/ssti/SSTI-Blacklist/index.php", "start": {"col": 5, "line": 30, "offset": 843}}}, {"content": "$result", "location": {"end": {"col": 16, "line": 40, "offset": 1180}, "path": "app/lab/ssti/SSTI-Blacklist/index.php", "start": {"col": 9, "line": 40, "offset": 1173}}}], "taint_sink": ["CliLoc", [{"end": {"col": 48, "line": 42, "offset": 1267}, "path": "app/lab/ssti/SSTI-Blacklist/index.php", "start": {"col": 9, "line": 42, "offset": 1228}}, "echo $result.' '.$strings['not_found'];"]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 30, "offset": 868}, "path": "app/lab/ssti/SSTI-Blacklist/index.php", "start": {"col": 15, "line": 30, "offset": 853}}, "$_GET['search']"]]}, "engine_kind": "OSS", "fingerprint": "becd3c524dc44f30b3de70251a936c32ef9fa7bd1f71c9bccb1e0f53ba87b88f3611069f7117140ffbd4119811feb8c51c5972e36bbda20ecbde1a5809c1bea8_0", "is_ignored": false, "lines": "        echo $result.' '.$strings['not_found'];", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 20, "line": 30, "offset": 858}, "start": {"col": 15, "line": 30, "offset": 853}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/ssti/SSTI-Blacklist/index.php", "start": {"col": 9, "line": 42, "offset": 1228}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 50, "line": 44, "offset": 1794}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 50, "line": 44, "offset": 1794}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 9, "line": 44, "offset": 1753}}, "echo 'var height = '.$_GET['height'].';';"]], "taint_source": ["CliLoc", [{"end": {"col": 45, "line": 44, "offset": 1789}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 30, "line": 44, "offset": 1774}}, "$_GET['height']"]]}, "engine_kind": "OSS", "fingerprint": "98fa82906e9713a217a44e0ff18ce59c2b6fa4dd9f207963686cc40f9b558d4f7a97f1842d5377d0ba42a30110824c6ddd11cb602e68ecc87cedb6a63da6d30a_0", "is_ignored": false, "lines": "        echo 'var height = '.$_GET['height'].';';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 35, "line": 44, "offset": 1779}, "start": {"col": 30, "line": 44, "offset": 1774}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 9, "line": 44, "offset": 1753}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 46, "line": 45, "offset": 1840}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 46, "line": 45, "offset": 1840}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 9, "line": 45, "offset": 1803}}, "echo 'var base = '.$_GET['base'].';';"]], "taint_source": ["CliLoc", [{"end": {"col": 41, "line": 45, "offset": 1835}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 28, "line": 45, "offset": 1822}}, "$_GET['base']"]]}, "engine_kind": "OSS", "fingerprint": "98fa82906e9713a217a44e0ff18ce59c2b6fa4dd9f207963686cc40f9b558d4f7a97f1842d5377d0ba42a30110824c6ddd11cb602e68ecc87cedb6a63da6d30a_1", "is_ignored": false, "lines": "        echo 'var base = '.$_GET['base'].';';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 33, "line": 45, "offset": 1827}, "start": {"col": 28, "line": 45, "offset": 1822}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/xss/basic-dom-based/index.php", "start": {"col": 9, "line": 45, "offset": 1803}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 58, "line": 27, "offset": 686}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$q", "location": {"end": {"col": 9, "line": 25, "offset": 527}, "path": "app/lab/xss/basic-reflected/index.php", "start": {"col": 7, "line": 25, "offset": 525}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 27, "offset": 686}, "path": "app/lab/xss/basic-reflected/index.php", "start": {"col": 7, "line": 27, "offset": 635}}, "echo '' . $strings['text'] . ' <b>' . $q . '</b> ';"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 25, "offset": 540}, "path": "app/lab/xss/basic-reflected/index.php", "start": {"col": 12, "line": 25, "offset": 530}}, "$_GET['q']"]]}, "engine_kind": "OSS", "fingerprint": "e52120b7a56c05e54e1f41023a3079b2eef2cd1bf1e61c6c3a3118a3ee496cb7a4cad3c6085aa1daa7dc61b0a0c7cc6f5d1151204a504618b27e23c70b46b7ef_0", "is_ignored": false, "lines": "      echo '' . $strings['text'] . ' <b>' . $q . '</b> ';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 17, "line": 25, "offset": 535}, "start": {"col": 12, "line": 25, "offset": 530}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/xss/basic-reflected/index.php", "start": {"col": 7, "line": 27, "offset": 635}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 177, "line": 45, "offset": 1782}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$ticketname", "location": {"end": {"col": 24, "line": 43, "offset": 1540}, "path": "app/lab/xss/html-attribute-manipulation/index.php", "start": {"col": 13, "line": 43, "offset": 1529}}}], "taint_sink": ["CliLoc", [{"end": {"col": 177, "line": 45, "offset": 1782}, "path": "app/lab/xss/html-attribute-manipulation/index.php", "start": {"col": 13, "line": 45, "offset": 1618}}, "echo '<div class=\"ticket alert alert-primary\" style=\"max-width: 50vw;\"><h6><a href=\"ticket.php?name=' . $ticketname . '\"> ' . $strings['gate'] . ' </a></h6></div>';"]], "taint_source": ["CliLoc", [{"end": {"col": 40, "line": 43, "offset": 1556}, "path": "app/lab/xss/html-attribute-manipulation/index.php", "start": {"col": 27, "line": 43, "offset": 1543}}, "$_GET['name']"]]}, "engine_kind": "OSS", "fingerprint": "ce44f706de28ab36a5f18e3906eb5cc6f3d372b6dfcbe93a03fc5f9b7c1aab14522bc5571fc31a7a6e7621c9268d575a18cd3d47ba637f6380cd0e6983e5ff90_0", "is_ignored": false, "lines": "            echo '<div class=\"ticket alert alert-primary\" style=\"max-width: 50vw;\"><h6><a href=\"ticket.php?name=' . $ticketname . '\"> ' . $strings['gate'] . ' </a></h6></div>';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 32, "line": 43, "offset": 1548}, "start": {"col": 27, "line": 43, "offset": 1543}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/xss/html-attribute-manipulation/index.php", "start": {"col": 13, "line": 45, "offset": 1618}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 160, "line": 44, "offset": 1969}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 160, "line": 44, "offset": 1969}, "path": "app/lab/xss/our-gallery/index.php", "start": {"col": 21, "line": 44, "offset": 1830}}, "echo '<img class=\"shadow-lg bg-body rounded\" style=\"width:500px;padding : 0; margin-bottom: 0;\" src=\"' . encodeB($_GET['img']) . '.jpg\"/>';"]], "taint_source": ["CliLoc", [{"end": {"col": 146, "line": 44, "offset": 1955}, "path": "app/lab/xss/our-gallery/index.php", "start": {"col": 134, "line": 44, "offset": 1943}}, "$_GET['img']"]]}, "engine_kind": "OSS", "fingerprint": "6e1193119b8ea31361bb6ac4b2ef614c360d3386b7965adaefd69d95d6fe60180b3be1d6016302053b5b3a9c28809fccb3179ad55c307212be9642b49b19f67b_0", "is_ignored": false, "lines": "                    echo '<img class=\"shadow-lg bg-body rounded\" style=\"width:500px;padding : 0; margin-bottom: 0;\" src=\"' . encodeB($_GET['img']) . '.jpg\"/>';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 139, "line": 44, "offset": 1948}, "start": {"col": 134, "line": 44, "offset": 1943}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/lab/xss/our-gallery/index.php", "start": {"col": 21, "line": 44, "offset": 1830}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 45, "line": 4, "offset": 79}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "cookiename", "location": {"end": {"col": 30, "line": 2, "offset": 30}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 20, "line": 2, "offset": 20}}}], "taint_sink": ["CliLoc", [{"end": {"col": 45, "line": 4, "offset": 79}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 18, "line": 4, "offset": 52}}, "RegExp(cookiename+\"=[^;]+\")"]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 2, "offset": 30}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 20, "line": 2, "offset": 20}}, "cookiename"]]}, "engine_kind": "OSS", "fingerprint": "bbed8adc2fdcfbd7ecec9100c4a03fb03fea6aaa82a452937a666100d24c9fbd7d0920d3f21f167c161cc4c4da8c01c2cd42b9e40c7777e6e74fce9b8c8b4b85_0", "is_ignored": false, "lines": "var cookiestring=RegExp(cookiename+\"=[^;]+\").exec(document.cookie);", "message": "RegExp() called with a `cookiename` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12685, "rule_id": "zdU1gD", "rv_id": 834140, "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "8KTGkZw"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$ARG": {"abstract_content": "cookiename", "end": {"col": 30, "line": 2, "offset": 30}, "start": {"col": 20, "line": 2, "offset": 20}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 18, "line": 4, "offset": 52}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 53, "line": 143, "offset": 3380}, "extra": {"engine_kind": "OSS", "fingerprint": "8cf472674ef7ede55d7c796b1fd6379b99266538049c57145f977698bef34f88f1b27fdb57b74a88ea76e03c48055f7f821110b9b21e5040150eafb60561f2ea_0", "is_ignored": false, "lines": "labNameEl.innerHTML =`\n    <h3> <b>${LabTitle || \"Untitled Lab\"}</b> </h3>", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "labNameEl", "end": {"col": 10, "line": 142, "offset": 3314}, "propagated_value": {"svalue_abstract_content": "document.createElement('div')", "svalue_end": {"col": 46, "line": 141, "offset": 3303}, "svalue_start": {"col": 17, "line": 141, "offset": 3274}}, "start": {"col": 1, "line": 142, "offset": 3305}}, "$HTML": {"abstract_content": "`\n    <h3> <b>LabTitle||\"Untitled Lab\"</b> </h3>\n", "end": {"col": 53, "line": 143, "offset": 3380}, "start": {"col": 22, "line": 142, "offset": 3326}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 1, "line": 142, "offset": 3305}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 127, "line": 155, "offset": 3867}, "extra": {"engine_kind": "OSS", "fingerprint": "fc2098ef04c8d75c93a974fa76e0082b3340f48ff2def37d6ca3f42b30709b5338e1d39cd092a3ba8248d8d5af3280b6601d18e04c8fe51b715c05a1c33b2a05_0", "is_ignored": false, "lines": "btnCategoryEl.innerHTML = `\n<img style=\"width: 15px; margin-right:5px;\" src=\"/public/assets/img/back.png\" > ${translate[\"goBack\"][selectedLanguage.code]}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "btnCategoryEl", "end": {"col": 14, "line": 154, "offset": 3726}, "start": {"col": 1, "line": 154, "offset": 3713}}, "$HTML": {"abstract_content": "`\n<img style=\"width: 15px; margin-right:5px;\" src=\"/public/assets/img/back.png\" > translate[\"goBack\"][selectedLanguage.code]\n", "end": {"col": 127, "line": 155, "offset": 3867}, "start": {"col": 27, "line": 154, "offset": 3739}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 1, "line": 154, "offset": 3713}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 130, "line": 172, "offset": 4432}, "extra": {"engine_kind": "OSS", "fingerprint": "4fe6a906a7f1c50e70da2c2977f4482a529af511cfef105ae99076b0878ae9ce6731d2e104e1711de5613175a20af1e33e6f1127bec51950cc32d88cdeec3fcb_0", "is_ignored": false, "lines": "btnSourceCodeEl.innerHTML = `\n<img style=\"width: 15px; margin-right:5px;\" src=\"/public/assets/img/source.png\" > ${translate[\"sourceC\"][selectedLanguage.code]}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "btnSourceCodeEl", "end": {"col": 16, "line": 171, "offset": 4288}, "start": {"col": 1, "line": 171, "offset": 4273}}, "$HTML": {"abstract_content": "`\n<img style=\"width: 15px; margin-right:5px;\" src=\"/public/assets/img/source.png\" > translate[\"sourceC\"][selectedLanguage.code]\n", "end": {"col": 130, "line": 172, "offset": 4432}, "start": {"col": 29, "line": 171, "offset": 4301}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 1, "line": 171, "offset": 4273}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 131, "line": 207, "offset": 5628}, "extra": {"engine_kind": "OSS", "fingerprint": "20aeb7c6ca30ab10a616810affc9e9cb73ceb5a0698aea4b6f8b2fadca16b2c058d922c3719203d7dea10e729924c8ed5cb99706b5fa60397dee56ce056fc6b9_0", "is_ignored": false, "lines": "btnLangEl.innerHTML =`\n    <img style=\"width: 26px; margin-right:5px;\" src=\"/public/assets/img/${selectedLanguage.code}.png\" >  ${selectedLanguage.name}", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "btnLangEl", "end": {"col": 10, "line": 206, "offset": 5484}, "start": {"col": 1, "line": 206, "offset": 5475}}, "$HTML": {"abstract_content": "`\n    <img style=\"width: 26px; margin-right:5px;\" src=\"/public/assets/img/selectedLanguage.code.png\" >  selectedLanguage.name\n", "end": {"col": 131, "line": 207, "offset": 5628}, "start": {"col": 22, "line": 206, "offset": 5496}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 1, "line": 206, "offset": 5475}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 136, "line": 233, "offset": 6454}, "extra": {"engine_kind": "OSS", "fingerprint": "f7170e8c53b8e417ded8682e5d9787a7bbf66bf67ce570f5f393e4317979337e274b62da1ec87e5063552f206b80ac7ea6fb5af797f8706a5acfcbbf1e7bd572_0", "is_ignored": false, "lines": "    dropdownListItemEl.innerHTML = `<img style=\"width: 26px; margin-right:5px;\" src=\"/public/assets/img/${lang.code}.png\" > ${lang.name}`", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "dropdownListItemEl", "end": {"col": 23, "line": 233, "offset": 6341}, "start": {"col": 5, "line": 233, "offset": 6323}}, "$HTML": {"abstract_content": "`<img style=\"width: 26px; margin-right:5px;\" src=\"/public/assets/img/lang.code.png\" > lang.name", "end": {"col": 136, "line": 233, "offset": 6454}, "start": {"col": 36, "line": 233, "offset": 6354}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/public/assets/js/vlnav.js", "start": {"col": 5, "line": 233, "offset": 6323}}, {"check_id": "php.lang.security.injection.tainted-filename.tainted-filename", "end": {"col": 56, "line": 12, "offset": 345}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 56, "line": 12, "offset": 345}, "path": "app/source-code.php", "start": {"col": 43, "line": 12, "offset": 332}}, "$_GET['page']"]], "taint_source": ["CliLoc", [{"end": {"col": 48, "line": 12, "offset": 337}, "path": "app/source-code.php", "start": {"col": 43, "line": 12, "offset": 332}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "eb8f581cd8f2a584f8eb35656c8df9d3462bacd96b008e8b1372b28b3ce4aeac1edbaed3e17d5aad40efe31a762deac014f7e80308d71fc588dc5f616ab3188e_0", "is_ignored": false, "lines": "            $contents = file_get_contents($_GET['page'], true);", "message": "File name based on user input risks server-side request forgery.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 16250, "rule_id": "5rUpro", "rv_id": 834265, "url": "https://semgrep.dev/playground/r/BjTe09O/php.lang.security.injection.tainted-filename.tainted-filename", "version_id": "BjTe09O"}}, "shortlink": "https://sg.run/Ayqp", "source": "https://semgrep.dev/r/php.lang.security.injection.tainted-filename.tainted-filename", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$FILENAME": {"abstract_content": "$_GET['page']", "end": {"col": 56, "line": 12, "offset": 345}, "start": {"col": 43, "line": 12, "offset": 332}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/source-code.php", "start": {"col": 43, "line": 12, "offset": 332}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 76, "line": 71, "offset": 2631}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$vuln", "location": {"end": {"col": 6, "line": 10, "offset": 156}, "path": "app/vuln.php", "start": {"col": 1, "line": 10, "offset": 151}}}], "taint_sink": ["CliLoc", [{"end": {"col": 76, "line": 71, "offset": 2631}, "path": "app/vuln.php", "start": {"col": 47, "line": 71, "offset": 2602}}, "<?= $vuln[\"title\"][$lang]; ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_0", "is_ignored": false, "lines": "          <h1 class=\"display-6 fw-semi-bold\"> <?= $vuln[\"title\"][$lang]; ?> </h1>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 47, "line": 71, "offset": 2602}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 63, "line": 72, "offset": 2700}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$vuln", "location": {"end": {"col": 6, "line": 10, "offset": 156}, "path": "app/vuln.php", "start": {"col": 1, "line": 10, "offset": 151}}}], "taint_sink": ["CliLoc", [{"end": {"col": 63, "line": 72, "offset": 2700}, "path": "app/vuln.php", "start": {"col": 28, "line": 72, "offset": 2665}}, "<?= $vuln[\"description\"][$lang]; ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_1", "is_ignored": false, "lines": "          <p class=\"fs-2\"> <?= $vuln[\"description\"][$lang]; ?> </p>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 28, "line": 72, "offset": 2665}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 86, "line": 93, "offset": 3598}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$resources", "location": {"end": {"col": 11, "line": 11, "offset": 187}, "path": "app/vuln.php", "start": {"col": 1, "line": 11, "offset": 177}}}, {"content": "$res", "location": {"end": {"col": 53, "line": 92, "offset": 3509}, "path": "app/vuln.php", "start": {"col": 49, "line": 92, "offset": 3505}}}], "taint_sink": ["CliLoc", [{"end": {"col": 86, "line": 93, "offset": 3598}, "path": "app/vuln.php", "start": {"col": 21, "line": 93, "offset": 3533}}, "echo '<li><a href=\"'.$res.'\" target=\"_blank\"> '.$res.'</a></li>';"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_2", "is_ignored": false, "lines": "                    echo '<li><a href=\"'.$res.'\" target=\"_blank\"> '.$res.'</a></li>';", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 21, "line": 93, "offset": 3533}}, {"check_id": "php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "end": {"col": 74, "line": 93, "offset": 3586}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$resources", "location": {"end": {"col": 11, "line": 11, "offset": 187}, "path": "app/vuln.php", "start": {"col": 1, "line": 11, "offset": 177}}}, {"content": "$res", "location": {"end": {"col": 53, "line": 92, "offset": 3509}, "path": "app/vuln.php", "start": {"col": 49, "line": 92, "offset": 3505}}}], "taint_sink": ["CliLoc", [{"end": {"col": 74, "line": 93, "offset": 3586}, "path": "app/vuln.php", "start": {"col": 42, "line": 93, "offset": 3554}}, "$res.'\" target=\"_blank\"> '.$res."]], "taint_source": ["CliLoc", [{"end": {"col": 16, "line": 6, "offset": 78}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET"]]}, "engine_kind": "OSS", "fingerprint": "4f24a066aeb64a562406ec225ea20e2dbffdc9e1160a8433c84a58bc4822a6fe3ceedb4e4fca3986458abf064e9bc13cd31f3d3be8be16904b5776cba530a20f_0", "is_ignored": false, "lines": "                    echo '<li><a href=\"'.$res.'\" target=\"_blank\"> '.$res.'</a></li>';", "message": "Untrusted input could be used to tamper with a web page rendering, which can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::cookie::lang", "web::source::http-params::lang", "web::source::http-body::lang", "web::source::url-path-params::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://brightsec.com/blog/cross-site-scripting-php/", "https://github.com/tolgadevsec/PHP-Security-Cheatsheet#cross-site-scripting"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27201, "rule_id": "v8U01O", "rv_id": 850742, "url": "https://semgrep.dev/playground/r/jQTrONl/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "version_id": "jQTrONl"}}, "shortlink": "https://sg.run/PKkY", "source": "https://semgrep.dev/r/php.lang.security.tainted-user-input-in-php-script.tainted-user-input-in-php-script", "subcategory": ["vuln"], "technology": ["php", "generic"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "'", "end": {"col": 27, "line": 93, "offset": 3539}, "start": {"col": 26, "line": 93, "offset": 3538}}, "$2": {"abstract_content": "'", "end": {"col": 41, "line": 93, "offset": 3553}, "start": {"col": 40, "line": 93, "offset": 3552}}, "$ENDTAG": {"abstract_content": "$res.'</a></li>'", "end": {"col": 85, "line": 93, "offset": 3597}, "start": {"col": 69, "line": 93, "offset": 3581}}, "$PHP": {"abstract_content": "$res'\" target=\"_blank\"> '.", "end": {"col": 74, "line": 93, "offset": 3586}, "start": {"col": 42, "line": 93, "offset": 3554}}, "$TAG": {"abstract_content": "'<li><a href=\"'", "end": {"col": 41, "line": 93, "offset": 3553}, "start": {"col": 26, "line": 93, "offset": 3538}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 42, "line": 93, "offset": 3554}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 43, "line": 125, "offset": 4734}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$labs", "location": {"end": {"col": 6, "line": 9, "offset": 130}, "path": "app/vuln.php", "start": {"col": 1, "line": 9, "offset": 125}}}, {"content": "$lab", "location": {"end": {"col": 42, "line": 121, "offset": 4594}, "path": "app/vuln.php", "start": {"col": 38, "line": 121, "offset": 4590}}}], "taint_sink": ["CliLoc", [{"end": {"col": 43, "line": 125, "offset": 4734}, "path": "app/vuln.php", "start": {"col": 26, "line": 125, "offset": 4717}}, "<?=$lab['url'] ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_3", "is_ignored": false, "lines": "                <a href=\"<?=$lab['url'] ?>\" class=\"text-decoration-none text-muted\">", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 26, "line": 125, "offset": 4717}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 70, "line": 128, "offset": 4965}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$labs", "location": {"end": {"col": 6, "line": 9, "offset": 130}, "path": "app/vuln.php", "start": {"col": 1, "line": 9, "offset": 125}}}, {"content": "$lab", "location": {"end": {"col": 42, "line": 121, "offset": 4594}, "path": "app/vuln.php", "start": {"col": 38, "line": 121, "offset": 4590}}}], "taint_sink": ["CliLoc", [{"end": {"col": 70, "line": 128, "offset": 4965}, "path": "app/vuln.php", "start": {"col": 43, "line": 128, "offset": 4938}}, "<?= $lab[\"title\"][$lang] ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_4", "is_ignored": false, "lines": "                      <h3 class=\"lh-base\"><?= $lab[\"title\"][$lang] ?></h3>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 43, "line": 128, "offset": 4938}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 72, "line": 129, "offset": 5042}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "$vulnID", "location": {"end": {"col": 8, "line": 6, "offset": 70}, "path": "app/vuln.php", "start": {"col": 1, "line": 6, "offset": 63}}}, {"content": "$labs", "location": {"end": {"col": 6, "line": 9, "offset": 130}, "path": "app/vuln.php", "start": {"col": 1, "line": 9, "offset": 125}}}, {"content": "$lab", "location": {"end": {"col": 42, "line": 121, "offset": 4594}, "path": "app/vuln.php", "start": {"col": 38, "line": 121, "offset": 4590}}}], "taint_sink": ["CliLoc", [{"end": {"col": 72, "line": 129, "offset": 5042}, "path": "app/vuln.php", "start": {"col": 39, "line": 129, "offset": 5009}}, "<?= $lab[\"description\"][$lang] ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 22, "line": 6, "offset": 84}, "path": "app/vuln.php", "start": {"col": 11, "line": 6, "offset": 73}}, "$_GET[\"id\"]"]]}, "engine_kind": "OSS", "fingerprint": "7fd1a81d968f170adc0e4b281eef9d301cd76cf106e4579c645f4215069760bc7e0782c3dc8800303c8fc178adbff8b7f828efecac51b23d23bc0d8a1b11914a_5", "is_ignored": false, "lines": "                      <p class=\"mb-0\"><?= $lab[\"description\"][$lang] ?></p>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27193, "rule_id": "r6UA0y", "rv_id": 850733, "url": "https://semgrep.dev/playground/r/qkTQlJy/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "qkTQlJy"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 16, "line": 6, "offset": 78}, "start": {"col": 11, "line": 6, "offset": 73}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "app/vuln.php", "start": {"col": 39, "line": 129, "offset": 5009}}], "skipped_rules": [], "version": "1.95.0"}