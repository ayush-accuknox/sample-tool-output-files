{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/introduction/base.html:2:\n `{% load static %}` was unexpected", "path": "introduction/templates/introduction/base.html", "spans": [{"end": {"col": 18, "line": 2, "offset": 17}, "file": "introduction/templates/introduction/base.html", "start": {"col": 1, "line": 2, "offset": 0}}, {"end": {"col": 57, "line": 598, "offset": 12}, "file": "introduction/templates/introduction/base.html", "start": {"col": 45, "line": 598, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 2, "offset": 17}, "path": "introduction/templates/introduction/base.html", "start": {"col": 1, "line": 2, "offset": 0}}, {"end": {"col": 57, "line": 598, "offset": 12}, "path": "introduction/templates/introduction/base.html", "start": {"col": 45, "line": 598, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/ssrf/ssrf_discussion.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected", "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "spans": [{"end": {"col": 77, "line": 1, "offset": 76}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 3, "offset": 0}}, {"end": {"col": 210, "line": 73, "offset": 1}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 209, "line": 73, "offset": 0}}, {"end": {"col": 210, "line": 77, "offset": 1}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 209, "line": 77, "offset": 0}}, {"end": {"col": 211, "line": 81, "offset": 1}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 210, "line": 81, "offset": 0}}, {"end": {"col": 211, "line": 85, "offset": 1}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 210, "line": 85, "offset": 0}}, {"end": {"col": 15, "line": 157, "offset": 14}, "file": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 157, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 77, "line": 1, "offset": 76}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 3, "offset": 0}}, {"end": {"col": 210, "line": 73, "offset": 1}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 209, "line": 73, "offset": 0}}, {"end": {"col": 210, "line": 77, "offset": 1}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 209, "line": 77, "offset": 0}}, {"end": {"col": 211, "line": 81, "offset": 1}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 210, "line": 81, "offset": 0}}, {"end": {"col": 211, "line": 85, "offset": 1}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 210, "line": 85, "offset": 0}}, {"end": {"col": 15, "line": 157, "offset": 14}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 1, "line": 157, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XSS/xss.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}` was unexpected", "path": "introduction/templates/Lab/XSS/xss.html", "spans": [{"end": {"col": 20, "line": 2, "offset": 58}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 108, "line": 58, "offset": 2}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 106, "line": 58, "offset": 0}}, {"end": {"col": 38, "line": 148, "offset": 9}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 148, "offset": 0}}, {"end": {"col": 51, "line": 148, "offset": 6}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 45, "line": 148, "offset": 0}}, {"end": {"col": 82, "line": 149, "offset": 39}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 43, "line": 149, "offset": 0}}, {"end": {"col": 37, "line": 170, "offset": 12}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 25, "line": 170, "offset": 0}}, {"end": {"col": 36, "line": 172, "offset": 5}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 31, "line": 172, "offset": 0}}, {"end": {"col": 35, "line": 174, "offset": 7}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 28, "line": 174, "offset": 0}}, {"end": {"col": 38, "line": 175, "offset": 9}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 175, "offset": 0}}, {"end": {"col": 38, "line": 176, "offset": 9}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 176, "offset": 0}}, {"end": {"col": 23, "line": 205, "offset": 22}, "file": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 1, "line": 205, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 20, "line": 2, "offset": 58}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 108, "line": 58, "offset": 2}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 106, "line": 58, "offset": 0}}, {"end": {"col": 38, "line": 148, "offset": 9}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 148, "offset": 0}}, {"end": {"col": 51, "line": 148, "offset": 6}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 45, "line": 148, "offset": 0}}, {"end": {"col": 82, "line": 149, "offset": 39}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 43, "line": 149, "offset": 0}}, {"end": {"col": 37, "line": 170, "offset": 12}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 25, "line": 170, "offset": 0}}, {"end": {"col": 36, "line": 172, "offset": 5}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 31, "line": 172, "offset": 0}}, {"end": {"col": 35, "line": 174, "offset": 7}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 28, "line": 174, "offset": 0}}, {"end": {"col": 38, "line": 175, "offset": 9}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 175, "offset": 0}}, {"end": {"col": 38, "line": 176, "offset": 9}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 29, "line": 176, "offset": 0}}, {"end": {"col": 23, "line": 205, "offset": 22}, "path": "introduction/templates/Lab/XSS/xss.html", "start": {"col": 1, "line": 205, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/a7.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 32, "line": 98, "offset": 15}, "file": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 17, "line": 98, "offset": 0}}, {"end": {"col": 15, "line": 143, "offset": 24}, "file": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 139, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 32, "line": 98, "offset": 15}, "path": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 17, "line": 98, "offset": 0}}, {"end": {"col": 15, "line": 143, "offset": 24}, "path": "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "start": {"col": 1, "line": 139, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top14.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top14.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 32, "line": 83, "offset": 15}, "file": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 17, "line": 83, "offset": 0}}, {"end": {"col": 15, "line": 123, "offset": 22}, "file": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 5, "line": 121, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 32, "line": 83, "offset": 15}, "path": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 17, "line": 83, "offset": 0}}, {"end": {"col": 15, "line": 123, "offset": 22}, "path": "introduction/templates/mitre/mitre_top14.html", "start": {"col": 5, "line": 121, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 147, "offset": 14}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 147, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 147, "offset": 14}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "start": {"col": 1, "line": 147, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/CMD/cmd.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/CMD/cmd.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 81, "line": 38, "offset": 12}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 69, "line": 38, "offset": 0}}, {"end": {"col": 71, "line": 39, "offset": 6}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 65, "line": 39, "offset": 0}}, {"end": {"col": 65, "line": 63, "offset": 6}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 59, "line": 63, "offset": 0}}, {"end": {"col": 49, "line": 64, "offset": 6}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 43, "line": 64, "offset": 0}}, {"end": {"col": 29, "line": 65, "offset": 2}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 27, "line": 65, "offset": 0}}, {"end": {"col": 15, "line": 134, "offset": 14}, "file": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 134, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 81, "line": 38, "offset": 12}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 69, "line": 38, "offset": 0}}, {"end": {"col": 71, "line": 39, "offset": 6}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 65, "line": 39, "offset": 0}}, {"end": {"col": 65, "line": 63, "offset": 6}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 59, "line": 63, "offset": 0}}, {"end": {"col": 49, "line": 64, "offset": 6}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 43, "line": 64, "offset": 0}}, {"end": {"col": 29, "line": 65, "offset": 2}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 27, "line": 65, "offset": 0}}, {"end": {"col": 15, "line": 134, "offset": 14}, "path": "introduction/templates/Lab/CMD/cmd.html", "start": {"col": 1, "line": 134, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top6.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top6.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 97}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 73, "line": 77, "offset": 12}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 61, "line": 77, "offset": 0}}, {"end": {"col": 63, "line": 78, "offset": 6}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 57, "line": 78, "offset": 0}}, {"end": {"col": 57, "line": 102, "offset": 6}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 51, "line": 102, "offset": 0}}, {"end": {"col": 41, "line": 103, "offset": 6}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 35, "line": 103, "offset": 0}}, {"end": {"col": 21, "line": 104, "offset": 2}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 19, "line": 104, "offset": 0}}, {"end": {"col": 15, "line": 125, "offset": 14}, "file": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 125, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 97}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 73, "line": 77, "offset": 12}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 61, "line": 77, "offset": 0}}, {"end": {"col": 63, "line": 78, "offset": 6}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 57, "line": 78, "offset": 0}}, {"end": {"col": 57, "line": 102, "offset": 6}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 51, "line": 102, "offset": 0}}, {"end": {"col": 41, "line": 103, "offset": 6}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 35, "line": 103, "offset": 0}}, {"end": {"col": 21, "line": 104, "offset": 2}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 19, "line": 104, "offset": 0}}, {"end": {"col": 15, "line": 125, "offset": 14}, "path": "introduction/templates/mitre/mitre_top6.html", "start": {"col": 1, "line": 125, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A3_Injection/injection.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A3_Injection/injection.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 94, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 94, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 94, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/injection.html", "start": {"col": 1, "line": 94, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "spans": [{"end": {"col": 77, "line": 1, "offset": 76}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "start": {"col": 1, "line": 3, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 77, "line": 1, "offset": 76}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "start": {"col": 1, "line": 3, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top2.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 41, "offset": 14}, "file": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 41, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 41, "offset": 14}, "path": "introduction/templates/mitre/mitre_top2.html", "start": {"col": 1, "line": 41, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/BrokenAuth/bau.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/BrokenAuth/bau.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 104, "offset": 14}, "file": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 104, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 104, "offset": 14}, "path": "introduction/templates/Lab/BrokenAuth/bau.html", "start": {"col": 1, "line": 104, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XXE/xxe.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/XXE/xxe.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 73, "line": 57, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 72, "line": 57, "offset": 0}}, {"end": {"col": 77, "line": 59, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 76, "line": 59, "offset": 0}}, {"end": {"col": 89, "line": 60, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 88, "line": 60, "offset": 0}}, {"end": {"col": 51, "line": 61, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 50, "line": 61, "offset": 0}}, {"end": {"col": 58, "line": 62, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 57, "line": 62, "offset": 0}}, {"end": {"col": 58, "line": 63, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 57, "line": 63, "offset": 0}}, {"end": {"col": 73, "line": 63, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 72, "line": 63, "offset": 0}}, {"end": {"col": 59, "line": 64, "offset": 1}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 58, "line": 64, "offset": 0}}, {"end": {"col": 15, "line": 98, "offset": 14}, "file": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 98, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 73, "line": 57, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 72, "line": 57, "offset": 0}}, {"end": {"col": 77, "line": 59, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 76, "line": 59, "offset": 0}}, {"end": {"col": 89, "line": 60, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 88, "line": 60, "offset": 0}}, {"end": {"col": 51, "line": 61, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 50, "line": 61, "offset": 0}}, {"end": {"col": 58, "line": 62, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 57, "line": 62, "offset": 0}}, {"end": {"col": 58, "line": 63, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 57, "line": 63, "offset": 0}}, {"end": {"col": 73, "line": 63, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 72, "line": 63, "offset": 0}}, {"end": {"col": 59, "line": 64, "offset": 1}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 58, "line": 64, "offset": 0}}, {"end": {"col": 15, "line": 98, "offset": 14}, "path": "introduction/templates/Lab/XXE/xxe.html", "start": {"col": 1, "line": 98, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 96, "offset": 14}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 96, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 96, "offset": 14}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "start": {"col": 1, "line": 96, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/playground/A9/index.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n\n{% block title %}` was unexpected", "path": "introduction/templates/playground/A9/index.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 77}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 18, "line": 7, "offset": 32}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 77, "line": 16, "offset": 13}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 64, "line": 16, "offset": 0}}, {"end": {"col": 13, "line": 52, "offset": 226}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 31, "line": 40, "offset": 0}}, {"end": {"col": 15, "line": 102, "offset": 14}, "file": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 102, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 77}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 18, "line": 7, "offset": 32}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 77, "line": 16, "offset": 13}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 64, "line": 16, "offset": 0}}, {"end": {"col": 13, "line": 52, "offset": 226}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 31, "line": 40, "offset": 0}}, {"end": {"col": 15, "line": 102, "offset": 14}, "path": "introduction/templates/playground/A9/index.html", "start": {"col": 1, "line": 102, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top4.html:1:\n `{% extends \"introduction/base.html\" %} {% load static %} {% block content %} \n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top4.html", "spans": [{"end": {"col": 18, "line": 2, "offset": 95}, "file": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 4, "offset": 14}, "file": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 4, "offset": 0}}, {"end": {"col": 15, "line": 92, "offset": 14}, "file": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 92, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 2, "offset": 95}, "path": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 4, "offset": 14}, "path": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 4, "offset": 0}}, {"end": {"col": 15, "line": 92, "offset": 14}, "path": "introduction/templates/mitre/mitre_top4.html", "start": {"col": 1, "line": 92, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top3.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top3.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 97}, "file": "introduction/templates/mitre/mitre_top3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top3.html", "start": {"col": 1, "line": 6, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 97}, "path": "introduction/templates/mitre/mitre_top3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top3.html", "start": {"col": 1, "line": 6, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/SQL/sql.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/SQL/sql.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 100, "offset": 14}, "file": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 100, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 100, "offset": 14}, "path": "introduction/templates/Lab/SQL/sql.html", "start": {"col": 1, "line": 100, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A9/a9.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A9/a9.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 94, "offset": 14}, "file": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 94, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 94, "offset": 14}, "path": "introduction/templates/Lab/A9/a9.html", "start": {"col": 1, "line": 94, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/insec_des/insec_des.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/insec_des/insec_des.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 82, "offset": 14}, "file": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 82, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 82, "offset": 14}, "path": "introduction/templates/Lab/insec_des/insec_des.html", "start": {"col": 1, "line": 82, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 82, "offset": 3825}, "file": "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 82, "offset": 3825}, "path": "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A9/a9_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A9/a9_lab2.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 78, "line": 11, "offset": 61}, "file": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 17, "line": 11, "offset": 0}}, {"end": {"col": 51, "line": 12, "offset": 36}, "file": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 15, "line": 12, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 78, "line": 11, "offset": 61}, "path": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 17, "line": 11, "offset": 0}}, {"end": {"col": 51, "line": 12, "offset": 36}, "path": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 15, "line": 12, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/ssrf/ssrf.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected", "path": "introduction/templates/Lab/ssrf/ssrf.html", "spans": [{"end": {"col": 77, "line": 1, "offset": 76}, "file": "introduction/templates/Lab/ssrf/ssrf.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "file": "introduction/templates/Lab/ssrf/ssrf.html", "start": {"col": 1, "line": 3, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 77, "line": 1, "offset": 76}, "path": "introduction/templates/Lab/ssrf/ssrf.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "path": "introduction/templates/Lab/ssrf/ssrf.html", "start": {"col": 1, "line": 3, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/sec_mis/sec_mis.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/sec_mis/sec_mis.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 85, "offset": 14}, "file": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 85, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 85, "offset": 14}, "path": "introduction/templates/Lab/sec_mis/sec_mis.html", "start": {"col": 1, "line": 85, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 79, "offset": 3055}, "file": "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "start": {"col": 1, "line": 5, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 79, "offset": 3055}, "path": "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "start": {"col": 1, "line": 5, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A10/a10.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A10/a10.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 4, "offset": 12}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 29, "line": 4, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 40, "line": 7, "offset": 12}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 28, "line": 7, "offset": 0}}, {"end": {"col": 59, "line": 9, "offset": 19}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 40, "line": 9, "offset": 0}}, {"end": {"col": 17, "line": 70, "offset": 14}, "file": "introduction/templates/Lab/A10/a10.html", "start": {"col": 3, "line": 70, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 4, "offset": 12}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 29, "line": 4, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 40, "line": 7, "offset": 12}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 28, "line": 7, "offset": 0}}, {"end": {"col": 59, "line": 9, "offset": 19}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 40, "line": 9, "offset": 0}}, {"end": {"col": 17, "line": 70, "offset": 14}, "path": "introduction/templates/Lab/A10/a10.html", "start": {"col": 3, "line": 70, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A11/a11.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected", "path": "introduction/templates/Lab/A11/a11.html", "spans": [{"end": {"col": 77, "line": 1, "offset": 76}, "file": "introduction/templates/Lab/A11/a11.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "file": "introduction/templates/Lab/A11/a11.html", "start": {"col": 1, "line": 3, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 77, "line": 1, "offset": 76}, "path": "introduction/templates/Lab/A11/a11.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 3, "offset": 14}, "path": "introduction/templates/Lab/A11/a11.html", "start": {"col": 1, "line": 3, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/ssrf/ssrf_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/ssrf/ssrf_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/ssrf/ssrf_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/ssrf/ssrf_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/ssrf/ssrf_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/ssrf/ssrf_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A10/a10_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A10/a10_lab2.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "file": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 78, "offset": 14}, "file": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 78, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "path": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 78, "offset": 14}, "path": "introduction/templates/Lab/A10/a10_lab2.html", "start": {"col": 1, "line": 78, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/BrokenAccess/ba.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/BrokenAccess/ba.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 66, "offset": 14}, "file": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 66, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 66, "offset": 14}, "path": "introduction/templates/Lab/BrokenAccess/ba.html", "start": {"col": 1, "line": 66, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A3_Injection/ssti_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 106, "line": 28, "offset": 105}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 28, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 106, "line": 28, "offset": 105}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "start": {"col": 1, "line": 28, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/playground/A7/index.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n\n{% block title %}` was unexpected", "path": "introduction/templates/playground/A7/index.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 77}, "file": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 18, "line": 7, "offset": 32}, "file": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 61, "offset": 14}, "file": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 61, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 77}, "path": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 18, "line": 7, "offset": 32}, "path": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 61, "offset": 14}, "path": "introduction/templates/playground/A7/index.html", "start": {"col": 1, "line": 61, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top21.html:1:\n `{% extends \"introduction/base.html\" %}\n {% load static %} \n {% block content %} \n {% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top21.html", "spans": [{"end": {"col": 19, "line": 4, "offset": 99}, "file": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 14}, "file": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 53, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 19, "line": 4, "offset": 99}, "path": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 14}, "path": "introduction/templates/mitre/mitre_top21.html", "start": {"col": 1, "line": 53, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/AUTH/auth_home.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/AUTH/auth_home.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 54, "offset": 24}, "file": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 50, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 54, "offset": 24}, "path": "introduction/templates/Lab/AUTH/auth_home.html", "start": {"col": 1, "line": 50, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A11/a11_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A11/a11_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 9, "offset": 49}, "file": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 14}, "file": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 53, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 9, "offset": 49}, "path": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 14}, "path": "introduction/templates/Lab/A11/a11_lab.html", "start": {"col": 1, "line": 53, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top8.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top8.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 97}, "file": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 14}, "file": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 44, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 97}, "path": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 14}, "path": "introduction/templates/mitre/mitre_top8.html", "start": {"col": 1, "line": 44, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_lab_17.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_lab_17.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/mitre_lab_17.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_lab_17.html", "start": {"col": 1, "line": 6, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/mitre_lab_17.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_lab_17.html", "start": {"col": 1, "line": 6, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A3_Injection/ssti.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 42, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 42, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 42, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/ssti.html", "start": {"col": 1, "line": 42, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top9.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{%block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top9.html", "spans": [{"end": {"col": 17, "line": 4, "offset": 96}, "file": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 14}, "file": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 44, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 17, "line": 4, "offset": 96}, "path": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 14}, "path": "introduction/templates/mitre/mitre_top9.html", "start": {"col": 1, "line": 44, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top25.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %}\n{%block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top25.html", "spans": [{"end": {"col": 17, "line": 4, "offset": 95}, "file": "introduction/templates/mitre/mitre_top25.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top25.html", "start": {"col": 1, "line": 6, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 17, "line": 4, "offset": 95}, "path": "introduction/templates/mitre/mitre_top25.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top25.html", "start": {"col": 1, "line": 6, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_lab_25.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_lab_25.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 47, "offset": 14}, "file": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 47, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 47, "offset": 14}, "path": "introduction/templates/mitre/mitre_lab_25.html", "start": {"col": 1, "line": 47, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/sec_mis/sec_mis_lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 53, "offset": 28}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 51, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 53, "offset": 28}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "start": {"col": 1, "line": 51, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/mitre_top17.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/mitre_top17.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 33, "offset": 14}, "file": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 33, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 33, "offset": 14}, "path": "introduction/templates/mitre/mitre_top17.html", "start": {"col": 1, "line": 33, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/ssrf/ssrf_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/ssrf/ssrf_lab2.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/ssrf/ssrf_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 52, "offset": 1591}, "file": "introduction/templates/Lab/ssrf/ssrf_lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/ssrf/ssrf_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 52, "offset": 1591}, "path": "introduction/templates/Lab/ssrf/ssrf_lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/DataExp/data_exp.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/DataExp/data_exp.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 49, "offset": 14}, "file": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 49, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 49, "offset": 14}, "path": "introduction/templates/Lab/DataExp/data_exp.html", "start": {"col": 1, "line": 49, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XSS/xss_lab_2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/XSS/xss_lab_2.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 52, "offset": 22}, "file": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 52, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 52, "offset": 22}, "path": "introduction/templates/Lab/XSS/xss_lab_2.html", "start": {"col": 1, "line": 52, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 11, "line": 14, "offset": 125}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 36, "line": 10, "offset": 0}}, {"end": {"col": 17, "line": 26, "offset": 16}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 26, "offset": 0}}, {"end": {"col": 12, "line": 28, "offset": 11}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 28, "offset": 0}}, {"end": {"col": 12, "line": 31, "offset": 11}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 31, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 44, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 11, "line": 14, "offset": 125}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 36, "line": 10, "offset": 0}}, {"end": {"col": 17, "line": 26, "offset": 16}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 26, "offset": 0}}, {"end": {"col": 12, "line": 28, "offset": 11}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 28, "offset": 0}}, {"end": {"col": 12, "line": 31, "offset": 11}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 31, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "start": {"col": 1, "line": 44, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 132}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 48, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 53, "offset": 132}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 1, "line": 48, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/registration/login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% load crispy_forms_tags %}\n{% load socialaccount %}` was unexpected", "path": "introduction/templates/registration/login.html", "spans": [{"end": {"col": 25, "line": 4, "offset": 112}, "file": "introduction/templates/registration/login.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 14}, "file": "introduction/templates/registration/login.html", "start": {"col": 1, "line": 37, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 25, "line": 4, "offset": 112}, "path": "introduction/templates/registration/login.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 14}, "path": "introduction/templates/registration/login.html", "start": {"col": 1, "line": 37, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 42, "offset": 20}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 40, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 42, "offset": 20}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "start": {"col": 1, "line": 40, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XXE/xxe_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/XXE/xxe_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 20}, "file": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 35, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 20}, "path": "introduction/templates/Lab/XXE/xxe_lab.html", "start": {"col": 1, "line": 35, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A3_Injection/sql_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 48, "offset": 20}, "file": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 46, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 48, "offset": 20}, "path": "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "start": {"col": 1, "line": 46, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "file": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 44, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 1, "line": 44, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/BrokenAccess/ba_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "file": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 44, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 46, "offset": 20}, "path": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 1, "line": 44, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/SQL/sql_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/SQL/sql_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 48, "offset": 20}, "file": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 46, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 48, "offset": 20}, "path": "introduction/templates/Lab/SQL/sql_lab.html", "start": {"col": 1, "line": 46, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 22, "line": 10, "offset": 73}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 11, "line": 12, "offset": 10}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 12, "offset": 0}}, {"end": {"col": 106, "line": 25, "offset": 119}, "file": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 22, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 22, "line": 10, "offset": 73}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 11, "line": 12, "offset": 10}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 12, "offset": 0}}, {"end": {"col": 106, "line": 25, "offset": 119}, "path": "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "start": {"col": 1, "line": 22, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/mitre/csrf_dashboard.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/mitre/csrf_dashboard.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 31, "offset": 22}, "file": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 31, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 31, "offset": 22}, "path": "introduction/templates/mitre/csrf_dashboard.html", "start": {"col": 1, "line": 31, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XSS/xss_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/XSS/xss_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 23, "line": 41, "offset": 28}, "file": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 39, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 23, "line": 41, "offset": 28}, "path": "introduction/templates/Lab/XSS/xss_lab.html", "start": {"col": 1, "line": 39, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "file": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 17, "line": 9, "offset": 33}, "path": "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "start": {"col": 1, "line": 6, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/CMD/cmd_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/CMD/cmd_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 36, "offset": 21}, "file": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 33, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 36, "offset": 21}, "path": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 1, "line": 33, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A10/a10_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A10/a10_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "file": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 20}, "file": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 42, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 41, "line": 5, "offset": 12}, "path": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 29, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 44, "offset": 20}, "path": "introduction/templates/Lab/A10/a10_lab.html", "start": {"col": 1, "line": 42, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/BrokenAuth/bau_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 36, "offset": 20}, "file": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 34, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 36, "offset": 20}, "path": "introduction/templates/Lab/BrokenAuth/bau_lab.html", "start": {"col": 1, "line": 34, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/A9/a9_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/A9/a9_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 20}, "file": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 35, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 37, "offset": 20}, "path": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 1, "line": 35, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/AUTH/auth_lab_signup.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 25, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 25, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 25, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab_signup.html", "start": {"col": 1, "line": 25, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/sec_mis/sec_mis_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 32, "offset": 28}, "file": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 30, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 32, "offset": 28}, "path": "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "start": {"col": 1, "line": 30, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/CMD/cmd_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/CMD/cmd_lab2.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 32, "offset": 21}, "file": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 29, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 32, "offset": 21}, "path": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 1, "line": 29, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/AUTH/auth_lab_login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/AUTH/auth_lab_login.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 23, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 23, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 23, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab_login.html", "start": {"col": 1, "line": 23, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/XSS/xss_lab_3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/XSS/xss_lab_3.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 28, "offset": 22}, "file": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 28, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 23, "line": 28, "offset": 22}, "path": "introduction/templates/Lab/XSS/xss_lab_3.html", "start": {"col": 1, "line": 28, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/registration/register.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %} \n\n{% load crispy_forms_tags %}` was unexpected", "path": "introduction/templates/registration/register.html", "spans": [{"end": {"col": 29, "line": 4, "offset": 89}, "file": "introduction/templates/registration/register.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 25, "offset": 14}, "file": "introduction/templates/registration/register.html", "start": {"col": 1, "line": 25, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 29, "line": 4, "offset": 89}, "path": "introduction/templates/registration/register.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 25, "offset": 14}, "path": "introduction/templates/registration/register.html", "start": {"col": 1, "line": 25, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/AUTH/auth_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/AUTH/auth_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 20, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 20, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 20, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_lab.html", "start": {"col": 1, "line": 20, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/AUTH/auth_success.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/AUTH/auth_success.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 24, "offset": 14}, "file": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 24, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 15, "line": 24, "offset": 14}, "path": "introduction/templates/Lab/AUTH/auth_success.html", "start": {"col": 1, "line": 24, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/DataExp/data_exp_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/DataExp/data_exp_lab.html", "spans": [{"end": {"col": 18, "line": 4, "offset": 94}, "file": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "file": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 21, "offset": 20}, "file": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 19, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 4, "offset": 94}, "path": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 6, "offset": 14}, "path": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 6, "offset": 0}}, {"end": {"col": 15, "line": 21, "offset": 20}, "path": "introduction/templates/Lab/DataExp/data_exp_lab.html", "start": {"col": 1, "line": 19, "offset": 0}}]]}, {"code": 3, "level": "warn", "message": "Syntax error at line introduction/templates/Lab/insec_des/insec_des_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected", "path": "introduction/templates/Lab/insec_des/insec_des_lab.html", "spans": [{"end": {"col": 18, "line": 3, "offset": 76}, "file": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "file": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 23, "line": 19, "offset": 28}, "file": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 17, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 18, "line": 3, "offset": 76}, "path": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 1, "offset": 0}}, {"end": {"col": 15, "line": 5, "offset": 14}, "path": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 5, "offset": 0}}, {"end": {"col": 23, "line": 19, "offset": 28}, "path": "introduction/templates/Lab/insec_des/insec_des_lab.html", "start": {"col": 1, "line": 17, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": [".all-contributorsrc", ".github/workflows/flake8.yml", ".github/workflows/hadolint.yml", ".gitignore", ".vscode/settings.json", "Dockerfile", "Procfile", "PyGoatBot.py", "README.md", "Solutions/img/img4.png", "Solutions/img/pic1.png", "Solutions/img/pic2.png", "Solutions/img/pic3.png", "Solutions/solution.md", "app.log", "chatbot/README.md", "chatbot/pygoatbot.ipynb", "db.sqlite3~f1cf11156c656314790387c2c9eb7f187a3d480e", "docker-compose.yml", "docs/dev_guide.md", "gh-md-toc", "installer.sh", "introduction/__init__.py", "introduction/admin.py", "introduction/apis.py", "introduction/apps.py", "introduction/forms.py", "introduction/lab_code/test.py", "introduction/migrations/0001_initial.py", "introduction/migrations/0002_auto_20210414_1510.py", "introduction/migrations/0003_password_user.py", "introduction/migrations/0004_auto_20210415_1722.py", "introduction/migrations/0005_auto_20210415_1748.py", "introduction/migrations/0006_comments.py", "introduction/migrations/0007_auto_20210418_0022.py", "introduction/migrations/0008_otp.py", "introduction/migrations/0009_auto_20210517_2047.py", "introduction/migrations/0010_authlogin.py", "introduction/migrations/0011_tickits.py", "introduction/migrations/0012_alter_tickits_user.py", "introduction/migrations/0013_alter_comments_id_alter_faang_id_alter_info_id_and_more.py", "introduction/migrations/0014_sql_lab_table.py", "introduction/migrations/0015_blogs.py", "introduction/migrations/0016_alter_blogs_blog_id.py", "introduction/migrations/0017_cf_user.py", "introduction/migrations/0018_cf_user_password2.py", "introduction/migrations/0019_af_admin.py", "introduction/migrations/0020_af_session_id_alter_af_admin_lockout_cooldown.py", "introduction/migrations/0021_csrf_user_tbl.py", "introduction/migrations/__init__.py", "introduction/mitre.py", "introduction/models.py", "introduction/playground/A6/soln.py", "introduction/playground/A6/utility.py", "introduction/playground/A9/api.py", "introduction/playground/A9/archive.py", "introduction/playground/A9/main.py", "introduction/playground/__init__.py", "introduction/playground/readme.md", "introduction/playground/ssrf/__init__.py", "introduction/playground/ssrf/main.py", "introduction/playground/ssrf/secret.txt", "introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog1.txt", "introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog2.txt", "introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog3.txt", "introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog4.txt", "introduction/playground/ssrf/test.py", "introduction/static/Lab/icons/pygoat-mini.png", "introduction/static/Lab/icons/pygoat-mini.svg", "introduction/static/Lab/icons/pygoat-small.png", "introduction/static/Lab/icons/pygoat-small.svg", "introduction/static/Lab/icons/pygoat.png", "introduction/static/Lab/icons/pygoat.svg", "introduction/static/Lab/image/xxe.jpg", "introduction/static/Lab/ssrf.css", "introduction/static/Lab/ssrf.js", "introduction/static/Lab/ssti.css", "introduction/static/Lab/xss.js", "introduction/static/css/common.css", "introduction/static/css/dark-theme.css", "introduction/static/css/home.css", "introduction/static/css/light.css", "introduction/static/css/playground.css", "introduction/static/css/style.css", "introduction/static/fake.txt", "introduction/static/google.jpg", "introduction/static/js/a6.js", "introduction/static/js/a7.js", "introduction/static/js/a9.js", "introduction/static/real.txt", "introduction/templates/Lab/A10/a10.html", "introduction/templates/Lab/A10/a10_lab.html", "introduction/templates/Lab/A10/a10_lab2.html", "introduction/templates/Lab/A10/debug.log", "introduction/templates/Lab/A11/a11.html", "introduction/templates/Lab/A11/a11_lab.html", "introduction/templates/Lab/A9/a9.html", "introduction/templates/Lab/A9/a9_lab.html", "introduction/templates/Lab/A9/a9_lab2.html", "introduction/templates/Lab/AUTH/auth_home.html", "introduction/templates/Lab/AUTH/auth_lab.html", "introduction/templates/Lab/AUTH/auth_lab_login.html", "introduction/templates/Lab/AUTH/auth_lab_signup.html", "introduction/templates/Lab/AUTH/auth_success.html", "introduction/templates/Lab/BrokenAccess/ba.html", "introduction/templates/Lab/BrokenAccess/ba_lab.html", "introduction/templates/Lab/BrokenAuth/bau.html", "introduction/templates/Lab/BrokenAuth/bau_lab.html", "introduction/templates/Lab/BrokenAuth/otp.html", "introduction/templates/Lab/CMD/cmd.html", "introduction/templates/Lab/CMD/cmd_lab.html", "introduction/templates/Lab/CMD/cmd_lab2.html", "introduction/templates/Lab/DataExp/data_exp.html", "introduction/templates/Lab/DataExp/data_exp_lab.html", "introduction/templates/Lab/DataExp/robots.txt", "introduction/templates/Lab/SQL/sql.html", "introduction/templates/Lab/SQL/sql_lab.html", "introduction/templates/Lab/XSS/xss.html", "introduction/templates/Lab/XSS/xss_lab.html", "introduction/templates/Lab/XSS/xss_lab_2.html", "introduction/templates/Lab/XSS/xss_lab_3.html", "introduction/templates/Lab/XXE/xxe.html", "introduction/templates/Lab/XXE/xxe_lab.html", "introduction/templates/Lab/insec_des/insec_des.html", "introduction/templates/Lab/insec_des/insec_des_lab.html", "introduction/templates/Lab/sec_mis/sec_mis.html", "introduction/templates/Lab/sec_mis/sec_mis_lab.html", "introduction/templates/Lab/sec_mis/sec_mis_lab3.html", "introduction/templates/Lab/ssrf/blogs/blog1.txt", "introduction/templates/Lab/ssrf/blogs/blog2.txt", "introduction/templates/Lab/ssrf/blogs/blog3.txt", "introduction/templates/Lab/ssrf/blogs/blog4.txt", "introduction/templates/Lab/ssrf/secret.txt", "introduction/templates/Lab/ssrf/ssrf.html", "introduction/templates/Lab/ssrf/ssrf_discussion.html", "introduction/templates/Lab/ssrf/ssrf_lab.html", "introduction/templates/Lab/ssrf/ssrf_lab2.html", "introduction/templates/Lab/ssrf/ssrf_target.html", "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html", "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html", "introduction/templates/Lab_2021/A1_BrokenAccessControl/secret.html", "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html", "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html", "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html", "introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html", "introduction/templates/Lab_2021/A3_Injection/Blogs/0db9c0e7093d.html", "introduction/templates/Lab_2021/A3_Injection/Blogs/9d73d120683d.html", "introduction/templates/Lab_2021/A3_Injection/Blogs/a2538af1b5e4.html", "introduction/templates/Lab_2021/A3_Injection/injection.html", "introduction/templates/Lab_2021/A3_Injection/sql_lab.html", "introduction/templates/Lab_2021/A3_Injection/ssti.html", "introduction/templates/Lab_2021/A3_Injection/ssti_lab.html", "introduction/templates/Lab_2021/A7_auth_failure/a7.html", "introduction/templates/Lab_2021/A7_auth_failure/lab2.html", "introduction/templates/Lab_2021/A7_auth_failure/lab3.html", "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html", "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html", "introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab3.html", "introduction/templates/introduction/base.html", "introduction/templates/introduction/home.html", "introduction/templates/mitre/csrf_dashboard.html", "introduction/templates/mitre/csrf_lab_login.html", "introduction/templates/mitre/mitre_lab_17.html", "introduction/templates/mitre/mitre_lab_25.html", "introduction/templates/mitre/mitre_top1.html", "introduction/templates/mitre/mitre_top10.html", "introduction/templates/mitre/mitre_top11.html", "introduction/templates/mitre/mitre_top12.html", "introduction/templates/mitre/mitre_top13.html", "introduction/templates/mitre/mitre_top14.html", "introduction/templates/mitre/mitre_top15.html", "introduction/templates/mitre/mitre_top16.html", "introduction/templates/mitre/mitre_top17.html", "introduction/templates/mitre/mitre_top18.html", "introduction/templates/mitre/mitre_top19.html", "introduction/templates/mitre/mitre_top2.html", "introduction/templates/mitre/mitre_top20.html", "introduction/templates/mitre/mitre_top21.html", "introduction/templates/mitre/mitre_top22.html", "introduction/templates/mitre/mitre_top23.html", "introduction/templates/mitre/mitre_top24.html", "introduction/templates/mitre/mitre_top25.html", "introduction/templates/mitre/mitre_top3.html", "introduction/templates/mitre/mitre_top4.html", "introduction/templates/mitre/mitre_top5.html", "introduction/templates/mitre/mitre_top6.html", "introduction/templates/mitre/mitre_top7.html", "introduction/templates/mitre/mitre_top8.html", "introduction/templates/mitre/mitre_top9.html", "introduction/templates/playground/A6/index.html", "introduction/templates/playground/A7/index.html", "introduction/templates/playground/A9/index.html", "introduction/templates/registration/login.html", "introduction/templates/registration/logout.html", "introduction/templates/registration/register.html", "introduction/tests.py", "introduction/urls.py", "introduction/utility.py", "introduction/views.py", "introduction/xee_see.txt", "manage.py", "pygoat/__init__.py", "pygoat/asgi.py", "pygoat/settings.py", "pygoat/urls.py", "pygoat/wsgi.py", "requirements.txt", "runtime.txt", "setup.py", "temp.py", "test.log", "uninstaller.py", "uninstaller.sh"]}, "results": [{"check_id": "dockerfile.security.missing-user.missing-user", "end": {"col": 75, "line": 34, "offset": 740}, "extra": {"engine_kind": "OSS", "fingerprint": "02776bcf79216058ae3017b33dfb1db6bcbf0f8c7109ca03f5667b3aa72cd6d53bf53984cc9290b08933cc0e6dc74a659f713b976f9fb3c8fc93817feeef1290_0", "fix": "USER non-root\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\",\"6\", \"pygoat.wsgi\"]", "is_ignored": false, "lines": "CMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\",\"6\", \"pygoat.wsgi\"]", "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-269: Improper Privilege Management"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 20148, "rule_id": "AbUN06", "rv_id": 928286, "url": "https://semgrep.dev/playground/r/0bTpAQq/dockerfile.security.missing-user.missing-user", "version_id": "0bTpAQq"}}, "shortlink": "https://sg.run/Gbvn", "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user", "subcategory": ["audit"], "technology": ["dockerfile"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$...VARS": {"abstract_content": "[\"gunicorn\"\"--bind\"\"0.0.0.0:8000\"\"--workers\"\"6\"\"pygoat.wsgi\"]", "end": {"col": 75, "line": 34, "offset": 740}, "start": {"col": 5, "line": 34, "offset": 670}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "Dockerfile", "start": {"col": 1, "line": 34, "offset": 666}}, {"check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "end": {"col": 5, "line": 4, "offset": 30}, "extra": {"engine_kind": "OSS", "fingerprint": "0b3b792daab2dc62fd32d3312b5f93adeaaf3cc56f473f8ee518dbf61d96ade648a3e2d21315c12e5e60c401facd36ad19f9c2d5785bd72732b6b486aa7254be_0", "is_ignored": false, "lines": "  db:", "message": "Service 'db' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/", "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10054, "rule_id": "qNUoWr", "rv_id": 835301, "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "version_id": "vdTOQ35"}}, "shortlink": "https://sg.run/0n8q", "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "db", "end": {"col": 5, "line": 4, "offset": 30}, "start": {"col": 3, "line": 4, "offset": 28}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 4, "offset": 28}}, {"check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "end": {"col": 5, "line": 4, "offset": 30}, "extra": {"engine_kind": "OSS", "fingerprint": "a4c9a5b5da893201bcf0908973bfd478af5ce99508d5c1313c871a7cd96bf620cc2c844d70e6da41d1f6e470eed9006460a3c74048353a89477dec781d9b1505_0", "is_ignored": false, "lines": "  db:", "message": "Service 'db' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir", "https://blog.atomist.com/security-of-docker-kubernetes/", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10132, "rule_id": "v8U5vN", "rv_id": 835305, "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "version_id": "ExTrWYr"}}, "shortlink": "https://sg.run/e4JE", "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "db", "end": {"col": 5, "line": 4, "offset": 30}, "start": {"col": 3, "line": 4, "offset": 28}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 4, "offset": 28}}, {"check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "end": {"col": 6, "line": 12, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "87736b9d8cef31303e2d599e7507f7bb57a34861c06065179e905e836b2b11e3b8602d15a33bdd67ab003bc51353aeff42e128d7b5524e0ccdb4ada621866678_0", "is_ignored": false, "lines": "  web:", "message": "Service 'web' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/", "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10054, "rule_id": "qNUoWr", "rv_id": 835301, "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "version_id": "vdTOQ35"}}, "shortlink": "https://sg.run/0n8q", "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "web", "end": {"col": 6, "line": 12, "offset": 225}, "start": {"col": 3, "line": 12, "offset": 222}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 12, "offset": 222}}, {"check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "end": {"col": 6, "line": 12, "offset": 225}, "extra": {"engine_kind": "OSS", "fingerprint": "56fce689fc6a4b07a3924c13c3ea6690b223f4fd2486fd71d596bcef142827c266921a13c9b96a0fd52786ca62cb124d6b86b27361e81f6bc9c9b8756921e6e6_0", "is_ignored": false, "lines": "  web:", "message": "Service 'web' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir", "https://blog.atomist.com/security-of-docker-kubernetes/", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10132, "rule_id": "v8U5vN", "rv_id": 835305, "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "version_id": "ExTrWYr"}}, "shortlink": "https://sg.run/e4JE", "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "web", "end": {"col": 6, "line": 12, "offset": 225}, "start": {"col": 3, "line": 12, "offset": 222}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 12, "offset": 222}}, {"check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "end": {"col": 12, "line": 23, "offset": 446}, "extra": {"engine_kind": "OSS", "fingerprint": "23591327960ac4a8c9e6e4083739f90aba07d5e0f7cb69bf911ba42873c706a39fcbf591acefe665a018640dee047e1f58eefc5644b91d3969db5542fc9c42bb_0", "is_ignored": false, "lines": "  migration:", "message": "Service 'migration' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/", "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10054, "rule_id": "qNUoWr", "rv_id": 835301, "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "version_id": "vdTOQ35"}}, "shortlink": "https://sg.run/0n8q", "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "migration", "end": {"col": 12, "line": 23, "offset": 446}, "start": {"col": 3, "line": 23, "offset": 437}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 23, "offset": 437}}, {"check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "end": {"col": 12, "line": 23, "offset": 446}, "extra": {"engine_kind": "OSS", "fingerprint": "983066f423cf6b5efbb7d4170512c6e7f27ec55f30b8b1d9abbaaf973915139eaca485929b450dc8adb04f90f0e65522a18973145462567a04914d940fdf484b_0", "is_ignored": false, "lines": "  migration:", "message": "Service 'migration' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir", "https://blog.atomist.com/security-of-docker-kubernetes/", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10132, "rule_id": "v8U5vN", "rv_id": 835305, "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "version_id": "ExTrWYr"}}, "shortlink": "https://sg.run/e4JE", "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "migration", "end": {"col": 12, "line": 23, "offset": 446}, "start": {"col": 3, "line": 23, "offset": 437}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "docker-compose.yml", "start": {"col": 3, "line": 23, "offset": 437}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 77, "line": 54, "offset": 2288}, "extra": {"engine_kind": "OSS", "fingerprint": "2d3b14853f00deaed8ccf36ecba7dcb9ac1f79dd8f9dfed4ce707078e2327b467ecd8b67f9da30d18f24c9dfcd59ec6b374479c7c00c5b11d59bd55591d592f7_0", "is_ignored": false, "lines": "@csrf_exempt\ndef ssrf_code_checker(request):\n    if request.user.is_authenticated:\n        if request.method == 'POST':\n            python_code = request.POST['python_code']\n            html_code = request.POST['html_code']\n            if not (ssrf_code_converter(python_code)):\n                return JsonResponse({\"status\": \"error\", \"message\": \"Invalid code\"})\n            test_bench1 = ssrf_html_input_extractor(html_code)\n            \n            if (len(test_bench1) >4):\n                return JsonResponse({'message':'too many inputs in Html\\n Try again'},status = 400)\n            test_bench2 = ['secret.txt']\n            correct_output1 = [{\"blog\": \"blog1-passed\"}, {\"blog\": \"blog2-passed\"}, {\"blog\": \"blog3-passed\"}, {\"blog\": \"blog4-passed\"}]\n            outputs = []\n            for inputs in test_bench1:\n                outputs.append(main.ssrf_lab(inputs))\n            if outputs == correct_output1:\n                outputs = []\n            else:\n                return JsonResponse({'message':'Testbench failed, Code is not working\\n Try again'},status = 200)\n\n            correct_output2 = [{\"blog\": \"No blog found\"}]\n            for inputs in test_bench2:\n                outputs.append(main.ssrf_lab(inputs))\n            if outputs == correct_output2:\n                return JsonResponse({'message':'Congratulation, you have written a secure code.', 'passed':1}, status = 200)\n            \n            return JsonResponse({'message':'Test bench passed but the code is not secure'}, status = 200,safe = False)\n        else:\n            return JsonResponse({'message':'method not allowed'},status = 405)\n    else:\n        return JsonResponse({'message':'UnAuthenticated User'},status = 401)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "ssrf_code_checker", "end": {"col": 22, "line": 23, "offset": 616}, "start": {"col": 5, "line": 23, "offset": 599}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 1, "line": 22, "offset": 582}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 75, "line": 90, "offset": 3594}, "extra": {"engine_kind": "OSS", "fingerprint": "8bef469d6d835477cac185d6919da13bee63f0474dea5ad5a7e80ddb846a6bcbcffada06739a0503b965af22f8e3703864693d197c755a56b92285b175120465_0", "is_ignored": false, "lines": "@csrf_exempt\n# @authentication_decorator\ndef log_function_checker(request):\n    if request.method == 'POST':\n        csrf_token = request.POST.get(\"csrfmiddlewaretoken\")\n        log_code = request.POST.get('log_code')\n        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)\n        f.close()\n        f = open(api_filename,\"w\")\n        f.write(api_code)\n        f.close()\n        # Clearing the log file before starting the test\n        f = open('test.log', 'w')\n        f.write(\"\")\n        f.close()\n        url = \"http://127.0.0.1:8000/2021/discussion/A9/target\"\n        payload={'csrfmiddlewaretoken': csrf_token }\n        requests.request(\"GET\", url)\n        requests.request(\"POST\", url)\n        requests.request(\"PATCH\", url, data=payload)\n        requests.request(\"DELETE\", url)\n        f = open('test.log', 'r')\n        lines = f.readlines()\n        f.close()\n        return JsonResponse({\"message\":\"success\", \"logs\": lines},status = 200)\n    else:\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "log_function_checker", "end": {"col": 25, "line": 61, "offset": 2393}, "start": {"col": 5, "line": 61, "offset": 2373}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 1, "line": 59, "offset": 2328}}, {"check_id": "python.django.security.injection.request-data-write.request-data-write", "end": {"col": 26, "line": 70, "offset": 2837}, "extra": {"engine_kind": "OSS", "fingerprint": "be4638bf4115ae8bafc33af11f84fbfbc7792f505c9091259a25a6d37937aa36a91d4af2ffcb34b4b70b6692d4c060db72aec0193b7c974a3531f187c67fab18_0", "is_ignored": false, "lines": "        log_code = request.POST.get('log_code')\n        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)", "message": "Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9498, "rule_id": "ReUg5z", "rv_id": 834450, "url": "https://semgrep.dev/playground/r/5PTyGJD/python.django.security.injection.request-data-write.request-data-write", "version_id": "5PTyGJD"}}, "shortlink": "https://sg.run/0Q6j", "source": "https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Improper Validation"]}, "metavars": {"$DATA": {"abstract_content": "log_code", "end": {"col": 17, "line": 64, "offset": 2514}, "start": {"col": 9, "line": 64, "offset": 2506}}, "$F": {"abstract_content": "f", "end": {"col": 10, "line": 70, "offset": 2821}, "propagated_value": {"svalue_abstract_content": "open(log_filename\"w\")", "svalue_end": {"col": 35, "line": 69, "offset": 2811}, "svalue_start": {"col": 13, "line": 69, "offset": 2789}}, "start": {"col": 9, "line": 70, "offset": 2820}}, "$W": {"abstract_content": "POST", "end": {"col": 32, "line": 64, "offset": 2529}, "start": {"col": 28, "line": 64, "offset": 2525}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 9, "line": 64, "offset": 2506}}, {"check_id": "python.django.security.injection.request-data-write.request-data-write", "end": {"col": 26, "line": 73, "offset": 2916}, "extra": {"engine_kind": "OSS", "fingerprint": "389b5dda2e9be773649bb510fd6f13d489003311f98db6586b79854c3098639a59b3fa71c0f3d21118c6c00de5c31ba38e40cc3056ca0aa30218ad26d1f96741_0", "is_ignored": false, "lines": "        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)\n        f.close()\n        f = open(api_filename,\"w\")\n        f.write(api_code)", "message": "Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9498, "rule_id": "ReUg5z", "rv_id": 834450, "url": "https://semgrep.dev/playground/r/5PTyGJD/python.django.security.injection.request-data-write.request-data-write", "version_id": "5PTyGJD"}}, "shortlink": "https://sg.run/0Q6j", "source": "https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Improper Validation"]}, "metavars": {"$DATA": {"abstract_content": "api_code", "end": {"col": 17, "line": 65, "offset": 2562}, "start": {"col": 9, "line": 65, "offset": 2554}}, "$F": {"abstract_content": "f", "end": {"col": 10, "line": 73, "offset": 2900}, "propagated_value": {"svalue_abstract_content": "open(api_filename\"w\")", "svalue_end": {"col": 35, "line": 72, "offset": 2890}, "svalue_start": {"col": 13, "line": 72, "offset": 2868}}, "start": {"col": 9, "line": 73, "offset": 2899}}, "$W": {"abstract_content": "POST", "end": {"col": 32, "line": 65, "offset": 2577}, "start": {"col": 28, "line": 65, "offset": 2573}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 9, "line": 65, "offset": 2554}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 60, "line": 109, "offset": 4245}, "extra": {"engine_kind": "OSS", "fingerprint": "ffeb2d134aefc2f19a38d3f546112cb166327a14205f7ad6263f22a91836cbb702497984fa78f8810f5a33cc08e8f5ebd884e01932ab35d29ad834a7a23f18e0_0", "is_ignored": false, "lines": "@csrf_exempt\ndef A7_disscussion_api(request):\n    if request.method != 'POST':\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)\n\n    try:\n        code = request.POST.get('code')\n    except:\n        return JsonResponse({\"message\":\"missing code\"},status = 400)\n\n    search_snipet = \"AF_session_id.objects.get(sesssion_id = cookie).delete()\"\n    search_snipet2 = \"AF_session_id.objects.get(sesssion_id=cookie).delete()\"\n\n    if (search_snipet in code) or (search_snipet2 in code):\n        return JsonResponse({\"message\":\"success\"},status = 200)\n\n    return JsonResponse({\"message\":\"failure\"},status = 400)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "A7_disscussion_api", "end": {"col": 23, "line": 94, "offset": 3652}, "start": {"col": 5, "line": 94, "offset": 3634}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 1, "line": 93, "offset": 3617}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 64, "line": 123, "offset": 4736}, "extra": {"engine_kind": "OSS", "fingerprint": "877c489a52f15be13e30584b03ca34e1d3715584b02608de6d659ba7a9df51ec98b5ea74b1f166c71aba308a10391b951aba2848d1317a11ce1c95860a5ffb02_0", "is_ignored": false, "lines": "@csrf_exempt\ndef A6_disscussion_api(request):\n    test_bench = [\"Pillow==8.0.0\",\"PyJWT==2.4.0\",\"requests==2.28.0\",\"Django==4.0.4\"]\n    \n    try:\n        result = check_vuln(test_bench)\n        print(len(result))\n        if result:\n            return JsonResponse({\"message\":\"success\",\"vulns\":result},status = 200)\n        return JsonResponse({\"message\":\"failure\"},status = 400)\n    except Exception as e:\n        return JsonResponse({\"message\":\"failure\"},status = 400)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "A6_disscussion_api", "end": {"col": 23, "line": 113, "offset": 4303}, "start": {"col": 5, "line": 113, "offset": 4285}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 1, "line": 112, "offset": 4268}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 60, "line": 138, "offset": 5267}, "extra": {"engine_kind": "OSS", "fingerprint": "c361f237adbf5148745cf5fc72982323a355e01330d72810c8e2f64ce43520e119e884f6910767101afbff87c791d71dc92328079ee35b223a18404f39f82e28_0", "is_ignored": false, "lines": "@csrf_exempt\ndef A6_disscussion_api_2(request):\n    if request.method != 'POST':\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)\n    try:\n        code = request.POST.get('code')\n        dirname = os.path.dirname(__file__)\n        filename = os.path.join(dirname, \"playground/A6/utility.py\")\n        f = open(filename,\"w\")\n        f.write(code)\n        f.close()\n    except:\n        return JsonResponse({\"message\":\"missing code\"},status = 400)\n    return JsonResponse({\"message\":\"success\"},status = 200)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "A6_disscussion_api_2", "end": {"col": 25, "line": 126, "offset": 4775}, "start": {"col": 5, "line": 126, "offset": 4755}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 1, "line": 125, "offset": 4738}}, {"check_id": "python.django.security.injection.request-data-write.request-data-write", "end": {"col": 22, "line": 134, "offset": 5108}, "extra": {"engine_kind": "OSS", "fingerprint": "a842d7b67dbfe63c8e4c993c831da8e0cc61dc2faad67ac58b5ba5eceaa9bcc1dc35b19d72df9e1046644aec55b250228ab5bf434bbd9f79c5aa2c8f955b5c98_0", "is_ignored": false, "lines": "        code = request.POST.get('code')\n        dirname = os.path.dirname(__file__)\n        filename = os.path.join(dirname, \"playground/A6/utility.py\")\n        f = open(filename,\"w\")\n        f.write(code)", "message": "Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9498, "rule_id": "ReUg5z", "rv_id": 834450, "url": "https://semgrep.dev/playground/r/5PTyGJD/python.django.security.injection.request-data-write.request-data-write", "version_id": "5PTyGJD"}}, "shortlink": "https://sg.run/0Q6j", "source": "https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Improper Validation"]}, "metavars": {"$DATA": {"abstract_content": "code", "end": {"col": 13, "line": 130, "offset": 4915}, "start": {"col": 9, "line": 130, "offset": 4911}}, "$F": {"abstract_content": "f", "end": {"col": 10, "line": 134, "offset": 5096}, "propagated_value": {"svalue_abstract_content": "open(filename\"w\")", "svalue_end": {"col": 31, "line": 133, "offset": 5086}, "svalue_start": {"col": 13, "line": 133, "offset": 5068}}, "start": {"col": 9, "line": 134, "offset": 5095}}, "$W": {"abstract_content": "POST", "end": {"col": 28, "line": 130, "offset": 4930}, "start": {"col": 24, "line": 130, "offset": 4926}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/apis.py", "start": {"col": 9, "line": 130, "offset": 4911}}, {"check_id": "python.lang.security.audit.md5-used-as-password.md5-used-as-password", "end": {"col": 54, "line": 161, "offset": 4400}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 54, "line": 161, "offset": 4400}, "path": "introduction/mitre.py", "start": {"col": 20, "line": 161, "offset": 4366}}, "md5(password.encode()).hexdigest()"]], "taint_source": ["CliLoc", [{"end": {"col": 23, "line": 161, "offset": 4369}, "path": "introduction/mitre.py", "start": {"col": 20, "line": 161, "offset": 4366}}, "md5"]]}, "engine_kind": "OSS", "fingerprint": "ea767c6603d32dc3d96e5731f633cc610c95ac9f90faf72a5eb0e21a78fff39f36572b024d2acad0358d1304189093192e38d5bd2b594b94bc0300ef239cb15a_0", "is_ignored": false, "lines": "        password = md5(password.encode()).hexdigest()", "message": "It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://tools.ietf.org/html/rfc6151", "https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision", "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html", "https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords", "https://github.com/returntocorp/semgrep-rules/issues/1609", "https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14703, "rule_id": "6JU1w1", "rv_id": 834636, "url": "https://semgrep.dev/playground/r/O9TJ7Gj/python.lang.security.audit.md5-used-as-password.md5-used-as-password", "version_id": "O9TJ7Gj"}}, "shortlink": "https://sg.run/5DwD", "source": "https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password", "subcategory": ["vuln"], "technology": ["pycryptodome", "hashlib", "md5"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$1": {"abstract_content": "md5(password.encode()).hexdigest", "end": {"col": 33, "line": 1, "offset": 32}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUNCTION": {"abstract_content": "md5(password.encode()).hexdigest", "end": {"col": 52, "line": 161, "offset": 4398}, "start": {"col": 20, "line": 161, "offset": 4366}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 20, "line": 161, "offset": 4366}}, {"check_id": "python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret", "end": {"col": 62, "line": 169, "offset": 4771}, "extra": {"engine_kind": "OSS", "fingerprint": "611ab643a9a1cafac1ce5c6c21a9ba1756a906c92275b6b2feea6f8a66513e6ab00e2e242305017e0e3ef80429769c41479f2c40b29052b3a35827a5ec0e7cae_0", "is_ignored": false, "lines": "            cookie = jwt.encode(payload, 'csrf_vulneribility', algorithm='HS256')", "message": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-522: Insufficiently Protected Credentials"], "cwe2021-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A02:2017 - Broken Authentication", "A04:2021 - Insecure Design"], "references": ["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9557, "rule_id": "X5U8P5", "rv_id": 834513, "url": "https://semgrep.dev/playground/r/WrTdnOd/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret", "version_id": "WrTdnOd"}}, "shortlink": "https://sg.run/l2E9", "source": "https://semgrep.dev/r/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret", "subcategory": ["vuln"], "technology": ["jwt"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$SECRET": {"abstract_content": "'csrf_vulneribility'", "end": {"col": 62, "line": 169, "offset": 4771}, "start": {"col": 42, "line": 169, "offset": 4751}}, "$X": {"abstract_content": "payload", "end": {"col": 40, "line": 169, "offset": 4749}, "start": {"col": 33, "line": 169, "offset": 4742}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 42, "line": 169, "offset": 4751}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 56, "line": 171, "offset": 4907}, "extra": {"engine_kind": "OSS", "fingerprint": "a3960b79e05a17a6a840a1f06dae5919adbf28488255add3e2bc5d4e89fcc5a276391ce6f8bc7b6e42080709eb4c95fcafb37bbe25993c341e658003949640cb_0", "is_ignored": false, "lines": "            response.set_cookie('auth_cookiee', cookie)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 13, "line": 171, "offset": 4864}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 50, "line": 189, "offset": 5599}, "extra": {"engine_kind": "OSS", "fingerprint": "39c7284e78d57269272719f6d5d29d19368eefefd5b98495e114002485ad1f7466c76596368159d22fd550a637f1bd892dbeb2dc6f55ee720e359ebdb89507c0_0", "is_ignored": false, "lines": "@authentication_decorator\n@csrf_exempt\ndef csrf_transfer_monei(request):\n    if request.method == 'GET':\n        try:\n            cookie = request.COOKIES['auth_cookiee']\n            payload = jwt.decode(cookie, 'csrf_vulneribility', algorithms=['HS256'])\n            username = payload['username']\n            User = CSRF_user_tbl.objects.filter(username=username)\n            if not User:\n                redirect('/mitre/9/lab/login')\n            return render(request, 'mitre/csrf_dashboard.html', {'balance': User[0].balance})\n        except:\n            return redirect('/mitre/9/lab/login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "csrf_transfer_monei", "end": {"col": 24, "line": 178, "offset": 5064}, "start": {"col": 5, "line": 178, "offset": 5045}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 1, "line": 176, "offset": 5002}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 42, "line": 221, "offset": 6829}, "extra": {"engine_kind": "OSS", "fingerprint": "3bd08d07f3616b3e9fb1531618fc52c5173f3258ffce6cb8c8c6a85b20d8f0c0e9432654d88fd84e2c1b3d52df5efe34547ac3cbb2775b13942c51d51ff77286_0", "is_ignored": false, "lines": "@csrf_exempt\ndef mitre_lab_25_api(request):\n    if request.method == \"POST\":\n        expression = request.POST.get('expression')\n        result = eval(expression)\n        return JsonResponse({'result': result})\n    else:\n        return redirect('/mitre/25/lab/')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "mitre_lab_25_api", "end": {"col": 21, "line": 215, "offset": 6600}, "start": {"col": 5, "line": 215, "offset": 6584}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 1, "line": 214, "offset": 6567}}, {"check_id": "python.django.security.injection.code.user-eval.user-eval", "end": {"col": 34, "line": 218, "offset": 6729}, "extra": {"engine_kind": "OSS", "fingerprint": "16b058d7ce6382ab0004c866a6a81acbf09d97a7c629401bcf9e23d20e1315c8c515f63b2d7681d8db31381c241e24d5d7aa9d60197813dcb410d069e8ca8566_0", "is_ignored": false, "lines": "        expression = request.POST.get('expression')\n        result = eval(expression)", "message": "Found user data in a call to 'eval'. This is extremely dangerous because it can enable an attacker to execute arbitrary remote code on the system. Instead, refactor your code to not use 'eval' and instead use a safe library for the specific functionality you need.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"], "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html", "https://owasp.org/www-community/attacks/Code_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9501, "rule_id": "DbUpDQ", "rv_id": 834433, "url": "https://semgrep.dev/playground/r/xyTNrL0/python.django.security.injection.code.user-eval.user-eval", "version_id": "xyTNrL0"}}, "shortlink": "https://sg.run/PJDW", "source": "https://semgrep.dev/r/python.django.security.injection.code.user-eval.user-eval", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$F": {"abstract_content": "mitre_lab_25_api", "end": {"col": 21, "line": 215, "offset": 6600}, "start": {"col": 5, "line": 215, "offset": 6584}}, "$V": {"abstract_content": "expression", "end": {"col": 19, "line": 217, "offset": 6662}, "start": {"col": 9, "line": 217, "offset": 6652}}, "$W": {"abstract_content": "POST", "end": {"col": 34, "line": 217, "offset": 6677}, "start": {"col": 30, "line": 217, "offset": 6673}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 9, "line": 217, "offset": 6652}}, {"check_id": "python.lang.security.audit.eval-detected.eval-detected", "end": {"col": 34, "line": 218, "offset": 6729}, "extra": {"engine_kind": "OSS", "fingerprint": "3a71a35bf3f477d805112137ed91deb1b379944439526a46e8f0de4ab242f93bc35b7c7cf21445e6db092f47eabeba5310c234d55ae46117df24b606e96ffbe2_0", "is_ignored": false, "lines": "        result = eval(expression)", "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.", "metadata": {"asvs": {"control_id": "5.2.4 Dyanmic Code Execution Features", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"], "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9635, "rule_id": "gxU149", "rv_id": 834608, "url": "https://semgrep.dev/playground/r/5PTyGO7/python.lang.security.audit.eval-detected.eval-detected", "version_id": "5PTyGO7"}}, "shortlink": "https://sg.run/ZvrD", "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected", "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval", "subcategory": ["audit"], "technology": ["python"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 18, "line": 218, "offset": 6713}}, {"check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "end": {"col": 51, "line": 233, "offset": 7124}, "extra": {"engine_kind": "OSS", "fingerprint": "3c960c552411d7d480542af0c5342d109b3bafef7de8d208a05c7b344e4e813f7dd620a183d2f5be79aec41d0062806f487fa5cf03095333fd233c420bedbef7_0", "fix": "False", "is_ignored": false, "lines": "    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)", "message": "Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9646, "rule_id": "DbUpz2", "rv_id": 834650, "url": "https://semgrep.dev/playground/r/PkTxGkR/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "version_id": "PkTxGkR"}}, "shortlink": "https://sg.run/J92w", "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html", "subcategory": ["secure default"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "Popen", "end": {"col": 31, "line": 233, "offset": 7104}, "start": {"col": 26, "line": 233, "offset": 7099}}, "$TRUE": {"abstract_content": "True", "end": {"col": 51, "line": 233, "offset": 7124}, "start": {"col": 47, "line": 233, "offset": 7120}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 47, "line": 233, "offset": 7120}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 88, "line": 247, "offset": 7654}, "extra": {"engine_kind": "OSS", "fingerprint": "45d758bdbcd1fc9963b1838f952e5b5df3318f5e34eccf72f4be5a470db7789abc82a69f138c1a939614255039bfbb5dea1521f10669ebe0d77b2f3c3102d063_0", "is_ignored": false, "lines": "@csrf_exempt\ndef mitre_lab_17_api(request):\n    if request.method == \"POST\":\n        ip = request.POST.get('ip')\n        command = \"nmap \" + ip \n        res, err = command_out(command)\n        res = res.decode()\n        err = err.decode()\n        pattern = \"STATE SERVICE.*\\\\n\\\\n\"\n        ports = re.findall(pattern, res,re.DOTALL)[0][14:-2].split('\\n')\n        return JsonResponse({'raw_res': str(res), 'raw_err': str(err), 'ports': ports})", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "mitre_lab_17_api", "end": {"col": 21, "line": 238, "offset": 7246}, "start": {"col": 5, "line": 238, "offset": 7230}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/mitre.py", "start": {"col": 1, "line": 237, "offset": 7213}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 71, "line": 33, "offset": 1601}, "extra": {"engine_kind": "OSS", "fingerprint": "6414d84080647287a56ac40ac539e68d14c7df967fc0d430285e7a1a2d485a3b5f84f9e7900818229c68e4be2b5033521be955f655d1a7e07a0e96512db79679_0", "is_ignored": false, "lines": "@csrf_exempt\ndef log_function_target(request):\n    L = Log(request)\n    if request.method == \"GET\":\n        L.info(\"GET request\")\n        return JsonResponse({\"message\":\"normal get request\", \"method\":\"get\"},status = 200)\n    if request.method == \"POST\":\n        username = request.POST['username']\n        password = request.POST['password']\n        L.info(f\"POST request with username {username} and password {password}\")\n        if username == \"admin\" and password == \"admin\":\n            return JsonResponse({\"message\":\"Loged in successfully\", \"method\":\"post\"},status = 200)\n        return JsonResponse({\"message\":\"Invalid credentials\", \"method\":\"post\"},status = 401)\n    if request.method == \"PUT\":\n        L.info(\"PUT request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"put\"},status = 200)\n    if request.method == \"DELETE\":\n        if request.user.is_authenticated:\n            return JsonResponse({\"message\":\"User is authenticated\", \"method\":\"delete\"},status = 200)\n        L.error(\"DELETE request\")\n        return JsonResponse({\"message\":\"permission denied\", \"method\":\"delete\"},status = 200)\n    if request.method == \"PATCH\":\n        L.info(\"PATCH request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"patch\"},status = 200)\n    if request.method == \"UPDATE\":\n        return JsonResponse({\"message\":\"success\", \"method\":\"update\"},status = 200)\n    return JsonResponse({\"message\":\"method not allowed\"},status = 403)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "log_function_target", "end": {"col": 24, "line": 8, "offset": 158}, "start": {"col": 5, "line": 8, "offset": 139}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/playground/A9/api.py", "start": {"col": 1, "line": 7, "offset": 121}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 71, "line": 33, "offset": 1569}, "extra": {"engine_kind": "OSS", "fingerprint": "64ffeff6e27b31d8497884023fbeff139351912240b637560f45d7958cee1df2c903c2d03ae5802e7f0f47694f9406709620b4606c6de7d674f80efbcd8ca660_0", "is_ignored": false, "lines": "@csrf_exempt\ndef log_function_target(request):\n    L = Log(request)\n    if request.method == \"GET\":\n        L.info(\"GET request\")\n        return JsonResponse({\"message\":\"normal get request\", \"method\":\"get\"},status = 200)\n    if request.method == \"POST\":\n        username = request.POST['username']\n        password = request.POST['password']\n        L.info(f\"POST request with username {username} and password {password}\")\n        if username == \"admin\" and password == \"admin\":\n            return JsonResponse({\"message\":\"Loged in successfully\", \"method\":\"post\"},status = 200)\n        return JsonResponse({\"message\":\"Invalid credentials\", \"method\":\"post\"},status = 401)\n    if request.method == \"PUT\":\n        L.info(\"PUT request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"put\"},status = 200)\n    if request.method == \"DELETE\":\n        if request.user.is_authenticated:\n            return JsonResponse({\"message\":\"User is authenticated\", \"method\":\"delete\"},status = 200)\n        L.error(\"DELETE request\")\n        return JsonResponse({\"message\":\"permission denied\", \"method\":\"delete\"},status = 200)\n    if request.method == \"PATCH\":\n        L.info(\"PATCH request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"patch\"},status = 200)\n    if request.method == \"UPDATE\":\n        return JsonResponse({\"message\":\"success\", \"method\":\"update\"},status = 200)\n    return JsonResponse({\"message\":\"method not allowed\"},status = 403)", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "log_function_target", "end": {"col": 24, "line": 8, "offset": 151}, "start": {"col": 5, "line": 8, "offset": 132}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/playground/A9/archive.py", "start": {"col": 1, "line": 7, "offset": 115}}, {"check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token", "end": {"col": 210, "line": 4, "offset": 322}, "extra": {"engine_kind": "OSS", "fingerprint": "9f143409c967066b678bea31ceb920fff27645a353fda40e50dbfd0e86a02d14790a51eb2a38927c27846bd489a39442a2216cc7c261efadca487f3e4a583e8a_0", "is_ignored": false, "lines": "    // myHeaders.append(\"Cookie\", \"csrftoken=5fVOTXh2HNahtvJFJNRSrKkwPAgPM9YCHlrCGprAxhAAKOUWMxqMnWm8BUomv0Yd; jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjUzMzEzMDIxLCJpYXQiOjE2NTMzMDk0MjF9.dh2gfP9wKD8GKu1J-jVs2jJUYMgKu_kMaJjrD0hHP-I\");", "message": "JWT token detected", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12854, "rule_id": "kxU8E8", "rv_id": 833777, "url": "https://semgrep.dev/playground/r/yeTN18Q/generic.secrets.security.detected-jwt-token.detected-jwt-token", "version_id": "yeTN18Q"}}, "shortlink": "https://sg.run/05N5", "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token", "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py", "subcategory": ["audit"], "technology": ["secrets", "jwt"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/static/js/a7.js", "start": {"col": 116, "line": 4, "offset": 228}}, {"check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token", "end": {"col": 207, "line": 18, "offset": 711}, "extra": {"engine_kind": "OSS", "fingerprint": "0351a53c7214f89703a7cc24715480943a60ed50d72da59e97d12aa1c5e04865467ebc64a72baa3b03905e2e22d643c7f522774fa1f1549899e2319b4823631a_0", "is_ignored": false, "lines": "    myHeaders.append(\"Cookie\", \"csrftoken=5fVOTXh2HNahtvJFJNRSrKkwPAgPM9YCHlrCGprAxhAAKOUWMxqMnWm8BUomv0Yd; jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjUzMzEzMDIxLCJpYXQiOjE2NTMzMDk0MjF9.dh2gfP9wKD8GKu1J-jVs2jJUYMgKu_kMaJjrD0hHP-I\");", "message": "JWT token detected", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12854, "rule_id": "kxU8E8", "rv_id": 833777, "url": "https://semgrep.dev/playground/r/yeTN18Q/generic.secrets.security.detected-jwt-token.detected-jwt-token", "version_id": "yeTN18Q"}}, "shortlink": "https://sg.run/05N5", "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token", "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py", "subcategory": ["audit"], "technology": ["secrets", "jwt"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/static/js/a9.js", "start": {"col": 113, "line": 18, "offset": 617}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 41, "line": 40, "offset": 1546}, "extra": {"engine_kind": "OSS", "fingerprint": "63620f765169ad1354b15660d21643db72743148ee1726cc300d851696edc64e7b1c13e1c8fc7370dec33b49d8ce21acfebfa65c6463275d962d410138239ec8_0", "is_ignored": false, "lines": "            li.innerHTML = data.logs[i];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9239, "rule_id": "ReUg41", "rv_id": 834049, "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "A8T37l8"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$EL": {"abstract_content": "li", "end": {"col": 15, "line": 40, "offset": 1520}, "propagated_value": {"svalue_abstract_content": "document.createElement(\"li\")", "svalue_end": {"col": 50, "line": 39, "offset": 1504}, "svalue_start": {"col": 22, "line": 39, "offset": 1476}}, "start": {"col": 13, "line": 40, "offset": 1518}}, "$HTML": {"abstract_content": "data.logs[i]", "end": {"col": 40, "line": 40, "offset": 1545}, "start": {"col": 28, "line": 40, "offset": 1533}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/static/js/a9.js", "start": {"col": 13, "line": 40, "offset": 1518}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 14, "offset": 423}, "extra": {"engine_kind": "OSS", "fingerprint": "39c24f28fe90fc823aef79becd1f7b7fbaa8f97246336a42976ff05d9f37317692e299d3d38ce39fe4a6b404656f8e28f62216c8fbb5e442c82cdd1eda8eaae3_0", "is_ignored": false, "lines": "    <form enctype=\"multipart/form-data\" method=\"post\" action=\"/a9_lab\">\n        <input type=\"file\" name=\"file\"><br>\n        <br>\n        <button class=\"btn btn-info\" type=\"submit\">Upload</button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 53, "line": 10, "offset": 268}, "start": {"col": 49, "line": 10, "offset": 264}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/A9/a9_lab.html", "start": {"col": 5, "line": 10, "offset": 220}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 25, "offset": 973}, "extra": {"engine_kind": "OSS", "fingerprint": "cd257c73794366c1e7c0c9f9f077ba5189201e42bd59d651e143a14d2245b349fcf2dea544e90340798983e1e56293e76297317360358cb68d8cda04aeba9fba_0", "is_ignored": false, "lines": "    <form enctype=\"multipart/form-data\" id=\"a9_form2\" method=\"POST\" style=\"display: flex;flex-direction: column;align-items: center;margin-bottom: 50px;\">\n        <input type=\"file\" name=\"file\" id=\"a9_file\" />\n        <input type=\"text\" name=\"function\" id=\"a9_function\" placeholder=\"function\"/>\n        <button type=\"submit\" id=\"a9_submit\" >Submit</button>\n    </form><br><br>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "POST", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "POST", "end": {"col": 67, "line": 21, "offset": 671}, "start": {"col": 63, "line": 21, "offset": 667}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/A9/a9_lab2.html", "start": {"col": 5, "line": 21, "offset": 609}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 18, "offset": 592}, "extra": {"engine_kind": "OSS", "fingerprint": "689059ffed525598c0d311633e06afdba2fba5311c13caee1561644ad3d13758303cba8ece4c17fe42f96593c5cfe5df393c8c96820e0fa1d9e5125566e09111_0", "is_ignored": false, "lines": "        <form method=\"post\" action=\"/ba_lab\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 27, "line": 11, "offset": 289}, "start": {"col": 23, "line": 11, "offset": 285}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/BrokenAccess/ba_lab.html", "start": {"col": 9, "line": 11, "offset": 271}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 22, "offset": 733}, "extra": {"engine_kind": "OSS", "fingerprint": "8e7dd730eacf0de1effe8a64f292d3448ec57670547e2d3ce6492ebde073ae8aaec217216c1f1ea921e58761461e3958cabe1ec5ebff9e624e432fe14adbbfca_0", "is_ignored": false, "lines": "    <form method=\"post\" action=\"/otp\">\n        <label for='enter'>Enter Your OTP:</label>\n        <input id=\"enter\" type=\"number\" maxlength=\"3\" name=\"otp\"><br><br>\n        <button class=\"btn btn-info\" type=\"submit\">Log in</button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 23, "line": 18, "offset": 513}, "start": {"col": 19, "line": 18, "offset": 509}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/BrokenAuth/otp.html", "start": {"col": 5, "line": 18, "offset": 495}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 16, "offset": 698}, "extra": {"engine_kind": "OSS", "fingerprint": "1914fc2fb2842c92d5c41d19fa38165c3eff14446209f565f0d78f2abc341835fc260d6034b24d18dff5b85b90c4d26c50e173236671fe6a0c45512acc96bc14_0", "is_ignored": false, "lines": "        <form method=\"post\" action=\"/cmd_lab\">\n            <input type=\"text\" name=\"domain\" placeholder=\"Enter Domain Here\"><br><br>\n            <input type=\"radio\" id=\"linux\" name=\"os\" value=\"linux\">\n            <label for=\"linux\">Linux</label>\n            <input type=\"radio\" id=\"windows\" name=\"os\" value=\"win\">\n            <label for=\"windows\">Windows</label><br>\n            <button class=\"btn btn-info\" type=\"submit\" style=\"align:right\">GO</button>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 27, "line": 9, "offset": 255}, "start": {"col": 23, "line": 9, "offset": 251}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/CMD/cmd_lab.html", "start": {"col": 9, "line": 9, "offset": 237}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 12, "offset": 454}, "extra": {"engine_kind": "OSS", "fingerprint": "2f38b15704c7322f83c9b194a0103a57a3cb1873e06d60b2910ff30b53ce4d8e6e0c54b73ddc35a43b9136b25bd9b60a614e282e23490e507077ab521133c912_0", "is_ignored": false, "lines": "        <form method=\"post\" action=\"/cmd_lab2\">\n            <input type=\"text\" name=\"val\" placeholder=\"eg. 7*7\"><br><br>\n            <center><button class=\"btn btn-info\" type=\"submit\">GO</button></center>\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 27, "line": 9, "offset": 260}, "start": {"col": 23, "line": 9, "offset": 256}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/CMD/cmd_lab2.html", "start": {"col": 9, "line": 9, "offset": 242}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 129, "offset": 9848}, "extra": {"engine_kind": "OSS", "fingerprint": "ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_0", "is_ignored": false, "lines": "    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog1.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog1 </button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 23, "line": 125, "offset": 9629}, "start": {"col": 19, "line": 125, "offset": 9625}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 5, "line": 125, "offset": 9611}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 134, "offset": 10090}, "extra": {"engine_kind": "OSS", "fingerprint": "ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_1", "is_ignored": false, "lines": "    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog2.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog2 </button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 23, "line": 130, "offset": 9871}, "start": {"col": 19, "line": 130, "offset": 9867}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 5, "line": 130, "offset": 9853}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 139, "offset": 10332}, "extra": {"engine_kind": "OSS", "fingerprint": "ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_2", "is_ignored": false, "lines": "    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog3.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog3 </button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 23, "line": 135, "offset": 10113}, "start": {"col": 19, "line": 135, "offset": 10109}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 5, "line": 135, "offset": 10095}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 12, "line": 144, "offset": 10574}, "extra": {"engine_kind": "OSS", "fingerprint": "ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_3", "is_ignored": false, "lines": "    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog4.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog4 </button>\n    </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 23, "line": 140, "offset": 10355}, "start": {"col": 19, "line": 140, "offset": 10351}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab/ssrf/ssrf_discussion.html", "start": {"col": 5, "line": 140, "offset": 10337}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 18, "offset": 605}, "extra": {"engine_kind": "OSS", "fingerprint": "d1f213b8b60b4da1e500e01b90728dc4ede017dfca6e40def70543e278b5b1f015cc46ca7684ef1b5b82664573a8b2099e0c157117ce9162937f3e860a82a73b_0", "is_ignored": false, "lines": "        <form method=\"post\" action=\"/broken_access_lab_1\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 27, "line": 11, "offset": 289}, "start": {"col": 23, "line": 11, "offset": 285}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html", "start": {"col": 9, "line": 11, "offset": 271}}, {"check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token", "end": {"col": 16, "line": 18, "offset": 629}, "extra": {"engine_kind": "OSS", "fingerprint": "e38c316b557fb586af36f2c890371456e6fe286dfc9959cc9232fff2f28244c6948cf2bfa736d6c7bef94f6f6476706f8bf9b52d0cac6e5c3c007994e44e78ff_0", "is_ignored": false, "lines": "        <form method=\"post\" action=\"/broken_access_lab_2\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>", "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)", "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 73471, "rule_id": "PeUyYG", "rv_id": 834427, "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token", "version_id": "yeTNgk0"}}, "shortlink": "https://sg.run/N0Bp", "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$1": {"abstract_content": "post", "end": {"col": 5, "line": 1, "offset": 4}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "post", "end": {"col": 27, "line": 11, "offset": 313}, "start": {"col": 23, "line": 11, "offset": 309}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html", "start": {"col": 9, "line": 11, "offset": 295}}, {"check_id": "python.django.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 112, "line": 157, "offset": 4961}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "name", "location": {"end": {"col": 13, "line": 149, "offset": 4713}, "path": "introduction/views.py", "start": {"col": 9, "line": 149, "offset": 4709}}}], "taint_sink": ["CliLoc", [{"end": {"col": 112, "line": 157, "offset": 4961}, "path": "introduction/views.py", "start": {"col": 29, "line": 157, "offset": 4878}}, "\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 149, "offset": 4726}, "path": "introduction/views.py", "start": {"col": 14, "line": 149, "offset": 4714}}, "request.POST"]]}, "engine_kind": "OSS", "fingerprint": "96056686594b4c1d3f50b576a48f3f6f4afaf5298c805304b9b3b0d5cdb69a57d06fddf8ea40241d6f2b9bf2a901b2563861d962f13a2b334b8bf349c0c3b67a_0", "is_ignored": false, "lines": "                sql_query = \"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\"", "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14701, "rule_id": "lBU8Ad", "rv_id": 906695, "url": "https://semgrep.dev/playground/r/X0TA1zR/python.django.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "X0TA1zR"}}, "shortlink": "https://sg.run/PbZp", "source": "https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Mass Assignment"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$ANYTHING": {"abstract_content": "POST", "end": {"col": 26, "line": 149, "offset": 4726}, "start": {"col": 22, "line": 149, "offset": 4722}}, "$SQLSTR": {"abstract_content": "SELECT * FROM introduction_login WHERE user='", "end": {"col": 75, "line": 157, "offset": 4924}, "start": {"col": 30, "line": 157, "offset": 4879}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 29, "line": 157, "offset": 4878}}, {"check_id": "python.django.security.audit.raw-query.avoid-raw-sql", "end": {"col": 53, "line": 161, "offset": 5108}, "extra": {"engine_kind": "OSS", "fingerprint": "97b9e056085549aa69dadfe9acc2c89198dab6994e7a4143713acc170392ff70b6efe7eaa69ef6ab9df0c08ae6b198a7fc2affe677c2ba8311e7337df580cd74_0", "is_ignored": false, "lines": "                    val=login.objects.raw(sql_query)", "message": "Detected the use of 'RawSQL' or 'raw' indicating the execution of a non-parameterized SQL query. This could lead to a SQL injection and therefore protected information could be leaked. Instead, use Django ORM and parameterized queries before raw SQL. An example of using the Django ORM is: `People.objects.get(name='Bob')`", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.0/ref/models/expressions/#raw-sql-expressions", "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9473, "rule_id": "EwU2JA", "rv_id": 834409, "url": "https://semgrep.dev/playground/r/A8T37b2/python.django.security.audit.raw-query.avoid-raw-sql", "version_id": "A8T37b2"}}, "shortlink": "https://sg.run/weDA", "source": "https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$MODEL": {"abstract_content": "login login login", "end": {"col": 30, "line": 161, "offset": 5085}, "start": {"col": 25, "line": 161, "offset": 5080}}, "$QUERY": {"abstract_content": "sql_query", "end": {"col": 52, "line": 161, "offset": 5107}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\"", "svalue_end": {"col": 112, "line": 157, "offset": 4961}, "svalue_start": {"col": 29, "line": 157, "offset": 4878}}, "start": {"col": 43, "line": 161, "offset": 5098}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 25, "line": 161, "offset": 5080}}, {"check_id": "python.lang.security.deserialization.pickle.avoid-pickle", "end": {"col": 40, "line": 201, "offset": 6468}, "extra": {"engine_kind": "OSS", "fingerprint": "a8718d5941cddbb4f3f2b7d4f80d4ddb9dd12abeb6306e98f6f051e5199f97e3d0ae15577e082a8f6d0d1b0b5d0e13dd194dc3ebac179c7cde2b98e976740345_0", "is_ignored": false, "lines": "pickled_user = pickle.dumps(TestUser())", "message": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9675, "rule_id": "EwU2BJ", "rv_id": 928301, "url": "https://semgrep.dev/playground/r/qkTpk98/python.lang.security.deserialization.pickle.avoid-pickle", "version_id": "qkTpk98"}}, "shortlink": "https://sg.run/OPwB", "source": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle", "subcategory": ["audit"], "technology": ["python"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$FUNC": {"abstract_content": "dumps", "end": {"col": 28, "line": 201, "offset": 6456}, "start": {"col": 23, "line": 201, "offset": 6451}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 16, "line": 201, "offset": 6444}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 73, "line": 210, "offset": 6873}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_0", "is_ignored": false, "lines": "            response.set_cookie(key='token',value=token.decode('utf-8'))", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 210, "offset": 6813}}, {"check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "end": {"col": 40, "line": 213, "offset": 6971}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "token", "location": {"end": {"col": 14, "line": 207, "offset": 6710}, "path": "introduction/views.py", "start": {"col": 9, "line": 207, "offset": 6705}}}], "taint_sink": ["CliLoc", [{"end": {"col": 40, "line": 213, "offset": 6971}, "path": "introduction/views.py", "start": {"col": 21, "line": 213, "offset": 6952}}, "pickle.loads(token)"]], "taint_source": ["CliLoc", [{"end": {"col": 45, "line": 207, "offset": 6741}, "path": "introduction/views.py", "start": {"col": 17, "line": 207, "offset": 6713}}, "request.COOKIES.get('token')"]]}, "engine_kind": "OSS", "fingerprint": "6afd3de860be660079ffdea91808b7bd19861619ab2d850b5233695189c043a97873f674cb51da6153616c0d07e07607389507ef460d0d27ff369679efbf9654_0", "is_ignored": false, "lines": "            admin = pickle.loads(token)", "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9467, "rule_id": "OrU3e6", "rv_id": 834402, "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "version_id": "3ZT3A9q"}}, "shortlink": "https://sg.run/9oyr", "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$INSIDE": {"abstract_content": "insec_des_lab", "end": {"col": 18, "line": 204, "offset": 6533}, "start": {"col": 5, "line": 204, "offset": 6520}}, "$PARAM": {"abstract_content": "request", "end": {"col": 26, "line": 204, "offset": 6541}, "start": {"col": 19, "line": 204, "offset": 6534}}, "$PICKLEFUNC": {"abstract_content": "loads", "end": {"col": 33, "line": 213, "offset": 6964}, "start": {"col": 28, "line": 213, "offset": 6959}}, "$REQFUNC": {"abstract_content": "COOKIES", "end": {"col": 32, "line": 207, "offset": 6728}, "start": {"col": 25, "line": 207, "offset": 6721}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 21, "line": 213, "offset": 6952}}, {"check_id": "python.lang.security.deserialization.pickle.avoid-pickle", "end": {"col": 40, "line": 213, "offset": 6971}, "extra": {"engine_kind": "OSS", "fingerprint": "2e66761d8bcdeeccc02a513374680f9a85d9855ec839abb13aa5756474e976bc03456a7edaa05b12f3852465afb5fe7c45383c3d75cb6d3cfae55e34a06451fe_0", "is_ignored": false, "lines": "            admin = pickle.loads(token)", "message": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9675, "rule_id": "EwU2BJ", "rv_id": 928301, "url": "https://semgrep.dev/playground/r/qkTpk98/python.lang.security.deserialization.pickle.avoid-pickle", "version_id": "qkTpk98"}}, "shortlink": "https://sg.run/OPwB", "source": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle", "subcategory": ["audit"], "technology": ["python"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$FUNC": {"abstract_content": "loads", "end": {"col": 33, "line": 213, "offset": 6964}, "start": {"col": 28, "line": 213, "offset": 6959}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 21, "line": 213, "offset": 6952}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 246, "offset": 7905}, "extra": {"engine_kind": "OSS", "fingerprint": "44bbf262277c0f2622f3ae76a1f05df2417644c4b37d15a0dec33189fb77173bace0bbd16dcb4f0010a1e2c456175423527a43cbea4443eba5fe1616232e46db_0", "is_ignored": false, "lines": "@csrf_exempt\ndef xxe_see(request):\n    if request.user.is_authenticated:\n\n        data=comments.objects.all()\n        com=data[0].comment\n        return render(request,'Lab/XXE/xxe_lab.html',{\"com\":com})\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "xxe_see", "end": {"col": 12, "line": 239, "offset": 7683}, "start": {"col": 5, "line": 239, "offset": 7676}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 238, "offset": 7659}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 51, "line": 264, "offset": 8459}, "extra": {"engine_kind": "OSS", "fingerprint": "cdf9672bc3f7e69a2b03d003c14cbe3da0d32cf91db748ddda0f2c682f88cefd2dd99fc1139686e54cd8c4f9222dce4d67bca5a37ac1be223e392c6a16dd82fe_0", "is_ignored": false, "lines": "@csrf_exempt\ndef xxe_parse(request):\n\n    parser = make_parser()\n    parser.setFeature(feature_external_ges, True)\n    doc = parseString(request.body.decode('utf-8'), parser=parser)\n    for event, node in doc:\n        if event == START_ELEMENT and node.tagName == 'text':\n            doc.expandNode(node)\n            text = node.toxml()\n    startInd = text.find('>')\n    endInd = text.find('<', startInd)\n    text = text[startInd + 1:endInd:]\n    p=comments.objects.filter(id=1).update(comment=text)\n\n    return render(request, 'Lab/XXE/xxe_lab.html')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "xxe_parse", "end": {"col": 14, "line": 250, "offset": 7934}, "start": {"col": 5, "line": 250, "offset": 7925}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 249, "offset": 7908}}, {"check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "end": {"col": 50, "line": 284, "offset": 9237}, "extra": {"engine_kind": "OSS", "fingerprint": "ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_0", "is_ignored": false, "lines": "                response = HttpResponse(rendered)", "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render", "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9481, "rule_id": "PeUZgE", "rv_id": 834415, "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "version_id": "qkTQnll"}}, "shortlink": "https://sg.run/EknN", "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 28, "line": 284, "offset": 9215}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 105, "line": 285, "offset": 9342}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_1", "is_ignored": false, "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 17, "line": 285, "offset": 9254}}, {"check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "end": {"col": 46, "line": 298, "offset": 10030}, "extra": {"engine_kind": "OSS", "fingerprint": "ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_1", "is_ignored": false, "lines": "            response = HttpResponse(rendered)", "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render", "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9481, "rule_id": "PeUZgE", "rv_id": 834415, "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "version_id": "qkTQnll"}}, "shortlink": "https://sg.run/EknN", "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 24, "line": 298, "offset": 10008}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 101, "line": 299, "offset": 10131}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_2", "is_ignored": false, "lines": "            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 299, "offset": 10043}}, {"check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "end": {"col": 50, "line": 312, "offset": 10772}, "extra": {"engine_kind": "OSS", "fingerprint": "ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_2", "is_ignored": false, "lines": "                response = HttpResponse(rendered)", "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render", "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9481, "rule_id": "PeUZgE", "rv_id": 834415, "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "version_id": "qkTQnll"}}, "shortlink": "https://sg.run/EknN", "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 28, "line": 312, "offset": 10750}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 105, "line": 313, "offset": 10877}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_3", "is_ignored": false, "lines": "                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 17, "line": 313, "offset": 10789}}, {"check_id": "python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "end": {"col": 38, "line": 323, "offset": 11355}, "extra": {"engine_kind": "OSS", "fingerprint": "ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_3", "is_ignored": false, "lines": "    response = HttpResponse(rendered)", "message": "Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render", "https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9481, "rule_id": "PeUZgE", "rv_id": 834415, "url": "https://semgrep.dev/playground/r/qkTQnll/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "version_id": "qkTQnll"}}, "shortlink": "https://sg.run/EknN", "source": "https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 16, "line": 323, "offset": 11333}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 334, "offset": 11734}, "extra": {"engine_kind": "OSS", "fingerprint": "feaf12476ff893432ebe0db525c31ca7c359f29837754a6419a2f623ab3722353f7c76c1ddded78ecf6baa8cfbbf4787c34023db4907a6e24e54507a4fa70861_0", "is_ignored": false, "lines": "@csrf_exempt\ndef ba(request):\n    if request.user.is_authenticated:\n        return render(request,\"Lab/BrokenAccess/ba.html\")\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "ba", "end": {"col": 7, "line": 330, "offset": 11585}, "start": {"col": 5, "line": 330, "offset": 11583}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 329, "offset": 11566}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 375, "offset": 13278}, "extra": {"engine_kind": "OSS", "fingerprint": "8e222532117b46dd5aca3d0f01ee82d19abb9dd9209105bcbf94029566cf9d85c25a1d3c454e6d6ec3aadd386eff5278c1c4d6ad55f52f8ff4ac9ac480d5ec32_0", "is_ignored": false, "lines": "@csrf_exempt\ndef ba_lab(request):\n    if request.user.is_authenticated:\n        name = request.POST.get('name')\n        password = request.POST.get('pass')\n        if name:\n            if request.COOKIES.get('admin') == \"1\":\n                return render(\n                    request, \n                    'Lab/BrokenAccess/ba_lab.html', \n                    {\n                        \"data\":\"0NLY_F0R_4DM1N5\",\n                        \"username\": \"admin\"\n                    })\n            elif login.objects.filter(user='admin',password=password):\n                html = render(\n                    request, \n                    'Lab/BrokenAccess/ba_lab.html', \n                    {\n                        \"data\":\"0NLY_F0R_4DM1N5\",\n                        \"username\": \"admin\"\n                    })\n                html.set_cookie(\"admin\", \"1\",max_age=200)\n                return html\n            elif login.objects.filter(user=name,password=password):\n                html = render(\n                request, \n                'Lab/BrokenAccess/ba_lab.html', \n                {\n                    \"not_admin\":\"No Secret key for this User\",\n                    \"username\": name\n                })\n                html.set_cookie(\"admin\", \"0\",max_age=200)\n                return html\n            else:\n                return render(request, 'Lab/BrokenAccess/ba_lab.html', {\"data\": \"User Not Found\"})\n\n        else:\n            return render(request,'Lab/BrokenAccess/ba_lab.html',{\"no_creds\":True})\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "ba_lab", "end": {"col": 11, "line": 336, "offset": 11758}, "start": {"col": 5, "line": 336, "offset": 11752}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 335, "offset": 11735}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 443, "offset": 15680}, "extra": {"engine_kind": "OSS", "fingerprint": "2b50e5583de0310dc0118436d7f56ecbfafef069ec53226bdc089aa06142b85407cc318aa89afd17a9247137f87d67e58138051123ccaa10b98d740130a06687_0", "is_ignored": false, "lines": "@csrf_exempt\ndef cmd_lab(request):\n    if request.user.is_authenticated:\n        if(request.method==\"POST\"):\n            domain=request.POST.get('domain')\n            domain=domain.replace(\"https://www.\",'')\n            os=request.POST.get('os')\n            print(os)\n            if(os=='win'):\n                command=\"nslookup {}\".format(domain)\n            else:\n                command = \"dig {}\".format(domain)\n            \n            try:\n                # output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\")\n                process = subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)\n                stdout, stderr = process.communicate()\n                data = stdout.decode('utf-8')\n                stderr = stderr.decode('utf-8')\n                # res = json.loads(data)\n                # print(\"Stdout\\n\" + data)\n                output = data + stderr\n                print(data + stderr)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab.html',{\"output\":output})\n            print(output)\n            return render(request,'Lab/CMD/cmd_lab.html',{\"output\":output})\n        else:\n            return render(request, 'Lab/CMD/cmd_lab.html')\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "cmd_lab", "end": {"col": 12, "line": 409, "offset": 14304}, "start": {"col": 5, "line": 409, "offset": 14297}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 408, "offset": 14280}}, {"check_id": "python.django.security.injection.command.subprocess-injection.subprocess-injection", "end": {"col": 44, "line": 427, "offset": 15005}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "request", "location": {"end": {"col": 20, "line": 409, "offset": 14312}, "path": "introduction/views.py", "start": {"col": 13, "line": 409, "offset": 14305}}}, {"content": "domain", "location": {"end": {"col": 19, "line": 412, "offset": 14407}, "path": "introduction/views.py", "start": {"col": 13, "line": 412, "offset": 14401}}}, {"content": "command", "location": {"end": {"col": 24, "line": 419, "offset": 14669}, "path": "introduction/views.py", "start": {"col": 17, "line": 419, "offset": 14662}}}], "taint_sink": ["CliLoc", [{"end": {"col": 44, "line": 427, "offset": 15005}, "path": "introduction/views.py", "start": {"col": 27, "line": 423, "offset": 14838}}, "subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 409, "offset": 14312}, "path": "introduction/views.py", "start": {"col": 13, "line": 409, "offset": 14305}}, "request"]]}, "engine_kind": "OSS", "fingerprint": "94611d943987a0d7f75afc843d39653c4ade5d2aedc527f96b426d960163cb2a1870d9e6b1fed79c92cc9a9843458348cbcdd152d51665133f63850bd8e67788_0", "is_ignored": false, "lines": "                process = subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)", "message": "Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://semgrep.dev/docs/cheat-sheets/python-command-injection/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 31144, "rule_id": "EwUepx", "rv_id": 834437, "url": "https://semgrep.dev/playground/r/d6TKgwn/python.django.security.injection.command.subprocess-injection.subprocess-injection", "version_id": "d6TKgwn"}}, "shortlink": "https://sg.run/49BE", "source": "https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection", "subcategory": ["vuln"], "technology": ["flask"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "cmd_lab", "end": {"col": 12, "line": 409, "offset": 14304}, "start": {"col": 5, "line": 409, "offset": 14297}}, "$REQUEST": {"abstract_content": "request", "end": {"col": 20, "line": 409, "offset": 14312}, "start": {"col": 13, "line": 409, "offset": 14305}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 27, "line": 423, "offset": 14838}}, {"check_id": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "end": {"col": 28, "line": 424, "offset": 14883}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "domain", "location": {"end": {"col": 19, "line": 412, "offset": 14407}, "path": "introduction/views.py", "start": {"col": 13, "line": 412, "offset": 14401}}}, {"content": "command", "location": {"end": {"col": 24, "line": 419, "offset": 14669}, "path": "introduction/views.py", "start": {"col": 17, "line": 419, "offset": 14662}}}], "taint_sink": ["CliLoc", [{"end": {"col": 28, "line": 424, "offset": 14883}, "path": "introduction/views.py", "start": {"col": 21, "line": 424, "offset": 14876}}, "command"]], "taint_source": ["CliLoc", [{"end": {"col": 46, "line": 412, "offset": 14434}, "path": "introduction/views.py", "start": {"col": 20, "line": 412, "offset": 14408}}, "request.POST.get('domain')"]]}, "engine_kind": "OSS", "fingerprint": "b22e8250a693c5f615d40674fb16d520b52b75e4c405f61babb0ced7553bd691bc0c14dd21ff7ff0441ea97d16470a221e447d09fb17213138e9b4f4c4ab6e49_0", "is_ignored": false, "lines": "                    command,", "message": "Detected subprocess function 'cmd_lab' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.", "metadata": {"asvs": {"control_id": "5.3.8 OS Command Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html", "https://docs.python.org/3/library/shlex.html", "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 27271, "rule_id": "JDUz3R", "rv_id": 834659, "url": "https://semgrep.dev/playground/r/0bTw3E0/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "version_id": "0bTw3E0"}}, "shortlink": "https://sg.run/NWxp", "source": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "subcategory": ["vuln"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$CMD": {"abstract_content": "command", "end": {"col": 28, "line": 424, "offset": 14883}, "start": {"col": 21, "line": 424, "offset": 14876}}, "$FUNC": {"abstract_content": "cmd_lab", "end": {"col": 12, "line": 409, "offset": 14304}, "start": {"col": 5, "line": 409, "offset": 14297}}, "$PROPERTY": {"abstract_content": "POST", "end": {"col": 32, "line": 412, "offset": 14420}, "start": {"col": 28, "line": 412, "offset": 14416}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 21, "line": 424, "offset": 14876}}, {"check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "end": {"col": 31, "line": 425, "offset": 14915}, "extra": {"engine_kind": "OSS", "fingerprint": "2f819a91e6dbd962fc4833b9ff8198ce71a5c75113bf48e48dcdd11e3cbaefc9c12a416e729d446afb7cdcd41eb6c1e70a058c342b3500d1d7c806ea4f0dc280_0", "fix": "False", "is_ignored": false, "lines": "                    shell=True,", "message": "Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9646, "rule_id": "DbUpz2", "rv_id": 834650, "url": "https://semgrep.dev/playground/r/PkTxGkR/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "version_id": "PkTxGkR"}}, "shortlink": "https://sg.run/J92w", "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html", "subcategory": ["secure default"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "Popen", "end": {"col": 43, "line": 423, "offset": 14854}, "start": {"col": 38, "line": 423, "offset": 14849}}, "$TRUE": {"abstract_content": "True", "end": {"col": 31, "line": 425, "offset": 14915}, "start": {"col": 27, "line": 425, "offset": 14911}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 27, "line": 425, "offset": 14911}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 462, "offset": 16302}, "extra": {"engine_kind": "OSS", "fingerprint": "15f5aa865ea27de8b14a0f65de60b4d5a43909244b985f4b737212410912deb50360fe0aaa1c7ccba11f6468bdd8d96392c2bb1fc4ee29de3c03a1da2809579f_0", "is_ignored": false, "lines": "@csrf_exempt\ndef cmd_lab2(request):\n    if request.user.is_authenticated:\n        if (request.method==\"POST\"):\n            val=request.POST.get('val')\n            \n            print(val)\n            try:\n                output = eval(val)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})\n            print(\"Output = \", output)\n            return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})\n        else:\n            return render(request, 'Lab/CMD/cmd_lab2.html')\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "cmd_lab2", "end": {"col": 13, "line": 446, "offset": 15707}, "start": {"col": 5, "line": 446, "offset": 15699}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 445, "offset": 15682}}, {"check_id": "python.django.security.injection.code.user-eval.user-eval", "end": {"col": 81, "line": 456, "offset": 16069}, "extra": {"engine_kind": "OSS", "fingerprint": "912c28621c990cec1c4c259dd72a41485aea7cc7cbd2cb5846b55e1c8b65678baa533b5787eb5e222a430b7457bb95e4fa816109902a2e9f1261fdda0f915c01_0", "is_ignored": false, "lines": "            val=request.POST.get('val')\n            \n            print(val)\n            try:\n                output = eval(val)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})", "message": "Found user data in a call to 'eval'. This is extremely dangerous because it can enable an attacker to execute arbitrary remote code on the system. Instead, refactor your code to not use 'eval' and instead use a safe library for the specific functionality you need.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"], "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html", "https://owasp.org/www-community/attacks/Code_Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9501, "rule_id": "DbUpDQ", "rv_id": 834433, "url": "https://semgrep.dev/playground/r/xyTNrL0/python.django.security.injection.code.user-eval.user-eval", "version_id": "xyTNrL0"}}, "shortlink": "https://sg.run/PJDW", "source": "https://semgrep.dev/r/python.django.security.injection.code.user-eval.user-eval", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Code Injection"]}, "metavars": {"$F": {"abstract_content": "cmd_lab2", "end": {"col": 13, "line": 446, "offset": 15707}, "start": {"col": 5, "line": 446, "offset": 15699}}, "$V": {"abstract_content": "val", "end": {"col": 16, "line": 449, "offset": 15808}, "start": {"col": 13, "line": 449, "offset": 15805}}, "$W": {"abstract_content": "POST", "end": {"col": 29, "line": 449, "offset": 15821}, "start": {"col": 25, "line": 449, "offset": 15817}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 449, "offset": 15805}}, {"check_id": "python.lang.security.audit.eval-detected.eval-detected", "end": {"col": 35, "line": 453, "offset": 15920}, "extra": {"engine_kind": "OSS", "fingerprint": "7ccc3aeb5b5a728bfcf602ad9cab37a9abed280ad405be4b82f5910ac8b9d23750a6fc80f1c3f4a334729a6b04698f458e44672dc8042688ceb2fe1277e1918d_0", "is_ignored": false, "lines": "                output = eval(val)", "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.", "metadata": {"asvs": {"control_id": "5.2.4 Dyanmic Code Execution Features", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"], "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9635, "rule_id": "gxU149", "rv_id": 834608, "url": "https://semgrep.dev/playground/r/5PTyGO7/python.lang.security.audit.eval-detected.eval-detected", "version_id": "5PTyGO7"}}, "shortlink": "https://sg.run/ZvrD", "source": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected", "source-rule-url": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval", "subcategory": ["audit"], "technology": ["python"], "vulnerability_class": ["Code Injection"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 26, "line": 453, "offset": 15911}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 101, "line": 511, "offset": 18164}, "extra": {"engine_kind": "OSS", "fingerprint": "78279ef509d2c1eed42551b6c27d952a43c7fdd175b1fda0d839e1c661fcd340333fa5de968f41fa98bd3f85dca3823775dd9c8ce013fe1b23ab39e3776626da_0", "is_ignored": false, "lines": "@csrf_exempt\ndef Otp(request):\n    if request.method==\"GET\":\n        email=request.GET.get('email')\n        otpN=randint(100,999)\n        if email and otpN:\n            if email==\"admin@pygoat.com\":\n                otp.objects.filter(id=2).update(otp=otpN)\n                html = render(request, \"Lab/BrokenAuth/otp.html\", {\"otp\":\"Sent To Admin Mail ID\"})\n                html.set_cookie(\"email\", email)\n                return html\n\n            else:\n                otp.objects.filter(id=1).update(email=email, otp=otpN)\n                html=render (request,\"Lab/BrokenAuth/otp.html\",{\"otp\":otpN})\n                html.set_cookie(\"email\",email)\n                return html\n        else:\n            return render(request,\"Lab/BrokenAuth/otp.html\")\n    else:\n        otpR=request.POST.get(\"otp\")\n        email=request.COOKIES.get(\"email\")\n        if otp.objects.filter(email=email,otp=otpR) or otp.objects.filter(id=2,otp=otpR):\n            # return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")\n            return render (request,\"Lab/BrokenAuth/otp.html\",{\"email\":email})\n        else:\n            return render (request,\"Lab/BrokenAuth/otp.html\",{\"otp\":\"Invalid OTP Please Try Again\"})", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "Otp", "end": {"col": 8, "line": 486, "offset": 16981}, "start": {"col": 5, "line": 486, "offset": 16978}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 485, "offset": 16961}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 562, "offset": 19912}, "extra": {"engine_kind": "OSS", "fingerprint": "2e45d84cc3d0ec744e402069ff47e53801293c70711a30d8f019631b8c57c2a40c69c6a9224379c2b6d2e46b62e1ad8ab5435a06e52defaf8fa8d309a2a7bea9_0", "is_ignored": false, "lines": "@csrf_exempt\ndef a9_lab(request):\n    if request.user.is_authenticated:\n        if request.method==\"GET\":\n            return render(request,\"Lab/A9/a9_lab.html\")\n        else:\n\n            try :\n                file=request.FILES[\"file\"]\n                try :\n                    data = yaml.load(file,yaml.Loader)\n                    \n                    return render(request,\"Lab/A9/a9_lab.html\",{\"data\":data})\n                except:\n                    return render(request, \"Lab/A9/a9_lab.html\", {\"data\": \"Error\"})\n\n            except:\n                return render(request, \"Lab/A9/a9_lab.html\", {\"data\":\"Please Upload a Yaml file.\"})\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "a9_lab", "end": {"col": 11, "line": 544, "offset": 19250}, "start": {"col": 5, "line": 544, "offset": 19244}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 543, "offset": 19227}}, {"check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "end": {"col": 55, "line": 553, "offset": 19541}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "file", "location": {"end": {"col": 21, "line": 551, "offset": 19442}, "path": "introduction/views.py", "start": {"col": 17, "line": 551, "offset": 19438}}}], "taint_sink": ["CliLoc", [{"end": {"col": 55, "line": 553, "offset": 19541}, "path": "introduction/views.py", "start": {"col": 28, "line": 553, "offset": 19514}}, "yaml.load(file,yaml.Loader)"]], "taint_source": ["CliLoc", [{"end": {"col": 43, "line": 551, "offset": 19464}, "path": "introduction/views.py", "start": {"col": 22, "line": 551, "offset": 19443}}, "request.FILES[\"file\"]"]]}, "engine_kind": "OSS", "fingerprint": "55b039a7d13528e25e3bad4465aaea7b810fbbce02b515657d90a9e1bd61e656bf30e35d3d477cbb78924a78e34b0bf91c371ea860fdb697d0643a120df5776b_0", "is_ignored": false, "lines": "                    data = yaml.load(file,yaml.Loader)", "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9467, "rule_id": "OrU3e6", "rv_id": 834402, "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "version_id": "3ZT3A9q"}}, "shortlink": "https://sg.run/9oyr", "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$INSIDE": {"abstract_content": "a9_lab", "end": {"col": 11, "line": 544, "offset": 19250}, "start": {"col": 5, "line": 544, "offset": 19244}}, "$PARAM": {"abstract_content": "request", "end": {"col": 19, "line": 544, "offset": 19258}, "start": {"col": 12, "line": 544, "offset": 19251}}, "$REQFUNC": {"abstract_content": "FILES", "end": {"col": 35, "line": 551, "offset": 19456}, "start": {"col": 30, "line": 551, "offset": 19451}}, "$YAMLFUNC": {"abstract_content": "load", "end": {"col": 37, "line": 553, "offset": 19523}, "start": {"col": 33, "line": 553, "offset": 19519}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 28, "line": 553, "offset": 19514}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 105, "line": 598, "offset": 21406}, "extra": {"engine_kind": "OSS", "fingerprint": "2f5a5b921e9a789d38827bfe1df346c19bf56260aa1c9682e59828f2aaee4c3a00123ab2b16ff9fcc184db1988e35b745826349da75542dae28d9ea9b3d9aa98_0", "is_ignored": false, "lines": "@csrf_exempt\ndef a9_lab2(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    if request.method == \"GET\":\n        return render (request,\"Lab/A9/a9_lab2.html\")\n    elif request.method == \"POST\":\n        try :\n            file=request.FILES[\"file\"]\n            function_str = request.POST.get(\"function\")\n            img  = Image.open(file)\n            img = img.convert(\"RGB\")\n            r,g,b  = img.split()\n            # function_str = \"convert(r+g, '1')\"\n            output = ImageMath.eval(function_str,img = img, b=b, r=r, g=g)\n\n            # saving the image \n            buffered = BytesIO()\n            output.save(buffered, format=\"JPEG\")\n            img_str = base64.b64encode(buffered.getvalue()).decode(\"utf-8\")\n\n            bufferd_ref = BytesIO()\n            img.save(bufferd_ref, format=\"JPEG\")\n            img_str_ref = base64.b64encode(bufferd_ref.getvalue()).decode(\"utf-8\")\n            try :\n                return render(request,\"Lab/A9/a9_lab2.html\",{\"img_str\": img_str,\"img_str_ref\":img_str_ref, \"success\": True})\n            except Exception as e:\n                print(e)\n                return render(request, \"Lab/A9/a9_lab2.html\", {\"data\": \"Error\", \"error\": True})\n        except Exception as e:\n            print(e)\n            return render(request, \"Lab/A9/a9_lab2.html\", {\"data\":\"Please Upload a file\", \"error\":True})", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "a9_lab2", "end": {"col": 12, "line": 567, "offset": 20040}, "start": {"col": 5, "line": 567, "offset": 20033}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 566, "offset": 20016}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 80, "line": 736, "offset": 26905}, "extra": {"engine_kind": "OSS", "fingerprint": "053e4cfdf437f99f72ec1f0e42f356815f47f4d7d2f67f72e545de90ba8087f31ad164fc2710541a234bde977d11fcab4c47e91965df7697b8b1c12a1f933a8b_0", "is_ignored": false, "lines": "@csrf_exempt\ndef a1_broken_access(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    return render(request,\"Lab_2021/A1_BrokenAccessControl/broken_access.html\")", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "a1_broken_access", "end": {"col": 21, "line": 732, "offset": 26735}, "start": {"col": 5, "line": 732, "offset": 26719}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 731, "offset": 26702}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 108, "line": 773, "offset": 28148}, "extra": {"engine_kind": "OSS", "fingerprint": "ae88e3c7a96c5d511f6b2d99b57225570acf53d0e9749763c482a098af92b51f07b5c4a0c2878dca4469c83b48ab156ad3695f1286c7f3be4720357688067161_0", "is_ignored": false, "lines": "@csrf_exempt\ndef a1_broken_access_lab_1(request):\n    if request.user.is_authenticated:\n        pass\n    else:\n        return redirect('login')\n    \n    name = request.POST.get('name')\n    password = request.POST.get('pass')\n    print(password)\n    print(name)\n    if name:\n        if request.COOKIES.get('admin') == \"1\":\n            return render(\n                request, \n                'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', \n                {\n                    \"data\":\"0NLY_F0R_4DM1N5\",\n                    \"username\": \"admin\"\n                })\n        elif (name=='jack' and password=='jacktheripper'): # Will implement hashing here\n            html = render(\n            request, \n            'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', \n            {\n                \"not_admin\":\"No Secret key for this User\",\n                \"username\": name\n            })\n            html.set_cookie(\"admin\", \"0\",max_age=200)\n            return html\n        else:\n            return render(request, 'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', {\"data\": \"User Not Found\"})\n\n    else:\n        return render(request,'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html',{\"no_creds\":True})", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "a1_broken_access_lab_1", "end": {"col": 27, "line": 740, "offset": 26947}, "start": {"col": 5, "line": 740, "offset": 26925}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 739, "offset": 26908}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 108, "line": 813, "offset": 29489}, "extra": {"engine_kind": "OSS", "fingerprint": "98a8b7324fe6e9f14187c0cfe31ea0df3cb7a6f95e8fcc26ade85106c0170a7758e004e3fd4260241dd03f71c828104cee21273d8d2ec4e2242f60d544043168_0", "is_ignored": false, "lines": "@csrf_exempt\ndef a1_broken_access_lab_2(request):\n    if request.user.is_authenticated:\n        pass\n    else:\n        return redirect('login')\n    \n    name = request.POST.get('name')\n    password = request.POST.get('pass')\n    user_agent = request.META['HTTP_USER_AGENT']\n\n    # print(name)\n    # print(password)\n    print(user_agent)\n    if name :  \n        if (user_agent == \"pygoat_admin\"):\n            return render(\n                request, \n                'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', \n                {\n                    \"data\":\"0NLY_F0R_4DM1N5\",\n                    \"username\": \"admin\",\n                    \"status\": \"admin\"\n                })\n        elif ( name=='jack' and password=='jacktheripper'): # Will implement hashing here\n            html = render(\n            request, \n            'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', \n            {\n                \"not_admin\":\"No Secret key for this User\",\n                \"username\": name,\n                \"status\": \"not admin\"\n            })\n            return html\n        else:\n            return render(request, 'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', {\"data\": \"User Not Found\"})\n\n    else:\n        return render(request,'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html',{\"no_creds\":True})", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "a1_broken_access_lab_2", "end": {"col": 27, "line": 776, "offset": 28189}, "start": {"col": 5, "line": 776, "offset": 28167}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 775, "offset": 28150}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 66, "line": 844, "offset": 30840}, "extra": {"engine_kind": "OSS", "fingerprint": "cb3b6e19a7ccf9b18d05efab85c3dcf7842fb0dac8f4e92f653ef89b4e631d1222837291d3b61d925fb0149d4e551876f45675a82be51e6190a11678e879d311_0", "is_ignored": false, "lines": "@csrf_exempt\ndef injection(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    return render(request,\"Lab_2021/A3_Injection/injection.html\")", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "injection", "end": {"col": 14, "line": 840, "offset": 30684}, "start": {"col": 5, "line": 840, "offset": 30675}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 839, "offset": 30658}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 33, "line": 897, "offset": 32640}, "extra": {"engine_kind": "OSS", "fingerprint": "75e13665e6b1a476924770be8daf36e57b8f0a22c9a06f203d24583e8cf80dd5e0b4d9fd3316ac525cbe37d81418354fc076286282f738620bcaadfe9d2239f1_0", "is_ignored": false, "lines": "@csrf_exempt\ndef injection_sql_lab(request):\n    if request.user.is_authenticated:\n\n        name=request.POST.get('name')\n        password=request.POST.get('pass')\n        print(name)\n        print(password)\n\n        if name:\n            sql_query = \"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\"\n\n            sql_instance = sql_lab_table(id=\"admin\", password=\"65079b006e85a7e798abecb99e47c154\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"jack\", password=\"jack\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"slinky\", password=\"b4f945433ea4c369c12741f62a23ccc0\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"bloke\", password=\"f8d1ce191319ea8f4d1d26e65e130dd5\")\n            sql_instance.save()\n\n            print(sql_query)\n\n            try:\n                user = sql_lab_table.objects.raw(sql_query)\n                user = user[0].id\n                print(user)\n\n            except:\n                return render(\n                    request, \n                    'Lab_2021/A3_Injection/sql_lab.html',\n                    {\n                        \"wrongpass\":password,\n                        \"sql_error\":sql_query\n                    })\n\n            if user:\n                return render(request, 'Lab_2021/A3_Injection/sql_lab.html',{\"user1\":user})\n            else:\n                return render(\n                    request, \n                    'Lab_2021/A3_Injection/sql_lab.html',\n                    {\n                        \"wrongpass\":password,\n                        \"sql_error\":sql_query\n                    })\n        else:\n            return render(request, 'Lab_2021/A3_Injection/sql_lab.html')\n    else:\n        return redirect('login')", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "injection_sql_lab", "end": {"col": 22, "line": 848, "offset": 30877}, "start": {"col": 5, "line": 848, "offset": 30860}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 847, "offset": 30843}}, {"check_id": "python.django.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 114, "line": 857, "offset": 31182}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "name", "location": {"end": {"col": 13, "line": 851, "offset": 30939}, "path": "introduction/views.py", "start": {"col": 9, "line": 851, "offset": 30935}}}], "taint_sink": ["CliLoc", [{"end": {"col": 114, "line": 857, "offset": 31182}, "path": "introduction/views.py", "start": {"col": 25, "line": 857, "offset": 31093}}, "\"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\""]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 851, "offset": 30952}, "path": "introduction/views.py", "start": {"col": 14, "line": 851, "offset": 30940}}, "request.POST"]]}, "engine_kind": "OSS", "fingerprint": "9e21762bc5f7655c701035adad830f7eccc703de33f338172065128e544218caded180f88d04afdc911793c2eb50334c93c8261a0025cec72c72d96159a2368c_0", "is_ignored": false, "lines": "            sql_query = \"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\"", "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14701, "rule_id": "lBU8Ad", "rv_id": 906695, "url": "https://semgrep.dev/playground/r/X0TA1zR/python.django.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "X0TA1zR"}}, "shortlink": "https://sg.run/PbZp", "source": "https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Mass Assignment"]}, "metavars": {"$1": {"abstract_content": "SELECT", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$ANYTHING": {"abstract_content": "POST", "end": {"col": 26, "line": 851, "offset": 30952}, "start": {"col": 22, "line": 851, "offset": 30948}}, "$SQLSTR": {"abstract_content": "SELECT * FROM introduction_sql_lab_table WHERE id='", "end": {"col": 77, "line": 857, "offset": 31145}, "start": {"col": 26, "line": 857, "offset": 31094}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 25, "line": 857, "offset": 31093}}, {"check_id": "python.django.security.audit.raw-query.avoid-raw-sql", "end": {"col": 60, "line": 871, "offset": 31783}, "extra": {"engine_kind": "OSS", "fingerprint": "04824a9601d535bae3436c8fe648d9dce01924e4610c424aaba932649fea49db40f22f24d2c46f0403fff6b09c6e766d5ae7f5b0db0d19965809cc14fb876e31_0", "is_ignored": false, "lines": "                user = sql_lab_table.objects.raw(sql_query)", "message": "Detected the use of 'RawSQL' or 'raw' indicating the execution of a non-parameterized SQL query. This could lead to a SQL injection and therefore protected information could be leaked. Instead, use Django ORM and parameterized queries before raw SQL. An example of using the Django ORM is: `People.objects.get(name='Bob')`", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.0/ref/models/expressions/#raw-sql-expressions", "https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9473, "rule_id": "EwU2JA", "rv_id": 834409, "url": "https://semgrep.dev/playground/r/A8T37b2/python.django.security.audit.raw-query.avoid-raw-sql", "version_id": "A8T37b2"}}, "shortlink": "https://sg.run/weDA", "source": "https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$MODEL": {"abstract_content": "sql_lab_table sql_lab_table sql_lab_table", "end": {"col": 37, "line": 871, "offset": 31760}, "start": {"col": 24, "line": 871, "offset": 31747}}, "$QUERY": {"abstract_content": "sql_query", "end": {"col": 59, "line": 871, "offset": 31782}, "propagated_value": {"svalue_abstract_content": "\"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\"", "svalue_end": {"col": 114, "line": 857, "offset": 31182}, "svalue_start": {"col": 25, "line": 857, "offset": 31093}}, "start": {"col": 50, "line": 871, "offset": 31773}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 24, "line": 871, "offset": 31747}}, {"check_id": "python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join", "end": {"col": 92, "line": 924, "offset": 33759}, "extra": {"engine_kind": "OSS", "fingerprint": "d474e8df99720c4fd88d88d043d116b1387fd5984c26ac7e1b44fba8c67c1b10e9a5704c0107e87d968a04aeecc7eed80fa3a3ad90a8f5624ba62b82b44fa214_0", "is_ignored": false, "lines": "            file=request.POST[\"blog\"]\n            try :\n                dirname = os.path.dirname(__file__)\n                filename = os.path.join(dirname, file)\n                file = open(filename,\"r\")\n                data = file.read()\n                return render(request,\"Lab/ssrf/ssrf_lab.html\",{\"blog\":data})\n            except:\n                return render(request, \"Lab/ssrf/ssrf_lab.html\", {\"blog\": \"No blog found\"})", "message": "Data from request is passed to os.path.join() and to open(). This is a path traversal vulnerability, which can lead to sensitive data being leaked. To mitigate, consider using os.path.abspath or os.path.realpath or Path library.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2017 - Broken Access Control", "A01:2021 - Broken Access Control"], "references": ["https://owasp.org/www-community/attacks/Path_Traversal"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9508, "rule_id": "6JUjLj", "rv_id": 834444, "url": "https://semgrep.dev/playground/r/gETyXZz/python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join", "version_id": "gETyXZz"}}, "shortlink": "https://sg.run/Dovo", "source": "https://semgrep.dev/r/python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Path Traversal"]}, "metavars": {"$F": {"abstract_content": "ssrf_lab", "end": {"col": 13, "line": 911, "offset": 33141}, "start": {"col": 5, "line": 911, "offset": 33133}}, "$P": {"abstract_content": "filename", "end": {"col": 25, "line": 919, "offset": 33462}, "start": {"col": 17, "line": 919, "offset": 33454}}, "$V": {"abstract_content": "file", "end": {"col": 17, "line": 916, "offset": 33346}, "start": {"col": 13, "line": 916, "offset": 33342}}, "$W": {"abstract_content": "POST", "end": {"col": 30, "line": 916, "offset": 33359}, "start": {"col": 26, "line": 916, "offset": 33355}}, "$X": {"abstract_content": "\"blog\"", "end": {"col": 37, "line": 916, "offset": 33366}, "start": {"col": 31, "line": 916, "offset": 33360}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 916, "offset": 33342}}, {"check_id": "python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests", "end": {"col": 88, "line": 959, "offset": 34841}, "extra": {"engine_kind": "OSS", "fingerprint": "0f2beffd9a3568dffdc80e464ecf3e85fb7232c5849472c0befc2409be86dbc9c48eda513a2ccd3a376f64dde7e6ed28d887dc37df0119d39337797efff63244_0", "is_ignored": false, "lines": "        url = request.POST[\"url\"]\n        try:\n            response = requests.get(url)\n            return render(request, \"Lab/ssrf/ssrf_lab2.html\", {\"response\": response.content.decode()})\n        except:\n            return render(request, \"Lab/ssrf/ssrf_lab2.html\", {\"error\": \"Invalid URL\"})", "message": "Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/www-community/attacks/Server_Side_Request_Forgery"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9514, "rule_id": "j2UvEw", "rv_id": 834455, "url": "https://semgrep.dev/playground/r/DkTGydD/python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests", "version_id": "DkTGydD"}}, "shortlink": "https://sg.run/YvY4", "source": "https://semgrep.dev/r/python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$DATA": {"abstract_content": "url", "end": {"col": 12, "line": 954, "offset": 34558}, "start": {"col": 9, "line": 954, "offset": 34555}}, "$FUNC": {"abstract_content": "ssrf_lab2", "end": {"col": 14, "line": 949, "offset": 34410}, "start": {"col": 5, "line": 949, "offset": 34401}}, "$METHOD": {"abstract_content": "get", "end": {"col": 36, "line": 956, "offset": 34629}, "start": {"col": 33, "line": 956, "offset": 34626}}, "$W": {"abstract_content": "POST", "end": {"col": 27, "line": 954, "offset": 34573}, "start": {"col": 23, "line": 954, "offset": 34569}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 9, "line": 954, "offset": 34555}}, {"check_id": "python.django.security.injection.request-data-write.request-data-write", "end": {"col": 29, "line": 989, "offset": 36137}, "extra": {"engine_kind": "OSS", "fingerprint": "45bcccf9f3d684d1a90796c91e95155944b53add416cb551f1b78d9140a16c31efaa41abd308542c372eb113729fa98bebbfb41aee102fe83010b22de91c63ee_0", "is_ignored": false, "lines": "            blog = request.POST[\"blog\"]\n            id = str(uuid.uuid4()).split('-')[-1]\n\n            blog = filter_blog(blog)\n            prepend_code = \"{% extends 'introduction/base.html' %}\\\n                {% block content %}{% block title %}\\\n                <title>SSTI-Blogs</title>\\\n                {% endblock %}\"\n            \n            blog = prepend_code + blog + \"{% endblock %}\"\n            new_blog = Blogs.objects.create(author = request.user, blog_id = id)\n            new_blog.save() \n            dirname = os.path.dirname(__file__)\n            filename = os.path.join(dirname, f\"templates/Lab_2021/A3_Injection/Blogs/{id}.html\")\n            file = open(filename, \"w+\") \n            file.write(blog)", "message": "Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9498, "rule_id": "ReUg5z", "rv_id": 834450, "url": "https://semgrep.dev/playground/r/5PTyGJD/python.django.security.injection.request-data-write.request-data-write", "version_id": "5PTyGJD"}}, "shortlink": "https://sg.run/0Q6j", "source": "https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Improper Validation"]}, "metavars": {"$B": {"abstract_content": "filter_blog filter_blog", "end": {"col": 31, "line": 977, "offset": 35538}, "start": {"col": 20, "line": 977, "offset": 35527}}, "$C": {"abstract_content": "filter_blog", "end": {"col": 31, "line": 977, "offset": 35538}, "start": {"col": 20, "line": 977, "offset": 35527}}, "$DATA": {"abstract_content": "blog", "end": {"col": 17, "line": 974, "offset": 35433}, "start": {"col": 13, "line": 974, "offset": 35429}}, "$F": {"abstract_content": "file", "end": {"col": 17, "line": 989, "offset": 36125}, "propagated_value": {"svalue_abstract_content": "open(filename\"w+\")", "svalue_end": {"col": 40, "line": 988, "offset": 36107}, "svalue_start": {"col": 20, "line": 988, "offset": 36087}}, "start": {"col": 13, "line": 989, "offset": 36121}}, "$INTERM": {"abstract_content": "blog", "end": {"col": 17, "line": 977, "offset": 35524}, "start": {"col": 13, "line": 977, "offset": 35520}}, "$W": {"abstract_content": "POST", "end": {"col": 32, "line": 974, "offset": 35448}, "start": {"col": 28, "line": 974, "offset": 35444}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 974, "offset": 35429}}, {"check_id": "python.django.security.injection.raw-html-format.raw-html-format", "end": {"col": 58, "line": 983, "offset": 35812}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "blog", "location": {"end": {"col": 17, "line": 974, "offset": 35433}, "path": "introduction/views.py", "start": {"col": 13, "line": 974, "offset": 35429}}}], "taint_sink": ["CliLoc", [{"end": {"col": 58, "line": 983, "offset": 35812}, "path": "introduction/views.py", "start": {"col": 20, "line": 983, "offset": 35774}}, "prepend_code + blog + \"{% endblock %}\""]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 974, "offset": 35448}, "path": "introduction/views.py", "start": {"col": 20, "line": 974, "offset": 35436}}, "request.POST"]]}, "engine_kind": "OSS", "fingerprint": "740ff47b0cfb52ecc996f3f50e4e830fe4b786021617f85d7c96a71fb45ed699c0f56419ddeb16813ba64412e7c9fe275b553c00979235a747fc6a05a2605a77_0", "is_ignored": false, "lines": "            blog = prepend_code + blog + \"{% endblock %}\"", "message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure this is safe, check that the HTML is rendered safely. Otherwise, use templates (`django.shortcuts.render`) which will safely render HTML instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render", "https://docs.djangoproject.com/en/3.2/topics/security/#cross-site-scripting-xss-protection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14360, "rule_id": "2ZUPER", "rv_id": 834446, "url": "https://semgrep.dev/playground/r/3ZT3wYq/python.django.security.injection.raw-html-format.raw-html-format", "version_id": "3ZT3wYq"}}, "shortlink": "https://sg.run/oYj1", "source": "https://semgrep.dev/r/python.django.security.injection.raw-html-format.raw-html-format", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$ANYTHING": {"abstract_content": "POST", "end": {"col": 32, "line": 974, "offset": 35448}, "start": {"col": 28, "line": 974, "offset": 35444}}, "$HTMLSTR": {"abstract_content": "\"{% extends 'introduction/base.html' %}\\\n                {% block content %}{% block title %}\\\n                <title>SSTI-Blogs</title>\\\n                {% endblock %}\"", "end": {"col": 32, "line": 981, "offset": 35741}, "start": {"col": 28, "line": 978, "offset": 35572}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 20, "line": 983, "offset": 35774}}, {"check_id": "python.lang.security.audit.md5-used-as-password.md5-used-as-password", "end": {"col": 62, "line": 1019, "offset": 37228}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 62, "line": 1019, "offset": 37228}, "path": "introduction/views.py", "start": {"col": 28, "line": 1019, "offset": 37194}}, "md5(password.encode()).hexdigest()"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 1019, "offset": 37197}, "path": "introduction/views.py", "start": {"col": 28, "line": 1019, "offset": 37194}}, "md5"]]}, "engine_kind": "OSS", "fingerprint": "06bb8a25e7a16155ad42055562118ace8c0275270972a95202f4676519bc3d042cb65bdd50b7a3721d6d7180a478daa22daefa4cea837eb821f1ee84e51dcaef_0", "is_ignored": false, "lines": "                password = md5(password.encode()).hexdigest()", "message": "It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://tools.ietf.org/html/rfc6151", "https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision", "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html", "https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords", "https://github.com/returntocorp/semgrep-rules/issues/1609", "https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14703, "rule_id": "6JU1w1", "rv_id": 834636, "url": "https://semgrep.dev/playground/r/O9TJ7Gj/python.lang.security.audit.md5-used-as-password.md5-used-as-password", "version_id": "O9TJ7Gj"}}, "shortlink": "https://sg.run/5DwD", "source": "https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password", "subcategory": ["vuln"], "technology": ["pycryptodome", "hashlib", "md5"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$1": {"abstract_content": "md5(password.encode()).hexdigest", "end": {"col": 33, "line": 1, "offset": 32}, "start": {"col": 1, "line": 1, "offset": 0}}, "$FUNCTION": {"abstract_content": "md5(password.encode()).hexdigest", "end": {"col": 60, "line": 1019, "offset": 37226}, "start": {"col": 28, "line": 1019, "offset": 37194}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 28, "line": 1019, "offset": 37194}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 58, "line": 1069, "offset": 40036}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_4", "is_ignored": false, "lines": "                    response.set_cookie(\"cookie\", cookie)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 21, "line": 1069, "offset": 39999}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 56, "line": 1074, "offset": 40331}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_5", "is_ignored": false, "lines": "                    response.set_cookie(\"cookie\", None)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 21, "line": 1074, "offset": 40296}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 65, "line": 1102, "offset": 41548}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_6", "is_ignored": false, "lines": "        response.set_cookie(key = \"auth_cookie\", value = cookie)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 9, "line": 1102, "offset": 41492}}, {"check_id": "python.django.security.audit.csrf-exempt.no-csrf-exempt", "end": {"col": 28, "line": 1198, "offset": 46181}, "extra": {"engine_kind": "OSS", "fingerprint": "6640dab2585da31b2c2f95124473d0852a04da5476cddbb8f34d592925438668b49b6f21e9b2bc4a354f92b4ed5cafbf17b97187a2e23c8ea6bd9b2db9a00bea_0", "is_ignored": false, "lines": "@authentication_decorator\n@csrf_exempt\ndef auth_failure_lab3(request):\n    if request.method == \"GET\":\n        try:\n            cookie = request.COOKIES[\"session_id\"]\n            session = AF_session_id.objects.get(session_id=cookie)\n            if session :\n                return render(request,\"Lab_2021/A7_auth_failure/lab3.html\", {\"username\":session.user,\"success\":True})\n        except:\n            pass\n        return render(request, \"Lab_2021/A7_auth_failure/lab3.html\")\n    elif request.method == \"POST\":\n        token = str(uuid.uuid4())\n        try:\n            username = request.POST[\"username\"]\n            password = request.POST[\"password\"]\n            password = hashlib.sha256(password.encode()).hexdigest()\n        except:\n            response = render(request, \"Lab_2021/A7_auth_failure/lab3.html\")\n            response.set_cookie(\"session_id\", None)\n            return response\n\n        if USER_A7_LAB3[username]['password'] == password:\n            session_data = AF_session_id.objects.create(session_id=token, user=USER_A7_LAB3[username]['username'])\n            session_data.save()\n            response = render(request, \"Lab_2021/A7_auth_failure/lab3.html\", {\"success\":True, \"failure\":False, \"username\":username})\n            response.set_cookie(\"session_id\", token)\n            return response", "message": "Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9469, "rule_id": "v8UnqO", "rv_id": 834404, "url": "https://semgrep.dev/playground/r/PkTxrAN/python.django.security.audit.csrf-exempt.no-csrf-exempt", "version_id": "PkTxrAN"}}, "shortlink": "https://sg.run/rd5e", "source": "https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$R": {"abstract_content": "auth_failure_lab3", "end": {"col": 22, "line": 1172, "offset": 44922}, "start": {"col": 5, "line": 1172, "offset": 44905}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 1, "line": 1170, "offset": 44862}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 52, "line": 1190, "offset": 45732}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_7", "is_ignored": false, "lines": "            response.set_cookie(\"session_id\", None)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 1190, "offset": 45693}}, {"check_id": "python.django.security.audit.secure-cookies.django-secure-set-cookie", "end": {"col": 53, "line": 1197, "offset": 46153}, "extra": {"engine_kind": "OSS", "fingerprint": "4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_8", "is_ignored": false, "lines": "            response.set_cookie(\"session_id\", token)", "message": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.", "metadata": {"asvs": {"control_id": "3.4 Missing Cookie Attributes", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management", "section": "V3: Session Management Verification Requirements", "version": "4"}, "category": "security", "confidence": "LOW", "cwe": ["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration"], "references": ["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie", "https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/", "https://bento.dev/checks/flask/secure-set-cookie/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9474, "rule_id": "7KUQ2E", "rv_id": 834410, "url": "https://semgrep.dev/playground/r/BjTe02P/python.django.security.audit.secure-cookies.django-secure-set-cookie", "version_id": "BjTe02P"}}, "shortlink": "https://sg.run/x1WL", "source": "https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie", "subcategory": ["audit"], "technology": ["django"], "vulnerability_class": ["Cookie Security"]}, "metavars": {}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "introduction/views.py", "start": {"col": 13, "line": 1197, "offset": 46113}}], "skipped_rules": [], "version": "1.95.0"}