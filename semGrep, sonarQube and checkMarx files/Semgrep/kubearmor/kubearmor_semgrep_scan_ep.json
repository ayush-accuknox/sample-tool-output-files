{
    "errors": [
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line KubeArmor/BPF/system_monitor.c:20:\n `x` was unexpected",
            "path": "KubeArmor/BPF/system_monitor.c",
            "spans": [
                {
                    "end": {
                        "col": 28,
                        "line": 20,
                        "offset": 1
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 27,
                        "line": 20,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 42,
                        "line": 291,
                        "offset": 41
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 1,
                        "line": 291,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 325,
                        "offset": 7
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 23,
                        "line": 325,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 350,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 23,
                        "line": 350,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 358,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 358,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 364,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 364,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 42,
                        "line": 372,
                        "offset": 5
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 37,
                        "line": 372,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 375,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 375,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 380,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 380,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 385,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 385,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 399,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 399,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 405,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 405,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 410,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 410,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 416,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 416,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 428,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 428,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 440,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 440,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 453,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 453,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 483,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 483,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 515,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 515,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 556,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 556,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 587,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 587,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 592,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 592,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 597,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 597,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 602,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 602,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 612,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 612,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 656,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 656,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 35,
                        "line": 736,
                        "offset": 11
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 736,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 745,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 745,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 765,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 765,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 808,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 808,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 821,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 821,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 86,
                        "line": 821,
                        "offset": 19
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 67,
                        "line": 821,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 843,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 843,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 920,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 920,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 939,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 939,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 959,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 959,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 980,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 980,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 1048,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1048,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 22,
                        "line": 1343,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 16,
                        "line": 1343,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 22,
                        "line": 1354,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 16,
                        "line": 1354,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1482,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1482,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1511,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1511,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1534,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1534,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1548,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1548,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1616,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1616,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 1634,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 1634,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 22,
                        "line": 1658,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 16,
                        "line": 1658,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 22,
                        "line": 1683,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 16,
                        "line": 1683,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 2008,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 24,
                        "line": 2008,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 4,
                        "line": 2108,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 1,
                        "line": 2108,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 17,
                        "line": 2109,
                        "offset": 8
                    },
                    "file": "KubeArmor/BPF/system_monitor.c",
                    "start": {
                        "col": 9,
                        "line": 2109,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 28,
                            "line": 20,
                            "offset": 1
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 27,
                            "line": 20,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 42,
                            "line": 291,
                            "offset": 41
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 1,
                            "line": 291,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 325,
                            "offset": 7
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 23,
                            "line": 325,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 350,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 23,
                            "line": 350,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 358,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 358,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 364,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 364,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 42,
                            "line": 372,
                            "offset": 5
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 37,
                            "line": 372,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 375,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 375,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 380,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 380,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 385,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 385,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 399,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 399,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 405,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 405,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 410,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 410,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 416,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 416,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 428,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 428,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 440,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 440,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 453,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 453,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 483,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 483,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 515,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 515,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 556,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 556,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 587,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 587,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 592,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 592,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 597,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 597,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 602,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 602,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 612,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 612,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 656,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 656,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 35,
                            "line": 736,
                            "offset": 11
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 736,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 745,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 745,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 765,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 765,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 808,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 808,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 821,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 821,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 86,
                            "line": 821,
                            "offset": 19
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 67,
                            "line": 821,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 843,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 843,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 920,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 920,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 939,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 939,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 959,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 959,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 980,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 980,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 1048,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1048,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 22,
                            "line": 1343,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 16,
                            "line": 1343,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 22,
                            "line": 1354,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 16,
                            "line": 1354,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1482,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1482,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1511,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1511,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1534,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1534,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1548,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1548,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1616,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1616,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 1634,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 1634,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 22,
                            "line": 1658,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 16,
                            "line": 1658,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 22,
                            "line": 1683,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 16,
                            "line": 1683,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 2008,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 24,
                            "line": 2008,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 4,
                            "line": 2108,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 1,
                            "line": 2108,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 17,
                            "line": 2109,
                            "offset": 8
                        },
                        "path": "KubeArmor/BPF/system_monitor.c",
                        "start": {
                            "col": 9,
                            "line": 2109,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line KubeArmor/BPF/shared.h:61:\n `bufs` was unexpected",
            "path": "KubeArmor/BPF/shared.h",
            "spans": [
                {
                    "end": {
                        "col": 7,
                        "line": 61,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 3,
                        "line": 61,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 11,
                        "line": 68,
                        "offset": 8
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 3,
                        "line": 68,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 24,
                        "line": 74,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 21,
                        "line": 74,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 7,
                        "line": 75,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 3,
                        "line": 75,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 100,
                        "offset": 9
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 21,
                        "line": 100,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 134,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 23,
                        "line": 134,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 26,
                        "line": 142,
                        "offset": 5
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 21,
                        "line": 142,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 150,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 150,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 154,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 154,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 158,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 158,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 40,
                        "line": 163,
                        "offset": 5
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 35,
                        "line": 163,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 166,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 166,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 239,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 239,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 243,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 243,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 247,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 247,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 253,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 253,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 258,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 258,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 263,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 263,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 286,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 286,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 312,
                        "offset": 3
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 312,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 28,
                        "line": 324,
                        "offset": 4
                    },
                    "file": "KubeArmor/BPF/shared.h",
                    "start": {
                        "col": 24,
                        "line": 324,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 7,
                            "line": 61,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 3,
                            "line": 61,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 11,
                            "line": 68,
                            "offset": 8
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 3,
                            "line": 68,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 24,
                            "line": 74,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 21,
                            "line": 74,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 7,
                            "line": 75,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 3,
                            "line": 75,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 100,
                            "offset": 9
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 21,
                            "line": 100,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 134,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 23,
                            "line": 134,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 26,
                            "line": 142,
                            "offset": 5
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 21,
                            "line": 142,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 150,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 150,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 154,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 154,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 158,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 158,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 40,
                            "line": 163,
                            "offset": 5
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 35,
                            "line": 163,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 166,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 166,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 239,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 239,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 243,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 243,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 247,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 247,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 253,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 253,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 258,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 258,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 263,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 263,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 286,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 286,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 312,
                            "offset": 3
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 312,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 28,
                            "line": 324,
                            "offset": 4
                        },
                        "path": "KubeArmor/BPF/shared.h",
                        "start": {
                            "col": 24,
                            "line": 324,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:35:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{secrets.CONTROLLER_OSPID` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 38,
                        "line": 35,
                        "offset": 1002
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 13,
                        "line": 35,
                        "offset": 977
                    }
                },
                {
                    "end": {
                        "col": 73,
                        "line": 35,
                        "offset": 1005
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 45,
                        "line": 35,
                        "offset": 977
                    }
                },
                {
                    "end": {
                        "col": 109,
                        "line": 35,
                        "offset": 1006
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 80,
                        "line": 35,
                        "offset": 977
                    }
                },
                {
                    "end": {
                        "col": 139,
                        "line": 35,
                        "offset": 1000
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 116,
                        "line": 35,
                        "offset": 977
                    }
                },
                {
                    "end": {
                        "col": 167,
                        "line": 35,
                        "offset": 998
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 146,
                        "line": 35,
                        "offset": 977
                    }
                },
                {
                    "end": {
                        "col": 27,
                        "line": 36,
                        "offset": 994
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 10,
                        "line": 36,
                        "offset": 977
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 38,
                            "line": 35,
                            "offset": 1002
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 13,
                            "line": 35,
                            "offset": 977
                        }
                    },
                    {
                        "end": {
                            "col": 73,
                            "line": 35,
                            "offset": 1005
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 45,
                            "line": 35,
                            "offset": 977
                        }
                    },
                    {
                        "end": {
                            "col": 109,
                            "line": 35,
                            "offset": 1006
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 80,
                            "line": 35,
                            "offset": 977
                        }
                    },
                    {
                        "end": {
                            "col": 139,
                            "line": 35,
                            "offset": 1000
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 116,
                            "line": 35,
                            "offset": 977
                        }
                    },
                    {
                        "end": {
                            "col": 167,
                            "line": 35,
                            "offset": 998
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 146,
                            "line": 35,
                            "offset": 977
                        }
                    },
                    {
                        "end": {
                            "col": 27,
                            "line": 36,
                            "offset": 994
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 10,
                            "line": 36,
                            "offset": 977
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:74:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 122,
                        "line": 74,
                        "offset": 2791
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 119,
                        "line": 74,
                        "offset": 2788
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 122,
                            "line": 74,
                            "offset": 2791
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 119,
                            "line": 74,
                            "offset": 2788
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:87:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 58,
                        "line": 87,
                        "offset": 3227
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 55,
                        "line": 87,
                        "offset": 3224
                    }
                },
                {
                    "end": {
                        "col": 63,
                        "line": 88,
                        "offset": 3227
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 60,
                        "line": 88,
                        "offset": 3224
                    }
                },
                {
                    "end": {
                        "col": 69,
                        "line": 89,
                        "offset": 3227
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 66,
                        "line": 89,
                        "offset": 3224
                    }
                },
                {
                    "end": {
                        "col": 67,
                        "line": 90,
                        "offset": 3227
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 64,
                        "line": 90,
                        "offset": 3224
                    }
                },
                {
                    "end": {
                        "col": 65,
                        "line": 91,
                        "offset": 3227
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 62,
                        "line": 91,
                        "offset": 3224
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 58,
                            "line": 87,
                            "offset": 3227
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 55,
                            "line": 87,
                            "offset": 3224
                        }
                    },
                    {
                        "end": {
                            "col": 63,
                            "line": 88,
                            "offset": 3227
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 60,
                            "line": 88,
                            "offset": 3224
                        }
                    },
                    {
                        "end": {
                            "col": 69,
                            "line": 89,
                            "offset": 3227
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 66,
                            "line": 89,
                            "offset": 3224
                        }
                    },
                    {
                        "end": {
                            "col": 67,
                            "line": 90,
                            "offset": 3227
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 64,
                            "line": 90,
                            "offset": 3224
                        }
                    },
                    {
                        "end": {
                            "col": 65,
                            "line": 91,
                            "offset": 3227
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 62,
                            "line": 91,
                            "offset": 3224
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:100:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 70,
                        "line": 100,
                        "offset": 4188
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 67,
                        "line": 100,
                        "offset": 4185
                    }
                },
                {
                    "end": {
                        "col": 97,
                        "line": 100,
                        "offset": 4188
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 94,
                        "line": 100,
                        "offset": 4185
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 70,
                            "line": 100,
                            "offset": 4188
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 67,
                            "line": 100,
                            "offset": 4185
                        }
                    },
                    {
                        "end": {
                            "col": 97,
                            "line": 100,
                            "offset": 4188
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 94,
                            "line": 100,
                            "offset": 4185
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:113:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 58,
                        "line": 113,
                        "offset": 4617
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 55,
                        "line": 113,
                        "offset": 4614
                    }
                },
                {
                    "end": {
                        "col": 63,
                        "line": 114,
                        "offset": 4617
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 60,
                        "line": 114,
                        "offset": 4614
                    }
                },
                {
                    "end": {
                        "col": 69,
                        "line": 115,
                        "offset": 4617
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 66,
                        "line": 115,
                        "offset": 4614
                    }
                },
                {
                    "end": {
                        "col": 67,
                        "line": 116,
                        "offset": 4617
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 64,
                        "line": 116,
                        "offset": 4614
                    }
                },
                {
                    "end": {
                        "col": 65,
                        "line": 117,
                        "offset": 4617
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 62,
                        "line": 117,
                        "offset": 4614
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 58,
                            "line": 113,
                            "offset": 4617
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 55,
                            "line": 113,
                            "offset": 4614
                        }
                    },
                    {
                        "end": {
                            "col": 63,
                            "line": 114,
                            "offset": 4617
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 60,
                            "line": 114,
                            "offset": 4614
                        }
                    },
                    {
                        "end": {
                            "col": 69,
                            "line": 115,
                            "offset": 4617
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 66,
                            "line": 115,
                            "offset": 4614
                        }
                    },
                    {
                        "end": {
                            "col": 67,
                            "line": 116,
                            "offset": 4617
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 64,
                            "line": 116,
                            "offset": 4614
                        }
                    },
                    {
                        "end": {
                            "col": 65,
                            "line": 117,
                            "offset": 4617
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 62,
                            "line": 117,
                            "offset": 4614
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:135:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 131,
                        "line": 135,
                        "offset": 5917
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 128,
                        "line": 135,
                        "offset": 5914
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 131,
                            "line": 135,
                            "offset": 5917
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 128,
                            "line": 135,
                            "offset": 5914
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-marketplace-release.yml:184:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-marketplace-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 77,
                        "line": 184,
                        "offset": 8010
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 74,
                        "line": 184,
                        "offset": 8007
                    }
                },
                {
                    "end": {
                        "col": 104,
                        "line": 184,
                        "offset": 8010
                    },
                    "file": ".github/workflows/ci-marketplace-release.yml",
                    "start": {
                        "col": 101,
                        "line": 184,
                        "offset": 8007
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 77,
                            "line": 184,
                            "offset": 8010
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 74,
                            "line": 184,
                            "offset": 8007
                        }
                    },
                    {
                        "end": {
                            "col": 104,
                            "line": 184,
                            "offset": 8010
                        },
                        "path": ".github/workflows/ci-marketplace-release.yml",
                        "start": {
                            "col": 101,
                            "line": 184,
                            "offset": 8007
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-ginkgo.yml:86:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [[ ${{ matrix.runtime }} == \"containerd\" ]]; then\n  docker save kubearmor/kubearmor-test-init:latest | sudo k3s ctr images import -\n  docker save kubearmor/kubearmor-test:latest | sudo k3s ctr images import -\n  docker save kubearmor/kubearmor-operator:latest | sudo k3s ctr images import -\n  docker save kubearmor/kubearmor-snitch:latest | sudo k3s ctr images import -\n  \n  if [[ ${{ steps.filter.outputs.controller }} == 'true' ]]; then \n    docker save kubearmor/kubearmor-controller:latest | sudo k3s ctr images import -\n  fi\nelse\n  if [ ${{ matrix.runtime }} == \"crio\" ]; then\n    docker save kubearmor/kubearmor-test-init:latest | sudo podman load\n    sudo podman tag localhost/latest:latest docker.io/kubearmor/kubearmor-test-init:latest\n    docker save kubearmor/kubearmor-test:latest | sudo podman load\n    sudo podman tag localhost/latest:latest docker.io/kubearmor/kubearmor-test:latest\n    docker save kubearmor/kubearmor-operator:latest | sudo podman load\n    sudo podman tag localhost/latest:latest docker.io/kubearmor/kubearmor-operator:latest\n    docker save kubearmor/kubearmor-snitch:latest | sudo podman load\n    sudo podman tag localhost/latest:latest docker.io/kubearmor/kubearmor-snitch:latest\n    if [ ${{ steps.filter.outputs.controller }} == 'true' ]; then\n      docker save kubearmor/kubearmor-controller:latest | sudo podman load\n      sudo podman tag localhost/latest:latest docker.io/kubearmor/kubearmor-controller:latest\n    fi\n  fi\nfi\ndocker system prune -a -f \ndocker buildx prune -a -f\nhelm upgrade --install kubearmor-operator ./deployments/helm/KubeArmorOperator -n kubearmor --create-namespace --set kubearmorOperator.image.tag=latest \nkubectl wait --for=condition=ready --timeout=5m -n kubearmor pod -l kubearmor-app=kubearmor-operator\nkubectl get pods -A\nif [[ ${{ steps.filter.outputs.controller }} == 'true' ]]; then\n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-coverage.yaml --dry-run=client -o json | \\\n  jq '.spec.kubearmorControllerImage.imagePullPolicy = \"Never\"' | \\\n  kubectl apply -f -\nelse \n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-coverage.yaml\nfi\n\nkubectl wait -n kubearmor --timeout=5m --for=jsonpath='{.status.phase}'=Running kubearmorconfigs/kubearmorconfig-test\nkubectl wait --timeout=7m --for=condition=ready pod -l kubearmor-app,kubearmor-app!=kubearmor-snitch,kubearmor-app!=kubearmor-controller -n kubearmor\nkubectl wait --timeout=1m --for=condition=ready pod -l kubearmor-app=kubearmor-controller -n kubearmor\nkubectl get pods -A\n\nsleep 10\nDAEMONSET_NAME=$(kubectl get daemonset -n kubearmor -o jsonpath='{.items[0].metadata.name}')\necho \"DaemonSet: $DAEMONSET_NAME\"\n\nkubectl patch daemonset $DAEMONSET_NAME -n kubearmor --type='json' -p='[\n  {\n    \"op\": \"add\",\n    \"path\": \"/spec/template/spec/volumes/-\",\n    \"value\": {\n      \"name\": \"coverage-storage\",\n      \"hostPath\": {\n        \"path\": \"/coverage\",\n        \"type\": \"DirectoryOrCreate\"\n      }\n    }\n  },\n  {\n    \"op\": \"add\",\n    \"path\": \"/spec/template/spec/containers/0/volumeMounts/-\",\n    \"value\": {\n      \"mountPath\": \"/coverage\",\n      \"name\": \"coverage-storage\"\n    }\n  },\n  {\n    \"op\": \"add\",\n    \"path\": \"/spec/template/spec/containers/0/args/-\",\n    \"value\": \"-test.coverprofile=/coverage/coverage_k8s_${{ matrix.os }}_${{ matrix.runtime }}.out\"\n  }\n]'\n\nsleep 15\n` was unexpected",
            "path": ".github/workflows/ci-test-ginkgo.yml",
            "spans": [
                {
                    "end": {
                        "col": 10,
                        "line": 160,
                        "offset": 5645
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 15,
                        "line": 86,
                        "offset": 2309
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 10,
                            "line": 160,
                            "offset": 5645
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 15,
                            "line": 86,
                            "offset": 2309
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-ginkgo.yml:179:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-test-ginkgo.yml",
            "spans": [
                {
                    "end": {
                        "col": 47,
                        "line": 179,
                        "offset": 7163
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 44,
                        "line": 179,
                        "offset": 7160
                    }
                },
                {
                    "end": {
                        "col": 17,
                        "line": 180,
                        "offset": 7163
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 14,
                        "line": 180,
                        "offset": 7160
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 47,
                            "line": 179,
                            "offset": 7163
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 44,
                            "line": 179,
                            "offset": 7160
                        }
                    },
                    {
                        "end": {
                            "col": 17,
                            "line": 180,
                            "offset": 7163
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 14,
                            "line": 180,
                            "offset": 7160
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-ginkgo.yml:187:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `for i in {1..24}; do\n  if [ -f /coverage/coverage_k8s_${{ matrix.os }}_${{ matrix.runtime }}.out ]; then\n    cp /coverage/coverage_k8s_${{ matrix.os }}_${{ matrix.runtime }}.out coverage_k8s_${{ matrix.os }}_${{ matrix.runtime }}.out\n    break\n  fi\n  sleep 5\ndone\nls -l\n` was unexpected",
            "path": ".github/workflows/ci-test-ginkgo.yml",
            "spans": [
                {
                    "end": {
                        "col": 7,
                        "line": 194,
                        "offset": 7824
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 15,
                        "line": 187,
                        "offset": 7554
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 7,
                            "line": 194,
                            "offset": 7824
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 15,
                            "line": 187,
                            "offset": 7554
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-ginkgo.yml:217:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-test-ginkgo.yml",
            "spans": [
                {
                    "end": {
                        "col": 37,
                        "line": 217,
                        "offset": 8561
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 34,
                        "line": 217,
                        "offset": 8558
                    }
                },
                {
                    "end": {
                        "col": 54,
                        "line": 217,
                        "offset": 8561
                    },
                    "file": ".github/workflows/ci-test-ginkgo.yml",
                    "start": {
                        "col": 51,
                        "line": 217,
                        "offset": 8558
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 37,
                            "line": 217,
                            "offset": 8561
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 34,
                            "line": 217,
                            "offset": 8558
                        }
                    },
                    {
                        "end": {
                            "col": 54,
                            "line": 217,
                            "offset": 8561
                        },
                        "path": ".github/workflows/ci-test-ginkgo.yml",
                        "start": {
                            "col": 51,
                            "line": 217,
                            "offset": 8558
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:68:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [ ${{ github.ref }} == \"refs/heads/main\" ]; then\n  echo \"tag=latest\" >> $GITHUB_OUTPUT\nelse\n  echo \"tag=${GITHUB_REF#refs/*/}\" >> $GITHUB_OUTPUT\nfi\nRUNTIME=containerd ./contribution/k3s/install_k3s.sh\n` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 54,
                        "line": 73,
                        "offset": 1826
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 15,
                        "line": 68,
                        "offset": 1622
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 54,
                            "line": 73,
                            "offset": 1826
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 15,
                            "line": 68,
                            "offset": 1622
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:77:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 77,
                        "line": 77,
                        "offset": 1947
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 74,
                        "line": 77,
                        "offset": 1944
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 77,
                            "line": 77,
                            "offset": 1947
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 74,
                            "line": 77,
                            "offset": 1944
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:81:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 40,
                        "line": 81,
                        "offset": 2140
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 37,
                        "line": 81,
                        "offset": 2137
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 40,
                            "line": 81,
                            "offset": 2140
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 37,
                            "line": 81,
                            "offset": 2137
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:91:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `docker save kubearmor/kubearmor-init:${{ steps.vars.outputs.tag }} | sudo k3s ctr images import -\ndocker save kubearmor/kubearmor:${{ steps.vars.outputs.tag }} | sudo k3s ctr images import -\ndocker save kubearmor/kubearmor-operator:${{ steps.vars.outputs.tag }} | sudo k3s ctr images import -\ndocker save kubearmor/kubearmor-snitch:${{ steps.vars.outputs.tag }} | sudo k3s ctr images import -\n\nhelm upgrade --install kubearmor-operator ./deployments/helm/KubeArmorOperator -n kubearmor --create-namespace --set kubearmorOperator.image.tag=${{ steps.vars.outputs.tag }}\nkubectl wait --for=condition=ready --timeout=5m -n kubearmor pod -l kubearmor-app=kubearmor-operator\nkubectl get pods -A\nif [[ ${{ steps.vars.outputs.tag }} == v* ]]; then\n  sed -i '/image: kubearmor\\/kubearmor-controller:latest/!{/image: kubearmor\\/kubearmor-relay-server:latest/!s/latest/${{ steps.vars.outputs.tag }}/g}' pkg/KubeArmorOperator/config/samples/kubearmor-test.yaml\nfi\nkubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-test.yaml\nkubectl wait -n kubearmor --timeout=5m --for=jsonpath='{.status.phase}'=Running kubearmorconfigs/kubearmorconfig-test\nkubectl wait --timeout=7m --for=condition=ready pod -l kubearmor-app,kubearmor-app!=kubearmor-snitch,kubearmor-app!=kubearmor-controller -n kubearmor\nkubectl wait --timeout=1m --for=condition=ready pod -l kubearmor-app=kubearmor-controller -n kubearmor\nkubectl get pods -A\n` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 21,
                        "line": 106,
                        "offset": 3828
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 15,
                        "line": 91,
                        "offset": 2410
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 21,
                            "line": 106,
                            "offset": 3828
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 15,
                            "line": 91,
                            "offset": 2410
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:147:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 76,
                        "line": 147,
                        "offset": 5176
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 73,
                        "line": 147,
                        "offset": 5173
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 76,
                            "line": 147,
                            "offset": 5176
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 73,
                            "line": 147,
                            "offset": 5173
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:160:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 53,
                        "line": 160,
                        "offset": 5767
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 50,
                        "line": 160,
                        "offset": 5764
                    }
                },
                {
                    "end": {
                        "col": 44,
                        "line": 161,
                        "offset": 5767
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 41,
                        "line": 161,
                        "offset": 5764
                    }
                },
                {
                    "end": {
                        "col": 43,
                        "line": 162,
                        "offset": 5767
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 40,
                        "line": 162,
                        "offset": 5764
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 53,
                            "line": 160,
                            "offset": 5767
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 50,
                            "line": 160,
                            "offset": 5764
                        }
                    },
                    {
                        "end": {
                            "col": 44,
                            "line": 161,
                            "offset": 5767
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 41,
                            "line": 161,
                            "offset": 5764
                        }
                    },
                    {
                        "end": {
                            "col": 43,
                            "line": 162,
                            "offset": 5767
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 40,
                            "line": 162,
                            "offset": 5764
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:189:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `value=`cat STABLE-RELEASE`\nif [ ${{ github.ref }} == \"refs/heads/$value\" ]; then\n  echo \"tag=true\" >> $GITHUB_OUTPUT\nelse\n  echo \"tag=false\" >> $GITHUB_OUTPUT\nfi\n` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 4,
                        "line": 194,
                        "offset": 6834
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 15,
                        "line": 189,
                        "offset": 6672
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 4,
                            "line": 194,
                            "offset": 6834
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 15,
                            "line": 189,
                            "offset": 6672
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:244:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [ ${{ github.ref }} == \"refs/heads/main\" ]; then\n  echo \"tag=latest\" >> $GITHUB_OUTPUT\nelse\n  echo \"tag=${GITHUB_REF#refs/*/}\" >> $GITHUB_OUTPUT\nfi\n` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 4,
                        "line": 248,
                        "offset": 8762
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 15,
                        "line": 244,
                        "offset": 8611
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 4,
                            "line": 248,
                            "offset": 8762
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 15,
                            "line": 244,
                            "offset": 8611
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-latest-release.yml:252:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-latest-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 40,
                        "line": 252,
                        "offset": 8877
                    },
                    "file": ".github/workflows/ci-latest-release.yml",
                    "start": {
                        "col": 37,
                        "line": 252,
                        "offset": 8874
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 40,
                            "line": 252,
                            "offset": 8877
                        },
                        "path": ".github/workflows/ci-latest-release.yml",
                        "start": {
                            "col": 37,
                            "line": 252,
                            "offset": 8874
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line KubeArmor/templates/install.sh:179:\n `& 0x1` was unexpected",
            "path": "KubeArmor/templates/install.sh",
            "spans": [
                {
                    "end": {
                        "col": 30,
                        "line": 179,
                        "offset": 5
                    },
                    "file": "KubeArmor/templates/install.sh",
                    "start": {
                        "col": 25,
                        "line": 179,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 185,
                        "offset": 5
                    },
                    "file": "KubeArmor/templates/install.sh",
                    "start": {
                        "col": 25,
                        "line": 185,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 191,
                        "offset": 5
                    },
                    "file": "KubeArmor/templates/install.sh",
                    "start": {
                        "col": 25,
                        "line": 191,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 30,
                        "line": 198,
                        "offset": 5
                    },
                    "file": "KubeArmor/templates/install.sh",
                    "start": {
                        "col": 25,
                        "line": 198,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 34,
                        "line": 199,
                        "offset": 5
                    },
                    "file": "KubeArmor/templates/install.sh",
                    "start": {
                        "col": 29,
                        "line": 199,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 30,
                            "line": 179,
                            "offset": 5
                        },
                        "path": "KubeArmor/templates/install.sh",
                        "start": {
                            "col": 25,
                            "line": 179,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 185,
                            "offset": 5
                        },
                        "path": "KubeArmor/templates/install.sh",
                        "start": {
                            "col": 25,
                            "line": 185,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 191,
                            "offset": 5
                        },
                        "path": "KubeArmor/templates/install.sh",
                        "start": {
                            "col": 25,
                            "line": 191,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 30,
                            "line": 198,
                            "offset": 5
                        },
                        "path": "KubeArmor/templates/install.sh",
                        "start": {
                            "col": 25,
                            "line": 198,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 34,
                            "line": 199,
                            "offset": 5
                        },
                        "path": "KubeArmor/templates/install.sh",
                        "start": {
                            "col": 29,
                            "line": 199,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/daemonset.yaml:21:\n (approximate error location; error nearby after) error calling parser: could not find expected ':' character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/daemonset.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-controllers.yml:66:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `docker save kubearmor/kubearmor-controller:latest | sudo k3s ctr images import -\ndocker save kubearmor/kubearmor-operator:latest | sudo k3s ctr images import -\ndocker save kubearmor/kubearmor-snitch:latest | sudo k3s ctr images import -\n\nhelm upgrade --install kubearmor-operator ./deployments/helm/KubeArmorOperator -n kubearmor --create-namespace --set kubearmorOperator.image.tag=latest\nkubectl wait --for=condition=ready --timeout=5m -n kubearmor pod -l kubearmor-app=kubearmor-operator\nkubectl get pods -A\n\n# create kubearmorconfig\nif [[ ${{ steps.filter.outputs.kubearmor }} == 'true' ]]; then\n  docker save kubearmor/kubearmor:latest | sudo k3s ctr images import -\n  docker save kubearmor/kubearmor-init:latest | sudo k3s ctr images import -\n\n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-test.yaml --dry-run=client -o json | \\\n  jq '.spec.kubearmorControllerImage.imagePullPolicy = \"Never\"' | \\\n  kubectl apply -f -\nelse\n  # use latest kubearmor if no changes in kubearmor or protobuf dir\n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-test.yaml --dry-run=client -o json | \\\n  jq '.spec.kubearmorControllerImage.imagePullPolicy = \"Never\" | .spec.kubearmorImage.imagePullPolicy = \"Always\" | .spec.kubearmorInitImage.imagePullPolicy = \"Always\"' | \\\n  kubectl apply -f -\nfi\nkubectl wait -n kubearmor --timeout=5m --for=jsonpath='{.status.phase}'=Running kubearmorconfigs/kubearmorconfig-test\ntimeout 7m bash -c -- '\nwhile true; do\nall_running=true\necho \"Checking pod status...\"\nfor pod_status in $(kubectl get pod -n kubearmor -l kubearmor-app,kubearmor-app!=kubearmor-snitch --output=jsonpath=\"{.items[*].status.phase}\" 2>/dev/null); do\nif [ \"$pod_status\" != \"Running\" ]; then\nall_running=false\necho \"Waiting for pods to be Running...\"\nbreak\nfi\ndone\n\nif $all_running; then\necho \"All pods are Running.\"\nbreak\nfi\n\nif kubectl get pod -n kubearmor -l kubearmor-app,kubearmor-app!=kubearmor-snitch | grep CrashLoopBackOff; then\necho \"Error: Pod in CrashLoopBackOff state\"\nexit 1\nfi\n\nsleep 1\ndone\n'\n` was unexpected",
            "path": ".github/workflows/ci-test-controllers.yml",
            "spans": [
                {
                    "end": {
                        "col": 3,
                        "line": 113,
                        "offset": 3792
                    },
                    "file": ".github/workflows/ci-test-controllers.yml",
                    "start": {
                        "col": 1,
                        "line": 66,
                        "offset": 1754
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 3,
                            "line": 113,
                            "offset": 3792
                        },
                        "path": ".github/workflows/ci-test-controllers.yml",
                        "start": {
                            "col": 1,
                            "line": 66,
                            "offset": 1754
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-test-ubi-image.yml:81:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `docker save kubearmor/kubearmor-init:latest | sudo podman load\ndocker save kubearmor/kubearmor-ubi:latest | sudo podman load\ndocker save kubearmor/kubearmor-operator:latest | sudo podman load\ndocker save kubearmor/kubearmor-snitch:latest | sudo podman load\n\nif [ ${{ steps.filter.outputs.controller }} == 'true' ]; then \n  docker save kubearmor/kubearmor-controller:latest | sudo podman load\nfi          \n\nhelm upgrade --install kubearmor-operator ./deployments/helm/KubeArmorOperator -n kubearmor --create-namespace --set kubearmorOperator.image.tag=latest\nkubectl get pods -A\nkubectl wait --for=condition=ready --timeout=5m -n kubearmor pod -l kubearmor-app=kubearmor-operator\n\nif [[ ${{ steps.filter.outputs.controller }} == 'true' ]]; then\n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-ubi-test.yaml --dry-run=client -o json | \\\n  jq '.spec.kubearmorControllerImage.imagePullPolicy = \"Never\"' | \\\n  kubectl apply -f -\nelse \n  kubectl apply -f pkg/KubeArmorOperator/config/samples/kubearmor-ubi-test.yaml\nfi\n\nkubectl wait -n kubearmor --timeout=5m --for=jsonpath='{.status.phase}'=Running kubearmorconfigs/kubearmorconfig-test\nkubectl wait --timeout=7m --for=condition=ready pod -l kubearmor-app,kubearmor-app!=kubearmor-snitch,kubearmor-app!=kubearmor-controller -n kubearmor\nkubectl wait --timeout=1m --for=condition=ready pod -l kubearmor-app=kubearmor-controller -n kubearmor\nkubectl get pods -A\n` was unexpected",
            "path": ".github/workflows/ci-test-ubi-image.yml",
            "spans": [
                {
                    "end": {
                        "col": 21,
                        "line": 105,
                        "offset": 3421
                    },
                    "file": ".github/workflows/ci-test-ubi-image.yml",
                    "start": {
                        "col": 15,
                        "line": 81,
                        "offset": 1998
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 21,
                            "line": 105,
                            "offset": 3421
                        },
                        "path": ".github/workflows/ci-test-ubi-image.yml",
                        "start": {
                            "col": 15,
                            "line": 81,
                            "offset": 1998
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/deployment.yaml:1:\n (approximate error location; error nearby after) error calling parser: did not find expected node content character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/deployment.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmorOperator/templates/clusterrole-rbac.yaml:4:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmorOperator/templates/clusterrole-rbac.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-systemd-release.yml:59:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `cp KubeArmor/.goreleaser.yaml /tmp/.goreleaser.yaml\nif [[ ${{ github.event_name }} == \"workflow_dispatch\" ]]; then\n  # checkout branch but use goreleaser config from latest\n  echo \"Checking out tag: ${{ inputs.tag }}\"\n  git checkout ${{ inputs.tag }}\n  echo \"GORELEASER_CURRENT_TAG=${{ inputs.tag }}\" >> $GITHUB_OUTPUT\n\n  REF=${{ inputs.tag }}\n  echo \"tag=${REF#v}\" >> $GITHUB_OUTPUT\nelse\n  REF=${GITHUB_REF#refs/*/}\n  echo \"tag=${REF#v}\" >> $GITHUB_OUTPUT\nfi\n` was unexpected",
            "path": ".github/workflows/ci-systemd-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 4,
                        "line": 71,
                        "offset": 1987
                    },
                    "file": ".github/workflows/ci-systemd-release.yml",
                    "start": {
                        "col": 15,
                        "line": 59,
                        "offset": 1527
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 4,
                            "line": 71,
                            "offset": 1987
                        },
                        "path": ".github/workflows/ci-systemd-release.yml",
                        "start": {
                            "col": 15,
                            "line": 59,
                            "offset": 1527
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-systemd-release.yml:92:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-systemd-release.yml",
            "spans": [
                {
                    "end": {
                        "col": 66,
                        "line": 92,
                        "offset": 2711
                    },
                    "file": ".github/workflows/ci-systemd-release.yml",
                    "start": {
                        "col": 63,
                        "line": 92,
                        "offset": 2708
                    }
                },
                {
                    "end": {
                        "col": 118,
                        "line": 92,
                        "offset": 2711
                    },
                    "file": ".github/workflows/ci-systemd-release.yml",
                    "start": {
                        "col": 115,
                        "line": 92,
                        "offset": 2708
                    }
                },
                {
                    "end": {
                        "col": 52,
                        "line": 93,
                        "offset": 2711
                    },
                    "file": ".github/workflows/ci-systemd-release.yml",
                    "start": {
                        "col": 49,
                        "line": 93,
                        "offset": 2708
                    }
                },
                {
                    "end": {
                        "col": 104,
                        "line": 93,
                        "offset": 2711
                    },
                    "file": ".github/workflows/ci-systemd-release.yml",
                    "start": {
                        "col": 101,
                        "line": 93,
                        "offset": 2708
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 66,
                            "line": 92,
                            "offset": 2711
                        },
                        "path": ".github/workflows/ci-systemd-release.yml",
                        "start": {
                            "col": 63,
                            "line": 92,
                            "offset": 2708
                        }
                    },
                    {
                        "end": {
                            "col": 118,
                            "line": 92,
                            "offset": 2711
                        },
                        "path": ".github/workflows/ci-systemd-release.yml",
                        "start": {
                            "col": 115,
                            "line": 92,
                            "offset": 2708
                        }
                    },
                    {
                        "end": {
                            "col": 52,
                            "line": 93,
                            "offset": 2711
                        },
                        "path": ".github/workflows/ci-systemd-release.yml",
                        "start": {
                            "col": 49,
                            "line": 93,
                            "offset": 2708
                        }
                    },
                    {
                        "end": {
                            "col": 104,
                            "line": 93,
                            "offset": 2711
                        },
                        "path": ".github/workflows/ci-systemd-release.yml",
                        "start": {
                            "col": 101,
                            "line": 93,
                            "offset": 2708
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/RBAC/roles.yaml:79:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/RBAC/roles.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-operator-release.yaml:54:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [ ${{ github.ref }} == \"refs/heads/main\" ]; then\n  echo \"tag=latest\" >> $GITHUB_OUTPUT\nelse\n  echo \"tag=${GITHUB_REF#refs/*/}\" >> $GITHUB_OUTPUT\nfi\n` was unexpected",
            "path": ".github/workflows/ci-operator-release.yaml",
            "spans": [
                {
                    "end": {
                        "col": 4,
                        "line": 58,
                        "offset": 1333
                    },
                    "file": ".github/workflows/ci-operator-release.yaml",
                    "start": {
                        "col": 15,
                        "line": 54,
                        "offset": 1182
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 4,
                            "line": 58,
                            "offset": 1333
                        },
                        "path": ".github/workflows/ci-operator-release.yaml",
                        "start": {
                            "col": 15,
                            "line": 54,
                            "offset": 1182
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-operator-release.yaml:63:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/workflows/ci-operator-release.yaml",
            "spans": [
                {
                    "end": {
                        "col": 59,
                        "line": 63,
                        "offset": 1498
                    },
                    "file": ".github/workflows/ci-operator-release.yaml",
                    "start": {
                        "col": 56,
                        "line": 63,
                        "offset": 1495
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 59,
                            "line": 63,
                            "offset": 1498
                        },
                        "path": ".github/workflows/ci-operator-release.yaml",
                        "start": {
                            "col": 56,
                            "line": 63,
                            "offset": 1495
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/workflows/ci-operator-release.yaml:71:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `value=`cat STABLE-RELEASE`\nif [ ${{ github.ref }} == \"refs/heads/$value\" ]; then\n  echo \"match=true\" >> $GITHUB_OUTPUT\nelse\n  echo \"match=false\" >> $GITHUB_OUTPUT\nfi\n` was unexpected",
            "path": ".github/workflows/ci-operator-release.yaml",
            "spans": [
                {
                    "end": {
                        "col": 4,
                        "line": 76,
                        "offset": 1881
                    },
                    "file": ".github/workflows/ci-operator-release.yaml",
                    "start": {
                        "col": 15,
                        "line": 71,
                        "offset": 1715
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 4,
                            "line": 76,
                            "offset": 1881
                        },
                        "path": ".github/workflows/ci-operator-release.yaml",
                        "start": {
                            "col": 15,
                            "line": 71,
                            "offset": 1715
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/RBAC/bindings.yaml:30:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/RBAC/bindings.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/actions/marketplace/action.yml:47:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/actions/marketplace/action.yml",
            "spans": [
                {
                    "end": {
                        "col": 46,
                        "line": 47,
                        "offset": 925
                    },
                    "file": ".github/actions/marketplace/action.yml",
                    "start": {
                        "col": 43,
                        "line": 47,
                        "offset": 922
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 46,
                            "line": 47,
                            "offset": 925
                        },
                        "path": ".github/actions/marketplace/action.yml",
                        "start": {
                            "col": 43,
                            "line": 47,
                            "offset": 922
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line .github/actions/marketplace/action.yml:57:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
            "path": ".github/actions/marketplace/action.yml",
            "spans": [
                {
                    "end": {
                        "col": 56,
                        "line": 57,
                        "offset": 1900
                    },
                    "file": ".github/actions/marketplace/action.yml",
                    "start": {
                        "col": 53,
                        "line": 57,
                        "offset": 1897
                    }
                },
                {
                    "end": {
                        "col": 88,
                        "line": 57,
                        "offset": 1900
                    },
                    "file": ".github/actions/marketplace/action.yml",
                    "start": {
                        "col": 85,
                        "line": 57,
                        "offset": 1897
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 56,
                            "line": 57,
                            "offset": 1900
                        },
                        "path": ".github/actions/marketplace/action.yml",
                        "start": {
                            "col": 53,
                            "line": 57,
                            "offset": 1897
                        }
                    },
                    {
                        "end": {
                            "col": 88,
                            "line": 57,
                            "offset": 1900
                        },
                        "path": ".github/actions/marketplace/action.yml",
                        "start": {
                            "col": 85,
                            "line": 57,
                            "offset": 1897
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/kubearmor-tls-secrets.yaml:2:\n (approximate error location; error nearby after) error calling parser: did not find expected node content character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/kubearmor-tls-secrets.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmorOperator/templates/clusterrole-binding-rbac.yaml:4:\n (approximate error location; error nearby after) error calling parser: did not find expected key character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmorOperator/templates/clusterrole-binding-rbac.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/secrets.yaml:1:\n (approximate error location; error nearby after) error calling parser: did not find expected node content character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/secrets.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmorOperator/templates/deployment.yaml:23:\n (approximate error location; error nearby after) error calling parser: could not find expected ':' character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmorOperator/templates/deployment.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmor/templates/service.yaml:1:\n (approximate error location; error nearby after) error calling parser: did not find expected node content character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmor/templates/service.yaml",
            "type": "Other syntax error"
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line KubeArmor/BPF/probe.bpf.c:16:\n `, 1 << 24` was unexpected",
            "path": "KubeArmor/BPF/probe.bpf.c",
            "spans": [
                {
                    "end": {
                        "col": 30,
                        "line": 16,
                        "offset": 9
                    },
                    "file": "KubeArmor/BPF/probe.bpf.c",
                    "start": {
                        "col": 21,
                        "line": 16,
                        "offset": 0
                    }
                },
                {
                    "end": {
                        "col": 20,
                        "line": 20,
                        "offset": 6
                    },
                    "file": "KubeArmor/BPF/probe.bpf.c",
                    "start": {
                        "col": 14,
                        "line": 20,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 30,
                            "line": 16,
                            "offset": 9
                        },
                        "path": "KubeArmor/BPF/probe.bpf.c",
                        "start": {
                            "col": 21,
                            "line": 16,
                            "offset": 0
                        }
                    },
                    {
                        "end": {
                            "col": 20,
                            "line": 20,
                            "offset": 6
                        },
                        "path": "KubeArmor/BPF/probe.bpf.c",
                        "start": {
                            "col": 14,
                            "line": 20,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 3,
            "level": "warn",
            "message": "Syntax error at line KubeArmor/BPF/throttling.h:20:\n `, 256` was unexpected",
            "path": "KubeArmor/BPF/throttling.h",
            "spans": [
                {
                    "end": {
                        "col": 26,
                        "line": 20,
                        "offset": 5
                    },
                    "file": "KubeArmor/BPF/throttling.h",
                    "start": {
                        "col": 21,
                        "line": 20,
                        "offset": 0
                    }
                }
            ],
            "type": [
                "PartialParsing",
                [
                    {
                        "end": {
                            "col": 26,
                            "line": 20,
                            "offset": 5
                        },
                        "path": "KubeArmor/BPF/throttling.h",
                        "start": {
                            "col": 21,
                            "line": 20,
                            "offset": 0
                        }
                    }
                ]
            ]
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Other syntax error at line deployments/helm/KubeArmorOperator/templates/ka-config.yaml:1:\n (approximate error location; error nearby after) error calling parser: did not find expected node content character 0 position 0 returned: 0",
            "path": "deployments/helm/KubeArmorOperator/templates/ka-config.yaml",
            "type": "Other syntax error"
        }
    ],
    "interfile_languages_used": [],
    "paths": {
        "scanned": [
            ".dockerignore",
            ".gitbook/assets/KA-EKS-architecture.png",
            ".gitbook/assets/after_pull_request.png",
            ".gitbook/assets/app-behavior.png",
            ".gitbook/assets/app-behavior2.png",
            ".gitbook/assets/bpf-lsm.png",
            ".gitbook/assets/cncf-sandbox.png",
            ".gitbook/assets/commit_ahead.png",
            ".gitbook/assets/differentiation.png",
            ".gitbook/assets/fork_button.png",
            ".gitbook/assets/fork_screen.png",
            ".gitbook/assets/forked_repo.png",
            ".gitbook/assets/harden-workloads.png",
            ".gitbook/assets/kubearmor-tls-arch-overview.png",
            ".gitbook/assets/kubearmor_overview.png",
            ".gitbook/assets/kubearmorhostpolicy-spec-diagram.pdf",
            ".gitbook/assets/kubearmorpolicy-spec-diagram.pdf",
            ".gitbook/assets/logo.png",
            ".gitbook/assets/multi-cloud.png",
            ".gitbook/assets/multiubuntu.png",
            ".gitbook/assets/network-segmentation.png",
            ".gitbook/assets/open_pull_request.png",
            ".gitbook/assets/pod security context.png",
            ".gitbook/assets/policy_action_conflict.png",
            ".gitbook/assets/post-attack-mitigation.png",
            ".gitbook/assets/zero-trust.png",
            ".github/ISSUE_TEMPLATE/bug_report.md",
            ".github/ISSUE_TEMPLATE/feature-request-enhancement.md",
            ".github/actions/marketplace/action.yml",
            ".github/pull_request_template.md",
            ".github/workflows/ci-latest-release.yml",
            ".github/workflows/ci-marketplace-release.yml",
            ".github/workflows/ci-merge-coverage.yaml",
            ".github/workflows/ci-operator-release.yaml",
            ".github/workflows/ci-stable-release.yml",
            ".github/workflows/ci-systemd-release.yml",
            ".github/workflows/ci-test-controllers.yml",
            ".github/workflows/ci-test-ginkgo.yml",
            ".github/workflows/ci-test-go.yml",
            ".github/workflows/ci-test-helm-charts.yml",
            ".github/workflows/ci-test-operator.yaml",
            ".github/workflows/ci-test-systemd.yml",
            ".github/workflows/ci-test-ubi-image.yml",
            ".github/workflows/cleanup.sh",
            ".github/workflows/codeql.yml",
            ".github/workflows/helm-validate-values.sh",
            ".github/workflows/install-k3s.sh",
            ".github/workflows/install-libbpf.sh",
            ".github/workflows/install-llvm.sh",
            ".github/workflows/scorecard.yml",
            ".gitignore",
            ".gitmodules",
            ".licenserc.yaml",
            "ADOPTERS.md",
            "CODEOWNERS",
            "CODE_OF_CONDUCT.md",
            "CONTRIBUTING.md",
            "Dockerfile",
            "Dockerfile.init",
            "GOVERNANCE.md",
            "KubeArmor/.goreleaser.yaml",
            "KubeArmor/BPF/Makefile",
            "KubeArmor/BPF/Makefile.vars",
            "KubeArmor/BPF/enforcer.bpf.c",
            "KubeArmor/BPF/enforcer_path.bpf.c",
            "KubeArmor/BPF/probe.bpf.c",
            "KubeArmor/BPF/shared.h",
            "KubeArmor/BPF/syscalls.h",
            "KubeArmor/BPF/system_monitor.c",
            "KubeArmor/BPF/throttling.h",
            "KubeArmor/BPF/vmlinux_macro.h",
            "KubeArmor/Makefile",
            "KubeArmor/cert/cert.go",
            "KubeArmor/cert/certloader.go",
            "KubeArmor/cert/tls.go",
            "KubeArmor/common/bpffs.go",
            "KubeArmor/common/common.go",
            "KubeArmor/config/config.go",
            "KubeArmor/core/containerdHandler.go",
            "KubeArmor/core/crioHandler.go",
            "KubeArmor/core/dockerHandler.go",
            "KubeArmor/core/k8sHandler.go",
            "KubeArmor/core/karmorprobedata.go",
            "KubeArmor/core/kubeArmor.go",
            "KubeArmor/core/kubeUpdate.go",
            "KubeArmor/core/unorchestratedUpdates.go",
            "KubeArmor/enforcer/SELinuxEnforcer.go",
            "KubeArmor/enforcer/SELinuxHostProfile.go",
            "KubeArmor/enforcer/appArmorEnforcer.go",
            "KubeArmor/enforcer/appArmorProfile.go",
            "KubeArmor/enforcer/appArmorTemplate.go",
            "KubeArmor/enforcer/apparmorContainerProfile.go",
            "KubeArmor/enforcer/bpflsm/enforcer.go",
            "KubeArmor/enforcer/bpflsm/enforcer_bpfeb.go",
            "KubeArmor/enforcer/bpflsm/enforcer_bpfeb.o",
            "KubeArmor/enforcer/bpflsm/enforcer_bpfel.go",
            "KubeArmor/enforcer/bpflsm/enforcer_bpfel.o",
            "KubeArmor/enforcer/bpflsm/enforcer_path_bpfeb.go",
            "KubeArmor/enforcer/bpflsm/enforcer_path_bpfeb.o",
            "KubeArmor/enforcer/bpflsm/enforcer_path_bpfel.go",
            "KubeArmor/enforcer/bpflsm/enforcer_path_bpfel.o",
            "KubeArmor/enforcer/bpflsm/hostRulesHandling.go",
            "KubeArmor/enforcer/bpflsm/mapHelpers.go",
            "KubeArmor/enforcer/bpflsm/rulesHandling.go",
            "KubeArmor/enforcer/runtimeEnforcer.go",
            "KubeArmor/feeder/feeder.go",
            "KubeArmor/feeder/logServer.go",
            "KubeArmor/feeder/policyMatcher.go",
            "KubeArmor/fuzz/build.sh",
            "KubeArmor/go.mod",
            "KubeArmor/go.sum",
            "KubeArmor/kvmAgent/kvmAgent.go",
            "KubeArmor/log/logger.go",
            "KubeArmor/main.go",
            "KubeArmor/monitor/logUpdate.go",
            "KubeArmor/monitor/processTree.go",
            "KubeArmor/monitor/syscallParser.go",
            "KubeArmor/monitor/syscalls_amd64.go",
            "KubeArmor/monitor/syscalls_arm64.go",
            "KubeArmor/monitor/systemMonitor.go",
            "KubeArmor/packaging/kubearmor.service",
            "KubeArmor/packaging/kubearmor.yaml",
            "KubeArmor/packaging/post-install.sh",
            "KubeArmor/policy/policy.go",
            "KubeArmor/state/data.go",
            "KubeArmor/state/stateAgent.go",
            "KubeArmor/templates/default/common_macro",
            "KubeArmor/templates/default/common_template",
            "KubeArmor/templates/default/karmor_global",
            "KubeArmor/templates/default/karmor_macro",
            "KubeArmor/templates/default/karmor_template",
            "KubeArmor/templates/install.sh",
            "KubeArmor/templates/uninstall.sh",
            "KubeArmor/types/types.go",
            "KubeArmor/utils/bpflsmprobe/probe.go",
            "KubeArmor/utils/bpflsmprobe/probe_bpfeb.go",
            "KubeArmor/utils/bpflsmprobe/probe_bpfeb.o",
            "KubeArmor/utils/bpflsmprobe/probe_bpfel.go",
            "KubeArmor/utils/bpflsmprobe/probe_bpfel.o",
            "LICENSE",
            "MAINTAINERS.md",
            "README.md",
            "SECURITY.md",
            "STABLE-RELEASE",
            "SUMMARY.md",
            "codecov.yml",
            "contribution/Killercoda-Kubearmor/k3s_installation_killercoda.sh",
            "contribution/Killercoda-Kubearmor/kubearmor-installation-view.sh",
            "contribution/KubeArmor Design.pdf",
            "contribution/contribution_guide.md",
            "contribution/development_guide.md",
            "contribution/k3s/README.md",
            "contribution/k3s/install_k3s.sh",
            "contribution/license/add-license-header.sh",
            "contribution/license/license.header",
            "contribution/local-registry/docker-registry.sh",
            "contribution/microk8s/README.md",
            "contribution/microk8s/install_microk8s.sh",
            "contribution/minikube/README.md",
            "contribution/minikube/install_minikube.sh",
            "contribution/minikube/install_virtualbox.sh",
            "contribution/minikube/start_minikube.sh",
            "contribution/self-managed-k8s/README.md",
            "contribution/self-managed-k8s/containerd/install_containerd.sh",
            "contribution/self-managed-k8s/crio/install_crio.sh",
            "contribution/self-managed-k8s/crio/uninstall_crio.sh",
            "contribution/self-managed-k8s/docker/install_docker.sh",
            "contribution/self-managed-k8s/docker/reset_docker.sh",
            "contribution/self-managed-k8s/docker/uninstall_docker.sh",
            "contribution/self-managed-k8s/k8s/activate_br_netfilter.sh",
            "contribution/self-managed-k8s/k8s/initialize_kubernetes.sh",
            "contribution/self-managed-k8s/k8s/install_kubernetes.sh",
            "contribution/self-managed-k8s/k8s/reset_kubernetes_cluster.sh",
            "contribution/self-managed-k8s/setup.sh",
            "contribution/self-managed-k8s-selinux/README.md",
            "contribution/self-managed-k8s-selinux/crio/install_crio.sh",
            "contribution/self-managed-k8s-selinux/crio/uninstall_crio.sh",
            "contribution/self-managed-k8s-selinux/docker/install_docker.sh",
            "contribution/self-managed-k8s-selinux/docker/reset_docker.sh",
            "contribution/self-managed-k8s-selinux/docker/uninstall_docker.sh",
            "contribution/self-managed-k8s-selinux/enable_selinux.sh",
            "contribution/self-managed-k8s-selinux/k8s/initialize_kubernetes.sh",
            "contribution/self-managed-k8s-selinux/k8s/install_kubernetes.sh",
            "contribution/self-managed-k8s-selinux/k8s/reset_kubernetes_cluster.sh",
            "contribution/self-managed-k8s-selinux/setup.sh",
            "contribution/testing_guide.md",
            "contribution/vagrant/README.md",
            "contribution/vagrant/Vagrantfile",
            "contribution/vagrant/dist-upgrade.sh",
            "contribution/vagrant/setup.sh",
            "contribution/vagrant/time-update.sh",
            "deployments/CRD/KubeArmorClusterPolicy.yaml",
            "deployments/CRD/KubeArmorHostPolicy.yaml",
            "deployments/CRD/KubeArmorPolicy.yaml",
            "deployments/Makefile",
            "deployments/README.md",
            "deployments/controller/cert-manager.yaml",
            "deployments/controller/install-kubearmor-controller.sh",
            "deployments/controller/ka-updater-kured.yaml",
            "deployments/controller/kubearmor-controller-mutating-webhook-config.yaml",
            "deployments/controller/updaterscript.yaml",
            "deployments/get/defaults.go",
            "deployments/get/objects.go",
            "deployments/go.mod",
            "deployments/go.sum",
            "deployments/helm/KubeArmor/Chart.yaml",
            "deployments/helm/KubeArmor/README.md",
            "deployments/helm/KubeArmor/templates/RBAC/bindings.yaml",
            "deployments/helm/KubeArmor/templates/RBAC/roles.yaml",
            "deployments/helm/KubeArmor/templates/configmap.yaml",
            "deployments/helm/KubeArmor/templates/crds/csp.yaml",
            "deployments/helm/KubeArmor/templates/crds/hsp.yaml",
            "deployments/helm/KubeArmor/templates/crds/ksp.yaml",
            "deployments/helm/KubeArmor/templates/daemonset.yaml",
            "deployments/helm/KubeArmor/templates/deployment.yaml",
            "deployments/helm/KubeArmor/templates/kubearmor-tls-secrets.yaml",
            "deployments/helm/KubeArmor/templates/secrets.yaml",
            "deployments/helm/KubeArmor/templates/service.yaml",
            "deployments/helm/KubeArmor/templates/serviceaccount.yaml",
            "deployments/helm/KubeArmor/values.yaml",
            "deployments/helm/KubeArmorOperator/.helmignore",
            "deployments/helm/KubeArmorOperator/Chart.yaml",
            "deployments/helm/KubeArmorOperator/README.md",
            "deployments/helm/KubeArmorOperator/crds/operator.kubearmor.com_kubearmorconfigs.yaml",
            "deployments/helm/KubeArmorOperator/templates/clusterrole-binding-rbac.yaml",
            "deployments/helm/KubeArmorOperator/templates/clusterrole-rbac.yaml",
            "deployments/helm/KubeArmorOperator/templates/deployment.yaml",
            "deployments/helm/KubeArmorOperator/templates/helpers.tpl",
            "deployments/helm/KubeArmorOperator/templates/ka-config.yaml",
            "deployments/helm/KubeArmorOperator/templates/serviceaccount.yaml",
            "deployments/helm/KubeArmorOperator/values.yaml",
            "deployments/main.go",
            "deployments/operator/operator.yaml",
            "examples/README.md",
            "examples/host-security-policies/hsp-kubearmor-dev-file-dir-allow-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-file-dir-block-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-file-path-allow-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-file-path-audit.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-file-path-block-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-file-path-block.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-proc-path-allow-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-proc-path-block-fromSource.yaml",
            "examples/host-security-policies/hsp-kubearmor-dev-proc-path-block.yaml",
            "examples/kubearmor_containerpolicy.yaml",
            "examples/multiubuntu/multiubuntu-deployment.yaml",
            "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "examples/multiubuntu/probe",
            "examples/multiubuntu/probe_multiubuntu",
            "examples/multiubuntu/security-policies/ksp-group-1-proc-path-block-from-source.yaml",
            "examples/multiubuntu/security-policies/ksp-group-1-proc-path-block.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-owner-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-owner-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-file-path-owner-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-group-2-proc-path-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-cap-net-raw-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-path-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-path-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-owner-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-owner-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-owner-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-file-pattern-owner-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-net-raw-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-net-tcp-from-source-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-1-proc-dir-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-owner-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-owner-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-owner-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-owner-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-owner-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-owner-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-owner-readonly-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-file-dir-recursive-owner-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-2-proc-dir-recursive-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-dir-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-path-owner-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-path-owner-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-file-path-owner-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-proc-dir-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-proc-path-owner-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-3-proc-path-owner-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-dir-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-dir-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-dir-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-audit-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-4-file-path-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-owner-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-owner-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-owner-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-readonly-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-dir-recursive-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-path-owner-readonly-allow-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-path-owner-readonly-allow.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-path-owner-readonly-audit.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-path-owner-readonly-block-from-source-path.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-file-path-owner-readonly-block.yaml",
            "examples/multiubuntu/security-policies/ksp-ubuntu-5-net-icmp-audit.yaml",
            "examples/multiubuntu/security-policies/nsp-group-1-file-dir-recursive-block.yaml",
            "examples/multiubuntu.md",
            "examples/nginx-csp/cluster-security-policies/csp-in-operator-block-file-access.yaml",
            "examples/nginx-csp/cluster-security-policies/csp-in-operator-block-process.yaml",
            "examples/nginx-csp/cluster-security-policies/csp-not-in-operator-block-file-access.yaml",
            "examples/nginx-csp/cluster-security-policies/csp-not-in-operator-block-process.yaml",
            "examples/nginx-csp/nginx-nginx1-deployment.yaml",
            "examples/nginx-csp/nginx-nginx2-deployment.yaml",
            "examples/sock-shop/original/sock-shop-deployment.yaml",
            "examples/sock-shop/sock-shop-deployment.yaml",
            "examples/sock-shop.md",
            "examples/vagrant-selinux/copy.sh",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-dir-allow-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-dir-block-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-path-allow-fromSource-readOnly.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-path-allow-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-path-block-fromSource-readOnly.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-path-block-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-file-path-block.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-proc-path-allow-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-proc-path-block-fromSource.yaml",
            "examples/vagrant-selinux/host-policies/hsp-kubearmor-dev-proc-path-block.yaml",
            "examples/vagrant-selinux/selinux-test/file.txt",
            "examples/vagrant-selinux/selinux-test/matchDir/subdir/test6",
            "examples/vagrant-selinux/selinux-test/matchDir/test1",
            "examples/vagrant-selinux/selinux-test/matchDir/test2",
            "examples/vagrant-selinux/selinux-test/matchDir/test3",
            "examples/vagrant-selinux/selinux-test/matchDir/test4",
            "examples/vagrant-selinux/selinux-test/read",
            "examples/vagrant-selinux/selinux-test/read.c",
            "examples/vagrant-selinux/selinux-test/readwrite",
            "examples/vagrant-selinux/selinux-test/readwrite.c",
            "examples/vagrant-selinux/selinux-test/write",
            "examples/vagrant-selinux/selinux-test/write.c",
            "examples/vagrant-selinux.md",
            "examples/wordpress-mysql/original/wordpress-mysql-deployment.yaml",
            "examples/wordpress-mysql/security-policies/ksp-mysql-audit-dir.yaml",
            "examples/wordpress-mysql/security-policies/ksp-wordpress-block-config.yaml",
            "examples/wordpress-mysql/security-policies/ksp-wordpress-block-process.yaml",
            "examples/wordpress-mysql/security-policies/ksp-wordpress-block-sa.yaml",
            "examples/wordpress-mysql/wordpress-mysql-deployment.yaml",
            "examples/wordpress-mysql.md",
            "getting-started/FAQ.md",
            "getting-started/alert_throttling.md",
            "getting-started/cluster_security_policy_examples.md",
            "getting-started/cluster_security_policy_specification.md",
            "getting-started/consideration_in_policy_action.md",
            "getting-started/default_posture.md",
            "getting-started/deployment_guide.md",
            "getting-started/deployment_models.md",
            "getting-started/differentiation.md",
            "getting-started/hardening-report.html",
            "getting-started/hardening_guide.md",
            "getting-started/host_security_policy_examples.md",
            "getting-started/host_security_policy_specification.md",
            "getting-started/kubearmor-events.md",
            "getting-started/kubearmor-security-enhancements.md",
            "getting-started/kubearmor_apparmor_implementation_overview.md",
            "getting-started/kubearmor_visibility.md",
            "getting-started/kubearmor_vm.md",
            "getting-started/least_permissive_access.md",
            "getting-started/network_segmentation.md",
            "getting-started/resources/Apparmor-domain-transition.png",
            "getting-started/resources/KubeArmorMeetup.ics",
            "getting-started/resources/kubearmor-Apparmor-internals.png",
            "getting-started/security_policy_examples.md",
            "getting-started/security_policy_specification.md",
            "getting-started/support_matrix.md",
            "getting-started/use-cases/README.md",
            "getting-started/use-cases/generate-cards.sh",
            "getting-started/use-cases/hardening.md",
            "getting-started/use-cases/hardening.template",
            "getting-started/use-cases/res/admin-tools.md",
            "getting-started/use-cases/res/admin-tools.yaml",
            "getting-started/use-cases/res/conf-data.md",
            "getting-started/use-cases/res/conf-data.yaml",
            "getting-started/use-cases/res/db-access.md",
            "getting-started/use-cases/res/db-access.yaml",
            "getting-started/use-cases/res/disc-tools.md",
            "getting-started/use-cases/res/disc-tools.yaml",
            "getting-started/use-cases/res/ens-tls.md",
            "getting-started/use-cases/res/file-copy.md",
            "getting-started/use-cases/res/file-copy.yaml",
            "getting-started/use-cases/res/fim-alert.md",
            "getting-started/use-cases/res/fim.yaml",
            "getting-started/use-cases/res/icmp-con.md",
            "getting-started/use-cases/res/icmp-con.yaml",
            "getting-started/use-cases/res/log-del.md",
            "getting-started/use-cases/res/log-del.yaml",
            "getting-started/use-cases/res/net-acc.md",
            "getting-started/use-cases/res/net-acc.yaml",
            "getting-started/use-cases/res/pkg-tools.md",
            "getting-started/use-cases/res/pkg-tools.yaml",
            "getting-started/use-cases/res/res-cap.md",
            "getting-started/use-cases/res/res-cap.yaml",
            "getting-started/use-cases/res/svc-act-token-alert.md",
            "getting-started/use-cases/res/svc-act-token.yaml",
            "getting-started/use-cases/res/tmp-noexec.md",
            "getting-started/use-cases/res/tmp-noexec.yaml",
            "getting-started/use-cases/res/trusted-cert-bundle.md",
            "getting-started/use-cases/res/trusted-cert-bundle.yaml",
            "getting-started/use-cases.md",
            "getting-started/workload_visibility.md",
            "pkg/KubeArmorController/.dockerignore",
            "pkg/KubeArmorController/.gitignore",
            "pkg/KubeArmorController/Dockerfile",
            "pkg/KubeArmorController/LICENSE",
            "pkg/KubeArmorController/Makefile",
            "pkg/KubeArmorController/PROJECT",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/common.go",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/groupversion_info.go",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/kubearmorclusterpolicy_types.go",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/kubearmorhostpolicy_types.go",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/kubearmorpolicy_types.go",
            "pkg/KubeArmorController/api/security.kubearmor.com/v1/zz_generated.deepcopy.go",
            "pkg/KubeArmorController/client/clientset/versioned/clientset.go",
            "pkg/KubeArmorController/client/clientset/versioned/doc.go",
            "pkg/KubeArmorController/client/clientset/versioned/fake/clientset_generated.go",
            "pkg/KubeArmorController/client/clientset/versioned/fake/doc.go",
            "pkg/KubeArmorController/client/clientset/versioned/fake/register.go",
            "pkg/KubeArmorController/client/clientset/versioned/scheme/doc.go",
            "pkg/KubeArmorController/client/clientset/versioned/scheme/register.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/doc.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/fake/doc.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/fake/fake_kubearmorclusterpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/fake/fake_kubearmorhostpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/fake/fake_kubearmorpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/fake/fake_security.kubearmor.com_client.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/generated_expansion.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/kubearmorclusterpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/kubearmorhostpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/kubearmorpolicy.go",
            "pkg/KubeArmorController/client/clientset/versioned/typed/security.kubearmor.com/v1/security.kubearmor.com_client.go",
            "pkg/KubeArmorController/client/informers/externalversions/factory.go",
            "pkg/KubeArmorController/client/informers/externalversions/generic.go",
            "pkg/KubeArmorController/client/informers/externalversions/internalinterfaces/factory_interfaces.go",
            "pkg/KubeArmorController/client/informers/externalversions/security.kubearmor.com/interface.go",
            "pkg/KubeArmorController/client/informers/externalversions/security.kubearmor.com/v1/interface.go",
            "pkg/KubeArmorController/client/informers/externalversions/security.kubearmor.com/v1/kubearmorclusterpolicy.go",
            "pkg/KubeArmorController/client/informers/externalversions/security.kubearmor.com/v1/kubearmorhostpolicy.go",
            "pkg/KubeArmorController/client/informers/externalversions/security.kubearmor.com/v1/kubearmorpolicy.go",
            "pkg/KubeArmorController/client/listers/security.kubearmor.com/v1/expansion_generated.go",
            "pkg/KubeArmorController/client/listers/security.kubearmor.com/v1/kubearmorclusterpolicy.go",
            "pkg/KubeArmorController/client/listers/security.kubearmor.com/v1/kubearmorhostpolicy.go",
            "pkg/KubeArmorController/client/listers/security.kubearmor.com/v1/kubearmorpolicy.go",
            "pkg/KubeArmorController/common/common.go",
            "pkg/KubeArmorController/config/certmanager/certificate.yaml",
            "pkg/KubeArmorController/config/certmanager/kustomization.yaml",
            "pkg/KubeArmorController/config/certmanager/kustomizeconfig.yaml",
            "pkg/KubeArmorController/config/crd/bases/security.kubearmor.com_kubearmorclusterpolicies.yaml",
            "pkg/KubeArmorController/config/crd/bases/security.kubearmor.com_kubearmorhostpolicies.yaml",
            "pkg/KubeArmorController/config/crd/bases/security.kubearmor.com_kubearmorpolicies.yaml",
            "pkg/KubeArmorController/config/crd/kustomization.yaml",
            "pkg/KubeArmorController/config/crd/kustomizeconfig.yaml",
            "pkg/KubeArmorController/config/crd/patches/cainjection_in_kubearmorhostpolicies.yaml",
            "pkg/KubeArmorController/config/crd/patches/cainjection_in_kubearmorpolicies.yaml",
            "pkg/KubeArmorController/config/crd/patches/webhook_in_kubearmorhostpolicies.yaml",
            "pkg/KubeArmorController/config/crd/patches/webhook_in_kubearmorpolicies.yaml",
            "pkg/KubeArmorController/config/default/kustomization.yaml",
            "pkg/KubeArmorController/config/default/manager_auth_proxy_patch.yaml",
            "pkg/KubeArmorController/config/default/manager_config_patch.yaml",
            "pkg/KubeArmorController/config/default/manager_webhook_patch.yaml",
            "pkg/KubeArmorController/config/default/webhookcainjection_patch.yaml",
            "pkg/KubeArmorController/config/manager/controller_manager_config.yaml",
            "pkg/KubeArmorController/config/manager/kustomization.yaml",
            "pkg/KubeArmorController/config/manager/manager.yaml",
            "pkg/KubeArmorController/config/prometheus/kustomization.yaml",
            "pkg/KubeArmorController/config/prometheus/monitor.yaml",
            "pkg/KubeArmorController/config/rbac/auth_proxy_client_clusterrole.yaml",
            "pkg/KubeArmorController/config/rbac/auth_proxy_role.yaml",
            "pkg/KubeArmorController/config/rbac/auth_proxy_role_binding.yaml",
            "pkg/KubeArmorController/config/rbac/auth_proxy_service.yaml",
            "pkg/KubeArmorController/config/rbac/kubearmorhostpolicy_editor_role.yaml",
            "pkg/KubeArmorController/config/rbac/kubearmorhostpolicy_viewer_role.yaml",
            "pkg/KubeArmorController/config/rbac/kubearmorpolicy_editor_role.yaml",
            "pkg/KubeArmorController/config/rbac/kubearmorpolicy_viewer_role.yaml",
            "pkg/KubeArmorController/config/rbac/kustomization.yaml",
            "pkg/KubeArmorController/config/rbac/leader_election_role.yaml",
            "pkg/KubeArmorController/config/rbac/leader_election_role_binding.yaml",
            "pkg/KubeArmorController/config/rbac/role.yaml",
            "pkg/KubeArmorController/config/rbac/role_binding.yaml",
            "pkg/KubeArmorController/config/rbac/service_account.yaml",
            "pkg/KubeArmorController/config/samples/security_v1_kubearmorhostpolicy.yaml",
            "pkg/KubeArmorController/config/samples/security_v1_kubearmorpolicy.yaml",
            "pkg/KubeArmorController/config/webhook/kustomization.yaml",
            "pkg/KubeArmorController/config/webhook/kustomizeconfig.yaml",
            "pkg/KubeArmorController/config/webhook/manifests.yaml",
            "pkg/KubeArmorController/config/webhook/service.yaml",
            "pkg/KubeArmorController/controllers/kubearmorclusterpolicy_controller.go",
            "pkg/KubeArmorController/controllers/kubearmorhostpolicy_controller.go",
            "pkg/KubeArmorController/controllers/kubearmorpolicy_controller.go",
            "pkg/KubeArmorController/controllers/podrefresh_controller.go",
            "pkg/KubeArmorController/crd/KubeArmorClusterPolicy.yaml",
            "pkg/KubeArmorController/crd/KubeArmorHostPolicy.yaml",
            "pkg/KubeArmorController/crd/KubeArmorPolicy.yaml",
            "pkg/KubeArmorController/crd/crd.go",
            "pkg/KubeArmorController/go.mod",
            "pkg/KubeArmorController/go.sum",
            "pkg/KubeArmorController/hack/boilerplate.go.txt",
            "pkg/KubeArmorController/handlers/pod_mutation.go",
            "pkg/KubeArmorController/informer/multienforcer_controller.go",
            "pkg/KubeArmorController/informer/nodewatcher.go",
            "pkg/KubeArmorController/main.go",
            "pkg/KubeArmorController/types/types.go",
            "pkg/KubeArmorOperator/Dockerfile",
            "pkg/KubeArmorOperator/Makefile",
            "pkg/KubeArmorOperator/PROJECT",
            "pkg/KubeArmorOperator/api/operator.kubearmor.com/v1/common.go",
            "pkg/KubeArmorOperator/api/operator.kubearmor.com/v1/groupversion_info.go",
            "pkg/KubeArmorOperator/api/operator.kubearmor.com/v1/kubearmorconfig_types.go",
            "pkg/KubeArmorOperator/api/operator.kubearmor.com/v1/zz_generated.deepcopy.go",
            "pkg/KubeArmorOperator/bundle.Dockerfile",
            "pkg/KubeArmorOperator/cert/certgen.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/clientset.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/doc.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/fake/clientset_generated.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/fake/doc.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/fake/register.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/scheme/doc.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/scheme/register.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/doc.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/fake/doc.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/fake/fake_kubearmorconfig.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/fake/fake_operator.kubearmor.com_client.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/generated_expansion.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/kubearmorconfig.go",
            "pkg/KubeArmorOperator/client/clientset/versioned/typed/operator.kubearmor.com/v1/operator.kubearmor.com_client.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/factory.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/generic.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/internalinterfaces/factory_interfaces.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/operator.kubearmor.com/interface.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/operator.kubearmor.com/v1/interface.go",
            "pkg/KubeArmorOperator/client/informers/externalversions/operator.kubearmor.com/v1/kubearmorconfig.go",
            "pkg/KubeArmorOperator/client/listers/operator.kubearmor.com/v1/expansion_generated.go",
            "pkg/KubeArmorOperator/client/listers/operator.kubearmor.com/v1/kubearmorconfig.go",
            "pkg/KubeArmorOperator/cmd/operator/main.go",
            "pkg/KubeArmorOperator/cmd/snitch-cmd/main.go",
            "pkg/KubeArmorOperator/common/defaults.go",
            "pkg/KubeArmorOperator/common/tls.go",
            "pkg/KubeArmorOperator/config/crd/bases/operator.kubearmor.com_kubearmorconfigs.yaml",
            "pkg/KubeArmorOperator/config/crd/kustomization.yaml",
            "pkg/KubeArmorOperator/config/crd/kustomizeconfig.yaml",
            "pkg/KubeArmorOperator/config/crd/patches/cainjection_in_kubearmorconfigs.yaml",
            "pkg/KubeArmorOperator/config/crd/patches/webhook_in_kubearmorconfigs.yaml",
            "pkg/KubeArmorOperator/config/default/kustomization.yaml",
            "pkg/KubeArmorOperator/config/operator/deployment.yaml",
            "pkg/KubeArmorOperator/config/operator/kustomization.yaml",
            "pkg/KubeArmorOperator/config/rbac/clusterrole.yaml",
            "pkg/KubeArmorOperator/config/rbac/clusterrolebinding.yaml",
            "pkg/KubeArmorOperator/config/rbac/kubearmor-scc.yaml",
            "pkg/KubeArmorOperator/config/rbac/kustomization.yaml",
            "pkg/KubeArmorOperator/config/rbac/service-account.yaml",
            "pkg/KubeArmorOperator/config/samples/kubearmor-coverage.yaml",
            "pkg/KubeArmorOperator/config/samples/kubearmor-test.yaml",
            "pkg/KubeArmorOperator/config/samples/kubearmor-ubi-test.yaml",
            "pkg/KubeArmorOperator/config/samples/kustomization.yaml",
            "pkg/KubeArmorOperator/config/samples/operator_v1_kubearmorconfig.yaml",
            "pkg/KubeArmorOperator/config/samples/sample-config.yml",
            "pkg/KubeArmorOperator/enforcer/enforcer.go",
            "pkg/KubeArmorOperator/go.mod",
            "pkg/KubeArmorOperator/go.sum",
            "pkg/KubeArmorOperator/hack/boilerplate.go.txt",
            "pkg/KubeArmorOperator/internal/controller/cluster.go",
            "pkg/KubeArmorOperator/internal/controller/resources.go",
            "pkg/KubeArmorOperator/k8s/client.go",
            "pkg/KubeArmorOperator/runtime/runtime.go",
            "pkg/KubeArmorOperator/seccomp/defaults.go",
            "pkg/KubeArmorOperator/seccomp/seccomp.go",
            "pkg/README.md",
            "protobuf/Makefile",
            "protobuf/go.mod",
            "protobuf/go.sum",
            "protobuf/kubearmor.pb.go",
            "protobuf/kubearmor.proto",
            "protobuf/kubearmor_grpc.pb.go",
            "protobuf/kvm.pb.go",
            "protobuf/kvm.proto",
            "protobuf/kvm_grpc.pb.go",
            "protobuf/policy.pb.go",
            "protobuf/policy.proto",
            "protobuf/policy_grpc.pb.go",
            "protobuf/state.pb.go",
            "protobuf/state.proto",
            "protobuf/state_grpc.pb.go",
            "renovate.json"
        ]
    },
    "results": [
        {
            "check_id": "dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
            "end": {
                "col": 36,
                "line": 60,
                "offset": 1650
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "06b4133a51dae62935df3ff2b0ef76fb378778f421af29ec04f8304ad8c9527c1fadc39d2d304c1ac39f1423be711dcf02f0b39c043aea48c7c52c5ea6a4c594_0",
                "fix": "USER non-root\nENTRYPOINT [\"/KubeArmor/kubearmor\"]",
                "is_ignored": false,
                "lines": "ENTRYPOINT [\"/KubeArmor/kubearmor\"]",
                "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A04_2021-Insecure_Design"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47272,
                            "rule_id": "ReUW9E",
                            "rv_id": 928285,
                            "url": "https://semgrep.dev/playground/r/WrTYvkG/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
                            "version_id": "WrTYvkG"
                        }
                    },
                    "shortlink": "https://sg.run/k281",
                    "source": "https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "dockerfile"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$...VARS": {
                        "abstract_content": "[\"/KubeArmor/kubearmor\"]",
                        "end": {
                            "col": 36,
                            "line": 60,
                            "offset": 1650
                        },
                        "start": {
                            "col": 12,
                            "line": 60,
                            "offset": 1626
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "Dockerfile",
            "start": {
                "col": 1,
                "line": 60,
                "offset": 1615
            }
        },
        {
            "check_id": "dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
            "end": {
                "col": 41,
                "line": 65,
                "offset": 1821
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "da45c3ade489a40bb8f2ab00ee659144c991e9674a34b0bc13699378d490acc2262f65e95e7dc33eaada1bc82e13728fd33d1272d8be96319e74bc040a969952_0",
                "fix": "USER non-root\nENTRYPOINT [\"/KubeArmor/kubearmor-test\"]",
                "is_ignored": false,
                "lines": "ENTRYPOINT [\"/KubeArmor/kubearmor-test\"]",
                "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A04_2021-Insecure_Design"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47272,
                            "rule_id": "ReUW9E",
                            "rv_id": 928285,
                            "url": "https://semgrep.dev/playground/r/WrTYvkG/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
                            "version_id": "WrTYvkG"
                        }
                    },
                    "shortlink": "https://sg.run/k281",
                    "source": "https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "dockerfile"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$...VARS": {
                        "abstract_content": "[\"/KubeArmor/kubearmor-test\"]",
                        "end": {
                            "col": 41,
                            "line": 65,
                            "offset": 1821
                        },
                        "start": {
                            "col": 12,
                            "line": 65,
                            "offset": 1792
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "Dockerfile",
            "start": {
                "col": 1,
                "line": 65,
                "offset": 1781
            }
        },
        {
            "check_id": "cpp.lang.correctness.sizeof-pointer-type.sizeof-pointer-type",
            "end": {
                "col": 38,
                "line": 811,
                "offset": 20160
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "acefec2a6724752c830bd69d0cfbaf3393c9e97549c8e1a65fc08df3f6a0d2af1973355b978fdc0b8b8462a7cdcaf2762c8e792bca4dbbaeb1b14df26130e056_0",
                "is_ignored": false,
                "lines": "    bpf_probe_read(&argp, sizeof(argp), ptr);",
                "message": "Using `sizeof(...)` on a pointer type is error prone and can lead to memory corruption if the incorrect size is used to allocate memory. An explicit length should be used instead of using `sizeof(...)`.",
                "metadata": {
                    "category": "security",
                    "cert": [
                        "ARR01-C",
                        "C",
                        "C++",
                        "L1"
                    ],
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-467: Use of sizeof() on a Pointer Type"
                    ],
                    "display-name": "Use of sizeof() on Pointer Type",
                    "impact": "LOW",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "LOW",
                    "references": [
                        "https://wiki.sei.cmu.edu/confluence/display/c/ARR01-C.+Do+not+apply+the+sizeof+operator+to+a+pointer+when+taking+the+size+of+an+array"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 114753,
                            "rule_id": "pKU1ny1",
                            "rv_id": 923928,
                            "url": "https://semgrep.dev/playground/r/LjTz3zR/cpp.lang.correctness.sizeof-pointer-type.sizeof-pointer-type",
                            "version_id": "LjTz3zR"
                        }
                    },
                    "shortlink": "https://sg.run/WAvRA",
                    "source": "https://semgrep.dev/r/cpp.lang.correctness.sizeof-pointer-type.sizeof-pointer-type",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cpp"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {
                    "$FUN": {
                        "abstract_content": "save_argv",
                        "end": {
                            "col": 37,
                            "line": 808,
                            "offset": 20064
                        },
                        "start": {
                            "col": 28,
                            "line": 808,
                            "offset": 20055
                        }
                    },
                    "$PTR_PARAM": {
                        "abstract_content": "argp",
                        "end": {
                            "col": 38,
                            "line": 811,
                            "offset": 20160
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "NULL",
                            "svalue_end": {
                                "col": 28,
                                "line": 810,
                                "offset": 20121
                            },
                            "svalue_start": {
                                "col": 24,
                                "line": 810,
                                "offset": 20117
                            }
                        },
                        "start": {
                            "col": 34,
                            "line": 811,
                            "offset": 20156
                        }
                    },
                    "$PTR_TY": {
                        "abstract_content": "char",
                        "end": {
                            "col": 15,
                            "line": 810,
                            "offset": 20108
                        },
                        "start": {
                            "col": 11,
                            "line": 810,
                            "offset": 20104
                        }
                    },
                    "$TY": {
                        "abstract_content": "__always_inline",
                        "end": {
                            "col": 23,
                            "line": 808,
                            "offset": 20050
                        },
                        "start": {
                            "col": 8,
                            "line": 808,
                            "offset": 20035
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/BPF/system_monitor.c",
            "start": {
                "col": 27,
                "line": 811,
                "offset": 20149
            }
        },
        {
            "check_id": "go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
            "end": {
                "col": 3,
                "line": 83,
                "offset": 2042
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7ccf6b6a2d2e65a77ab190e4b6159b26f02a55ffeaec80f9cc3821374f7c7aa333dd2a5fffba5e9ac60a47ea96d1ad0fd972cec8a96c80d83284793612aae377_0",
                "fix": "tls.Config{ Certificates: []tls.Certificate{*clientCert},\n            \t\tRootCAs:      caCertPool, MinVersion: tls.VersionTLS13 }",
                "is_ignored": false,
                "lines": "\tconfig := &tls.Config{\n\t\tCertificates: []tls.Certificate{*clientCert},\n\t\tRootCAs:      caCertPool,\n\t}",
                "message": "`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2 is currently used as the minimum when acting as a client, and TLS 1.0 when acting as a server. General purpose web applications should default to TLS 1.3 with all other protocols disabled.  Only where it is known that a web server must support legacy clients with unsupported an insecure browsers (such as Internet Explorer 10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion: tls.VersionTLS13' to the TLS configuration to bump the minimum version to TLS 1.3.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A03:2017 - Sensitive Data Exposure",
                        "A02:2021 - Cryptographic Failures"
                    ],
                    "references": [
                        "https://golang.org/doc/go1.14#crypto/tls",
                        "https://golang.org/pkg/crypto/tls/#:~:text=MinVersion",
                        "https://www.us-cert.gov/ncas/alerts/TA14-290A"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9116,
                            "rule_id": "NbUk4X",
                            "rv_id": 833835,
                            "url": "https://semgrep.dev/playground/r/7ZTx90R/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                            "version_id": "7ZTx90R"
                        }
                    },
                    "shortlink": "https://sg.run/oxEN",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                    "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/tls_config.go",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...CONF": {
                        "abstract_content": "Certificates[]tls Certificate{*clientCert}RootCAs caCertPool",
                        "end": {
                            "col": 27,
                            "line": 82,
                            "offset": 2038
                        },
                        "start": {
                            "col": 3,
                            "line": 81,
                            "offset": 1966
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/cert/tls.go",
            "start": {
                "col": 13,
                "line": 80,
                "offset": 1952
            }
        },
        {
            "check_id": "go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
            "end": {
                "col": 3,
                "line": 98,
                "offset": 2496
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4dffb84576e07256df299c35ad03d9b4c5ab3003edc9d3d2a8bf6f7825ee98b9334a5ce18987b3a4881a464c2244da779f3104fd0cb95ba8a5cbc7bc4e18c4f2_0",
                "fix": "tls.Config{ Certificates: []tls.Certificate{*serverCert},\n            \t\tClientCAs:    caCertPool,\n            \t\tClientAuth:   tls.RequireAndVerifyClientCert, MinVersion: tls.VersionTLS13 }",
                "is_ignored": false,
                "lines": "\tconfig := &tls.Config{\n\t\tCertificates: []tls.Certificate{*serverCert},\n\t\tClientCAs:    caCertPool,\n\t\tClientAuth:   tls.RequireAndVerifyClientCert,\n\t}",
                "message": "`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2 is currently used as the minimum when acting as a client, and TLS 1.0 when acting as a server. General purpose web applications should default to TLS 1.3 with all other protocols disabled.  Only where it is known that a web server must support legacy clients with unsupported an insecure browsers (such as Internet Explorer 10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion: tls.VersionTLS13' to the TLS configuration to bump the minimum version to TLS 1.3.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A03:2017 - Sensitive Data Exposure",
                        "A02:2021 - Cryptographic Failures"
                    ],
                    "references": [
                        "https://golang.org/doc/go1.14#crypto/tls",
                        "https://golang.org/pkg/crypto/tls/#:~:text=MinVersion",
                        "https://www.us-cert.gov/ncas/alerts/TA14-290A"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9116,
                            "rule_id": "NbUk4X",
                            "rv_id": 833835,
                            "url": "https://semgrep.dev/playground/r/7ZTx90R/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                            "version_id": "7ZTx90R"
                        }
                    },
                    "shortlink": "https://sg.run/oxEN",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                    "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/tls_config.go",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...CONF": {
                        "abstract_content": "Certificates[]tls Certificate{*serverCert}ClientCAs caCertPool ClientAuth tls.RequireAndVerifyClientCert",
                        "end": {
                            "col": 47,
                            "line": 97,
                            "offset": 2492
                        },
                        "start": {
                            "col": 3,
                            "line": 95,
                            "offset": 2372
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/cert/tls.go",
            "start": {
                "col": 13,
                "line": 94,
                "offset": 2358
            }
        },
        {
            "check_id": "go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
            "end": {
                "col": 35,
                "line": 254,
                "offset": 5331
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "017de443fd3252e315c250ac6f150822f66a6a41cc58689156a04c68e80be646af5cd19b9a21ade3e91cc9a049ef51ff443f51a0d05ffbcff7e0aca3c6e133b4_0",
                "is_ignored": false,
                "lines": "\tres := exec.Command(cmd, args...)",
                "message": "Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                    ],
                    "cwe2022-top25": true,
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9109,
                            "rule_id": "X5U8RQ",
                            "rv_id": 833845,
                            "url": "https://semgrep.dev/playground/r/GxTDE1v/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                            "version_id": "GxTDE1v"
                        }
                    },
                    "shortlink": "https://sg.run/W8lA",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Code Injection"
                    ]
                },
                "metavars": {
                    "$CMD": {
                        "abstract_content": "cmd",
                        "end": {
                            "col": 25,
                            "line": 254,
                            "offset": 5321
                        },
                        "start": {
                            "col": 22,
                            "line": 254,
                            "offset": 5318
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/common/common.go",
            "start": {
                "col": 9,
                "line": 254,
                "offset": 5305
            }
        },
        {
            "check_id": "go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
            "end": {
                "col": 35,
                "line": 288,
                "offset": 6043
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "017de443fd3252e315c250ac6f150822f66a6a41cc58689156a04c68e80be646af5cd19b9a21ade3e91cc9a049ef51ff443f51a0d05ffbcff7e0aca3c6e133b4_1",
                "is_ignored": false,
                "lines": "\tres := exec.Command(cmd, args...)",
                "message": "Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                    ],
                    "cwe2022-top25": true,
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9109,
                            "rule_id": "X5U8RQ",
                            "rv_id": 833845,
                            "url": "https://semgrep.dev/playground/r/GxTDE1v/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                            "version_id": "GxTDE1v"
                        }
                    },
                    "shortlink": "https://sg.run/W8lA",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Code Injection"
                    ]
                },
                "metavars": {
                    "$CMD": {
                        "abstract_content": "cmd",
                        "end": {
                            "col": 25,
                            "line": 288,
                            "offset": 6033
                        },
                        "start": {
                            "col": 22,
                            "line": 288,
                            "offset": 6030
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/common/common.go",
            "start": {
                "col": 9,
                "line": 288,
                "offset": 6017
            }
        },
        {
            "check_id": "go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
            "end": {
                "col": 35,
                "line": 314,
                "offset": 6571
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "017de443fd3252e315c250ac6f150822f66a6a41cc58689156a04c68e80be646af5cd19b9a21ade3e91cc9a049ef51ff443f51a0d05ffbcff7e0aca3c6e133b4_2",
                "is_ignored": false,
                "lines": "\tres := exec.Command(cmd, args...)",
                "message": "Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified user data can reach this call site, this is a code injection vulnerability. A malicious actor can inject a malicious script to execute arbitrary code.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                    ],
                    "cwe2022-top25": true,
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9109,
                            "rule_id": "X5U8RQ",
                            "rv_id": 833845,
                            "url": "https://semgrep.dev/playground/r/GxTDE1v/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                            "version_id": "GxTDE1v"
                        }
                    },
                    "shortlink": "https://sg.run/W8lA",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.dangerous-exec-command.dangerous-exec-command",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Code Injection"
                    ]
                },
                "metavars": {
                    "$CMD": {
                        "abstract_content": "cmd",
                        "end": {
                            "col": 25,
                            "line": 314,
                            "offset": 6561
                        },
                        "start": {
                            "col": 22,
                            "line": 314,
                            "offset": 6558
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/common/common.go",
            "start": {
                "col": 9,
                "line": 314,
                "offset": 6545
            }
        },
        {
            "check_id": "go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
            "end": {
                "col": 70,
                "line": 97,
                "offset": 2510
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "22dbe98d4d54867a5294bafcac826f438a7741cc3cc29a4a816974da1e2c6775bb3997450564af6a6a37177a34c4609371be16618842255e253ec54a4e8c239c_0",
                "fix": "grpc.Dial(cfg.GlobalCfg.CRISocket, grpc.WithTransportCredentials(credentials.NewTLS(<your_tls_config_here>)))",
                "is_ignored": false,
                "lines": "\tconn, err := grpc.Dial(cfg.GlobalCfg.CRISocket, grpc.WithInsecure())",
                "message": "Found an insecure gRPC connection using 'grpc.WithInsecure()'. This creates a connection without encryption to a gRPC server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Instead, establish a secure connection with an SSL certificate using the 'grpc.WithTransportCredentials()' function. You can create a create credentials using a 'tls.Config{}' struct with 'credentials.NewTLS()'. The final fix looks like this: 'grpc.WithTransportCredentials(credentials.NewTLS(<config>))'.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-300: Channel Accessible by Non-Endpoint"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2021 - Identification and Authentication Failures"
                    ],
                    "references": [
                        "https://blog.gopheracademy.com/advent-2019/go-grps-and-tls/#connection-without-encryption"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9090,
                            "rule_id": "PeUZ4X",
                            "rv_id": 833816,
                            "url": "https://semgrep.dev/playground/r/2KT7xyR/go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                            "version_id": "2KT7xyR"
                        }
                    },
                    "shortlink": "https://sg.run/J9yZ",
                    "source": "https://semgrep.dev/r/go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "grpc"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {
                    "$ADDR": {
                        "abstract_content": "cfg.GlobalCfg.CRISocket",
                        "end": {
                            "col": 48,
                            "line": 97,
                            "offset": 2488
                        },
                        "start": {
                            "col": 25,
                            "line": 97,
                            "offset": 2465
                        }
                    },
                    "$GRPC": {
                        "abstract_content": "grpc",
                        "end": {
                            "col": 19,
                            "line": 97,
                            "offset": 2459
                        },
                        "start": {
                            "col": 15,
                            "line": 97,
                            "offset": 2455
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/containerdHandler.go",
            "start": {
                "col": 15,
                "line": 97,
                "offset": 2455
            }
        },
        {
            "check_id": "go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
            "end": {
                "col": 70,
                "line": 53,
                "offset": 1340
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4a3404d3b3939f983e4316842cc25849e90435e36334ede1e2866e2c79dcac8eb28c8880c686760de89923c9bf3bf628c63a9140fbae413a99e59109ab53b143_0",
                "fix": "grpc.Dial(cfg.GlobalCfg.CRISocket, grpc.WithTransportCredentials(credentials.NewTLS(<your_tls_config_here>)))",
                "is_ignored": false,
                "lines": "\tconn, err := grpc.Dial(cfg.GlobalCfg.CRISocket, grpc.WithInsecure())",
                "message": "Found an insecure gRPC connection using 'grpc.WithInsecure()'. This creates a connection without encryption to a gRPC server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Instead, establish a secure connection with an SSL certificate using the 'grpc.WithTransportCredentials()' function. You can create a create credentials using a 'tls.Config{}' struct with 'credentials.NewTLS()'. The final fix looks like this: 'grpc.WithTransportCredentials(credentials.NewTLS(<config>))'.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-300: Channel Accessible by Non-Endpoint"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2021 - Identification and Authentication Failures"
                    ],
                    "references": [
                        "https://blog.gopheracademy.com/advent-2019/go-grps-and-tls/#connection-without-encryption"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9090,
                            "rule_id": "PeUZ4X",
                            "rv_id": 833816,
                            "url": "https://semgrep.dev/playground/r/2KT7xyR/go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                            "version_id": "2KT7xyR"
                        }
                    },
                    "shortlink": "https://sg.run/J9yZ",
                    "source": "https://semgrep.dev/r/go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "grpc"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {
                    "$ADDR": {
                        "abstract_content": "cfg.GlobalCfg.CRISocket",
                        "end": {
                            "col": 48,
                            "line": 53,
                            "offset": 1318
                        },
                        "start": {
                            "col": 25,
                            "line": 53,
                            "offset": 1295
                        }
                    },
                    "$GRPC": {
                        "abstract_content": "grpc",
                        "end": {
                            "col": 19,
                            "line": 53,
                            "offset": 1289
                        },
                        "start": {
                            "col": 15,
                            "line": 53,
                            "offset": 1285
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/crioHandler.go",
            "start": {
                "col": 15,
                "line": 53,
                "offset": 1285
            }
        },
        {
            "check_id": "go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
            "end": {
                "col": 58,
                "line": 75,
                "offset": 1529
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ce2bb01d0e860d1baefacee8dede51749d85ff6b8cfebc2d53923b4728708b16455aac126e1e3aa85fd045731a46f75c7074cab1c1698c8dceaf55f1cb5a4f5b_0",
                "fix": "tls.Config{ InsecureSkipVerify: true, MinVersion: tls.VersionTLS13 }",
                "is_ignored": false,
                "lines": "\t\t\tTLSClientConfig: &tls.Config{InsecureSkipVerify: true},",
                "message": "`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2 is currently used as the minimum when acting as a client, and TLS 1.0 when acting as a server. General purpose web applications should default to TLS 1.3 with all other protocols disabled.  Only where it is known that a web server must support legacy clients with unsupported an insecure browsers (such as Internet Explorer 10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion: tls.VersionTLS13' to the TLS configuration to bump the minimum version to TLS 1.3.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A03:2017 - Sensitive Data Exposure",
                        "A02:2021 - Cryptographic Failures"
                    ],
                    "references": [
                        "https://golang.org/doc/go1.14#crypto/tls",
                        "https://golang.org/pkg/crypto/tls/#:~:text=MinVersion",
                        "https://www.us-cert.gov/ncas/alerts/TA14-290A"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9116,
                            "rule_id": "NbUk4X",
                            "rv_id": 833835,
                            "url": "https://semgrep.dev/playground/r/7ZTx90R/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                            "version_id": "7ZTx90R"
                        }
                    },
                    "shortlink": "https://sg.run/oxEN",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                    "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/tls_config.go",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...CONF": {
                        "abstract_content": "InsecureSkipVerify true",
                        "end": {
                            "col": 57,
                            "line": 75,
                            "offset": 1528
                        },
                        "start": {
                            "col": 33,
                            "line": 75,
                            "offset": 1504
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/k8sHandler.go",
            "start": {
                "col": 22,
                "line": 75,
                "offset": 1493
            }
        },
        {
            "check_id": "problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
            "end": {
                "col": 58,
                "line": 75,
                "offset": 1529
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "16fb7c39c51b6f65173b5065a799fef3590906314724119dd09c6f373ed3788445f8f261b2e510738281c617792fa4a0c3fca75dac9175a1b30def679fb6aff1_0",
                "is_ignored": false,
                "lines": "\t\t\tTLSClientConfig: &tls.Config{InsecureSkipVerify: true},",
                "message": "Checks for disabling of TLS/SSL certificate verification. This should only be used for debugging purposes because it leads to vulnerability to MTM attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "HIGH",
                    "owasp": "A03:2017 - Sensitive Data Exposure",
                    "references": [
                        "https://stackoverflow.com/questions/12122159/how-to-do-a-https-request-with-bad-certificate"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9400,
                            "rule_id": "DbUpjg",
                            "rv_id": 834309,
                            "url": "https://semgrep.dev/playground/r/BjTe0EO/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
                            "version_id": "BjTe0EO"
                        }
                    },
                    "shortlink": "https://sg.run/4xj5",
                    "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability": "Insecure Transport",
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/k8sHandler.go",
            "start": {
                "col": 22,
                "line": 75,
                "offset": 1493
            }
        },
        {
            "check_id": "go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
            "end": {
                "col": 58,
                "line": 82,
                "offset": 1671
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ce2bb01d0e860d1baefacee8dede51749d85ff6b8cfebc2d53923b4728708b16455aac126e1e3aa85fd045731a46f75c7074cab1c1698c8dceaf55f1cb5a4f5b_1",
                "fix": "tls.Config{ InsecureSkipVerify: true, MinVersion: tls.VersionTLS13 }",
                "is_ignored": false,
                "lines": "\t\t\tTLSClientConfig: &tls.Config{InsecureSkipVerify: true},",
                "message": "`MinVersion` is missing from this TLS configuration.  By default, TLS 1.2 is currently used as the minimum when acting as a client, and TLS 1.0 when acting as a server. General purpose web applications should default to TLS 1.3 with all other protocols disabled.  Only where it is known that a web server must support legacy clients with unsupported an insecure browsers (such as Internet Explorer 10), it may be necessary to enable TLS 1.0 to provide support. Add `MinVersion: tls.VersionTLS13' to the TLS configuration to bump the minimum version to TLS 1.3.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A03:2017 - Sensitive Data Exposure",
                        "A02:2021 - Cryptographic Failures"
                    ],
                    "references": [
                        "https://golang.org/doc/go1.14#crypto/tls",
                        "https://golang.org/pkg/crypto/tls/#:~:text=MinVersion",
                        "https://www.us-cert.gov/ncas/alerts/TA14-290A"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9116,
                            "rule_id": "NbUk4X",
                            "rv_id": 833835,
                            "url": "https://semgrep.dev/playground/r/7ZTx90R/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                            "version_id": "7ZTx90R"
                        }
                    },
                    "shortlink": "https://sg.run/oxEN",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.crypto.missing-ssl-minversion.missing-ssl-minversion",
                    "source-rule-url": "https://github.com/securego/gosec/blob/master/rules/tls_config.go",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...CONF": {
                        "abstract_content": "InsecureSkipVerify true",
                        "end": {
                            "col": 57,
                            "line": 82,
                            "offset": 1670
                        },
                        "start": {
                            "col": 33,
                            "line": 82,
                            "offset": 1646
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/k8sHandler.go",
            "start": {
                "col": 22,
                "line": 82,
                "offset": 1635
            }
        },
        {
            "check_id": "problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
            "end": {
                "col": 58,
                "line": 82,
                "offset": 1671
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "16fb7c39c51b6f65173b5065a799fef3590906314724119dd09c6f373ed3788445f8f261b2e510738281c617792fa4a0c3fca75dac9175a1b30def679fb6aff1_1",
                "is_ignored": false,
                "lines": "\t\t\tTLSClientConfig: &tls.Config{InsecureSkipVerify: true},",
                "message": "Checks for disabling of TLS/SSL certificate verification. This should only be used for debugging purposes because it leads to vulnerability to MTM attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "HIGH",
                    "owasp": "A03:2017 - Sensitive Data Exposure",
                    "references": [
                        "https://stackoverflow.com/questions/12122159/how-to-do-a-https-request-with-bad-certificate"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9400,
                            "rule_id": "DbUpjg",
                            "rv_id": 834309,
                            "url": "https://semgrep.dev/playground/r/BjTe0EO/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
                            "version_id": "BjTe0EO"
                        }
                    },
                    "shortlink": "https://sg.run/4xj5",
                    "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.go-stdlib.bypass-tls-verification.bypass-tls-verification",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability": "Insecure Transport",
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/core/k8sHandler.go",
            "start": {
                "col": 22,
                "line": 82,
                "offset": 1635
            }
        },
        {
            "check_id": "go.lang.security.audit.xss.import-text-template.import-text-template",
            "end": {
                "col": 16,
                "line": 12,
                "offset": 173
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9a81e4b77df2051f72ff490fd231de159434412077d5dbcc457445ce142ea8a08895ced46d0e46f664abda341dafcfd109d2491eb26bde9e0c5db4a35043c3ff_0",
                "fix": "html/template",
                "is_ignored": false,
                "lines": "\t\"text/template\"",
                "message": "When working with web applications that involve rendering user-generated  content, it's important to properly escape any HTML content to prevent  Cross-Site Scripting (XSS) attacks. In Go, the `text/template` package does  not automatically escape HTML content, which can leave your application  vulnerable to these types of attacks. To mitigate this risk, it's  recommended to use the `html/template` package instead, which provides  built-in functionality for HTML escaping. By using `html/template` to render  your HTML content, you can help to ensure that your web application is more  secure and less susceptible to XSS vulnerabilities.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://www.veracode.com/blog/secure-development/use-golang-these-mistakes-could-compromise-your-apps-security"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9136,
                            "rule_id": "5rUOZQ",
                            "rv_id": 833868,
                            "url": "https://semgrep.dev/playground/r/YDTl0LG/go.lang.security.audit.xss.import-text-template.import-text-template",
                            "version_id": "YDTl0LG"
                        }
                    },
                    "shortlink": "https://sg.run/ndEO",
                    "source": "https://semgrep.dev/r/go.lang.security.audit.xss.import-text-template.import-text-template",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "go"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "text/template",
                        "end": {
                            "col": 14,
                            "line": 1,
                            "offset": 13
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$IMPORT": {
                        "abstract_content": "text/template",
                        "end": {
                            "col": 16,
                            "line": 12,
                            "offset": 173
                        },
                        "start": {
                            "col": 3,
                            "line": 12,
                            "offset": 160
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "KubeArmor/enforcer/appArmorProfile.go",
            "start": {
                "col": 3,
                "line": 12,
                "offset": 160
            }
        },
        {
            "check_id": "bash.curl.security.curl-pipe-bash.curl-pipe-bash",
            "end": {
                "col": 111,
                "line": 91,
                "offset": 3281
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "53d1004a677480d2baf6a1a1bfb9b3b4da99b218cd46fb2911c3671e576bcb4cc08ecba539b1ac1efa41c8029b9517dd71f10cf506cfc3eef372a1a146fa13fa_0",
                "is_ignored": false,
                "lines": "curl -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\"  | bash",
                "message": "Data is being piped into `bash` from a `curl` command. An attacker with control of the server in the `curl` command could inject malicious code into the pipe, resulting in a system compromise. Avoid piping untrusted data into `bash` or any other shell if you can. If you must do this, consider checking the SHA sum of the content returned by the server to verify its integrity.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 14555,
                            "rule_id": "qNUXrw",
                            "rv_id": 833375,
                            "url": "https://semgrep.dev/playground/r/bZTBe4Z/bash.curl.security.curl-pipe-bash.curl-pipe-bash",
                            "version_id": "bZTBe4Z"
                        }
                    },
                    "shortlink": "https://sg.run/KXz6",
                    "source": "https://semgrep.dev/r/bash.curl.security.curl-pipe-bash.curl-pipe-bash",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "bash",
                        "curl"
                    ],
                    "vulnerability_class": [
                        "Code Injection"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "contribution/self-managed-k8s-selinux/setup.sh",
            "start": {
                "col": 1,
                "line": 91,
                "offset": 3171
            }
        },
        {
            "check_id": "bash.curl.security.curl-pipe-bash.curl-pipe-bash",
            "end": {
                "col": 110,
                "line": 106,
                "offset": 3507
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "33647bd6dd919f000755365f1c6d18fde44501e2a9426f17729c4b05b816ebdc60cf11b97deb81a899ef9b69aa578cf43307fb1cc21d3e8514818251e1431200_0",
                "is_ignored": false,
                "lines": "curl -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\" | bash",
                "message": "Data is being piped into `bash` from a `curl` command. An attacker with control of the server in the `curl` command could inject malicious code into the pipe, resulting in a system compromise. Avoid piping untrusted data into `bash` or any other shell if you can. If you must do this, consider checking the SHA sum of the content returned by the server to verify its integrity.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 14555,
                            "rule_id": "qNUXrw",
                            "rv_id": 833375,
                            "url": "https://semgrep.dev/playground/r/bZTBe4Z/bash.curl.security.curl-pipe-bash.curl-pipe-bash",
                            "version_id": "bZTBe4Z"
                        }
                    },
                    "shortlink": "https://sg.run/KXz6",
                    "source": "https://semgrep.dev/r/bash.curl.security.curl-pipe-bash.curl-pipe-bash",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "bash",
                        "curl"
                    ],
                    "vulnerability_class": [
                        "Code Injection"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "contribution/self-managed-k8s/setup.sh",
            "start": {
                "col": 1,
                "line": 106,
                "offset": 3398
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 95,
                "offset": 1488
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "84417126ab12930d52d868d035ea477c66475c01b08345ba756d651b02eee2ff79a5fa8c4206a7d4eeeb92096b506638d612593605b8324749f9f545a122857d_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 95,
                            "offset": 1488
                        },
                        "start": {
                            "col": 5,
                            "line": 95,
                            "offset": 1484
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 5,
                "line": 95,
                "offset": 1484
            }
        },
        {
            "check_id": "yaml.kubernetes.security.privileged-container.privileged-container",
            "end": {
                "col": 26,
                "line": 137,
                "offset": 3300
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b599f095d24a2d45626dce72fe1b0e71b691c76219c713cffaa099e833aab5a73addaaea81c2dae133414375f8259544f330a12d74cf18cab9d725483263fbb9_0",
                "is_ignored": false,
                "lines": "      - args:\n        - |\n          grep \"bpf\" /rootfs/sys/kernel/security/lsm >/dev/null\n          [[ $? -eq 0 ]] && echo \"sysfs already has BPF enabled\" && rm /sentinel/reboot-required && sleep infinity\n          grep \"GRUB_CMDLINE_LINUX.*bpf\" /rootfs/etc/default/grub >/dev/null\n          [[ $? -eq 0 ]] && echo \"grub already has BPF enabled\" && sleep infinity\n          cat <<EOF >/rootfs/updater.sh\n          #!/bin/bash\n          lsmlist=\\$(cat /sys/kernel/security/lsm)\n          echo \"current lsmlist=\\$lsmlist\"\n          sed -i \"s/^GRUB_CMDLINE_LINUX=.*$/GRUB_CMDLINE_LINUX=\\\"lsm=\\$lsmlist,bpf\\\"/g\" /etc/default/grub\n          command -v grub2-mkconfig >/dev/null 2>&1 && grub2-mkconfig -o /boot/grub2.cfg\n          command -v grub2-mkconfig >/dev/null 2>&1 && grub2-mkconfig -o /boot/grub2/grub.cfg\n          command -v grub-mkconfig >/dev/null 2>&1 && grub-mkconfig -o /boot/grub.cfg\n          command -v aa-status >/dev/null 2>&1 || yum install apparmor-utils -y\n          command -v update-grub >/dev/null 2>&1 && update-grub\n          command -v update-grub2 >/dev/null 2>&1 && update-grub2\n          EOF\n          cat /rootfs/updater.sh\n          chmod +x /rootfs/updater.sh\n          chroot /rootfs/ /bin/bash /updater.sh\n          touch /sentinel/reboot-required\n        command:\n        - bash\n        - -c\n        image: debian\n        imagePullPolicy: Always\n        name: updater\n        resources: {}\n        securityContext:\n          privileged: true\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /rootfs\n          mountPropagation: HostToContainer\n          name: rootfs\n          readOnly: false\n        - mountPath: /sentinel\n          name: sentinel\n          readOnly: false",
                "message": "Container or pod is running in privileged mode. This grants the container the equivalent of root capabilities on the host machine. This can lead to container escapes, privilege escalation, and other security concerns. Remove the 'privileged' key to disable this capability.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10058,
                            "rule_id": "oqUz2p",
                            "rv_id": 835326,
                            "url": "https://semgrep.dev/playground/r/YDTlb8W/yaml.kubernetes.security.privileged-container.privileged-container",
                            "version_id": "YDTlb8W"
                        }
                    },
                    "shortlink": "https://sg.run/Ygr5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.privileged-container.privileged-container",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 9,
                "line": 97,
                "offset": 1516
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 126,
                "offset": 2954
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4e0adc0d3173d7e6bf80b45ed4859dc4c6fc8bca9ec7d60279f6342164b691da69453890e21fbb1ce6a96cc626b32869868eb0a66b8bf9edbde8ada431a50285_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "updater",
                        "end": {
                            "col": 22,
                            "line": 124,
                            "offset": 2908
                        },
                        "start": {
                            "col": 15,
                            "line": 124,
                            "offset": 2901
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 126,
                            "offset": 2954
                        },
                        "start": {
                            "col": 9,
                            "line": 126,
                            "offset": 2939
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 9,
                "line": 126,
                "offset": 2939
            }
        },
        {
            "check_id": "yaml.kubernetes.security.privileged-container.privileged-container",
            "end": {
                "col": 25,
                "line": 165,
                "offset": 4100
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b599f095d24a2d45626dce72fe1b0e71b691c76219c713cffaa099e833aab5a73addaaea81c2dae133414375f8259544f330a12d74cf18cab9d725483263fbb9_1",
                "is_ignored": false,
                "lines": "      - command:\n        - /usr/bin/kured\n        - --reboot-sentinel=/sentinel/reboot-required\n        - --force-reboot=true\n        - --drain-timeout=2m\n        - --period=30s\n        - --ds-namespace=kubearmor\n        - --ds-name=kubearmor-kured\n        - --lock-ttl=10m\n        - --reboot-method=signal\n        env:\n        - name: KURED_NODE_ID\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n        image: ghcr.io/kubereboot/kured:1.15.0\n        imagePullPolicy: IfNotPresent\n        name: kured\n        ports:\n        - containerPort: 8080\n          name: metrics\n        securityContext:\n          privileged: true\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /sentinel\n          name: sentinel\n          readOnly: true",
                "message": "Container or pod is running in privileged mode. This grants the container the equivalent of root capabilities on the host machine. This can lead to container escapes, privilege escalation, and other security concerns. Remove the 'privileged' key to disable this capability.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10058,
                            "rule_id": "oqUz2p",
                            "rv_id": 835326,
                            "url": "https://semgrep.dev/playground/r/YDTlb8W/yaml.kubernetes.security.privileged-container.privileged-container",
                            "version_id": "YDTlb8W"
                        }
                    },
                    "shortlink": "https://sg.run/Ygr5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.privileged-container.privileged-container",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 9,
                "line": 138,
                "offset": 3309
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 159,
                "offset": 3930
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "5ab65b6095aea2a26333124c08f1fa613c8b935069e209ed6eb6568c21f7c70a6c252fd4e44c1d9fee2fd1df58fb88e84e821dff470fa836281d5ab593029743_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "kured",
                        "end": {
                            "col": 20,
                            "line": 155,
                            "offset": 3837
                        },
                        "start": {
                            "col": 15,
                            "line": 155,
                            "offset": 3832
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 159,
                            "offset": 3930
                        },
                        "start": {
                            "col": 9,
                            "line": 159,
                            "offset": 3915
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 9,
                "line": 159,
                "offset": 3915
            }
        },
        {
            "check_id": "yaml.kubernetes.security.hostpid-pod.hostpid-pod",
            "end": {
                "col": 20,
                "line": 166,
                "offset": 4120
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "5426b640e0ecce5a4a8a868b7147a533aed6e80cc72f187312244ae4561cb1a1dcb92f3b7a75c309e2cb80c52db90f10e85270c0dba2d246fd8cfcf4e7c51f02_0",
                "is_ignored": false,
                "lines": "      hostPID: true",
                "message": "Pod is sharing the host process ID namespace. When paired with ptrace this can be used to escalate privileges outside of the container. Remove the 'hostPID' key to disable this functionality.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10238,
                            "rule_id": "7KUeo0",
                            "rv_id": 835324,
                            "url": "https://semgrep.dev/playground/r/qkTQwKE/yaml.kubernetes.security.hostpid-pod.hostpid-pod",
                            "version_id": "qkTQwKE"
                        }
                    },
                    "shortlink": "https://sg.run/708R",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.hostpid-pod.hostpid-pod",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/ka-updater-kured.yaml",
            "start": {
                "col": 7,
                "line": 166,
                "offset": 4107
            }
        },
        {
            "check_id": "yaml.kubernetes.security.privileged-container.privileged-container",
            "end": {
                "col": 28,
                "line": 56,
                "offset": 2085
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "13c3f705aaa800f6fa16a4575259a8cf5913a150281bcc3082191111e1f816cc163a69bc717dadb8e98cf352edfc6e0ba1b81999a13812169abe78c17edc5cc3_0",
                "is_ignored": false,
                "lines": "        - args:\n          - |\n            grep \"bpf\" /rootfs/sys/kernel/security/lsm >/dev/null\n            [[ $? -eq 0 ]] && echo \"sysfs already has BPF enabled\" && sleep infinity\n            grep \"GRUB_CMDLINE_LINUX.*bpf\" /rootfs/etc/default/grub >/dev/null\n            [[ $? -eq 0 ]] && echo \"grub already has BPF enabled\" && sleep infinity\n            cat <<EOF >/rootfs/updater.sh\n            #!/bin/bash\n            lsmlist=\\$(cat /sys/kernel/security/lsm)\n            echo \"current lsmlist=\\$lsmlist\"\n            sed -i \"s/^GRUB_CMDLINE_LINUX=.*$/GRUB_CMDLINE_LINUX=\\\"lsm=\\$lsmlist,bpf\\\"/g\" /etc/default/grub\n            command -v grub2-mkconfig >/dev/null 2>&1 && grub2-mkconfig -o /boot/grub2.cfg\n            command -v grub2-mkconfig >/dev/null 2>&1 && grub2-mkconfig -o /boot/grub2/grub.cfg\n            command -v grub-mkconfig >/dev/null 2>&1 && grub-mkconfig -o /boot/grub.cfg\n            command -v aa-status >/dev/null 2>&1 || yum install apparmor-utils -y\n            command -v update-grub >/dev/null 2>&1 && update-grub\n            command -v update-grub2 >/dev/null 2>&1 && update-grub2\n            reboot\n            EOF\n            cat /rootfs/updater.sh\n            chmod +x /rootfs/updater.sh\n            chroot /rootfs/ /bin/bash /updater.sh\n          image: debian\n          command:\n            - \"bash\"\n            - \"-c\"\n          imagePullPolicy: Always\n          name: updater\n          resources: {}\n          securityContext:\n            privileged: true\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n          volumeMounts:\n          - mountPath: /rootfs\n            mountPropagation: HostToContainer\n            name: rootfs\n            readOnly: false",
                "message": "Container or pod is running in privileged mode. This grants the container the equivalent of root capabilities on the host machine. This can lead to container escapes, privilege escalation, and other security concerns. Remove the 'privileged' key to disable this capability.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10058,
                            "rule_id": "oqUz2p",
                            "rv_id": 835326,
                            "url": "https://semgrep.dev/playground/r/YDTlb8W/yaml.kubernetes.security.privileged-container.privileged-container",
                            "version_id": "YDTlb8W"
                        }
                    },
                    "shortlink": "https://sg.run/Ygr5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.privileged-container.privileged-container",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/updaterscript.yaml",
            "start": {
                "col": 11,
                "line": 19,
                "offset": 358
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 26,
                "line": 48,
                "offset": 1805
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "73296ac3a520ea2184a1b54bd13669552f01d653bf81d8cfb9b917312366a7c5cf9cdb04354a7a292a6e6864c7bf8a36318d3aae3c23dc67c886b8a5ce7187bf_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "          securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "updater",
                        "end": {
                            "col": 24,
                            "line": 46,
                            "offset": 1755
                        },
                        "start": {
                            "col": 17,
                            "line": 46,
                            "offset": 1748
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 26,
                            "line": 48,
                            "offset": 1805
                        },
                        "start": {
                            "col": 11,
                            "line": 48,
                            "offset": 1790
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/updaterscript.yaml",
            "start": {
                "col": 11,
                "line": 48,
                "offset": 1790
            }
        },
        {
            "check_id": "yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod",
            "end": {
                "col": 26,
                "line": 58,
                "offset": 2154
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "94b9d83d229297171d1a93adcd12d5153480c2e7b235018230d10018d8708d8ce998a306a8198be7f613810448c89a3e1f2eda0590508c3d224342efcae42880_0",
                "is_ignored": false,
                "lines": "        hostNetwork: true",
                "message": "Pod may use the node network namespace. This gives the pod access to the loopback device, services listening on localhost, and could be used to snoop on network activity of other pods on the same node. Remove the 'hostNetwork' key to disable this functionality.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-406: Insufficient Control of Network Message Volume (Network Amplification)"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10237,
                            "rule_id": "EwU4NO",
                            "rv_id": 835323,
                            "url": "https://semgrep.dev/playground/r/K3TrLOD/yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod",
                            "version_id": "K3TrLOD"
                        }
                    },
                    "shortlink": "https://sg.run/E51A",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.hostnetwork-pod.hostnetwork-pod",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/updaterscript.yaml",
            "start": {
                "col": 9,
                "line": 58,
                "offset": 2137
            }
        },
        {
            "check_id": "yaml.kubernetes.security.hostpid-pod.hostpid-pod",
            "end": {
                "col": 22,
                "line": 59,
                "offset": 2176
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "34e5e512ee4cfc0346469a8147d641cfdfa959e5d38f1af3444a11fc4fe1169e66df44ca325d7f3fd0925645eff3e0dd704d1a774a994db71669d217bfe94450_0",
                "is_ignored": false,
                "lines": "        hostPID: true",
                "message": "Pod is sharing the host process ID namespace. When paired with ptrace this can be used to escalate privileges outside of the container. Remove the 'hostPID' key to disable this functionality.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10238,
                            "rule_id": "7KUeo0",
                            "rv_id": 835324,
                            "url": "https://semgrep.dev/playground/r/qkTQwKE/yaml.kubernetes.security.hostpid-pod.hostpid-pod",
                            "version_id": "qkTQwKE"
                        }
                    },
                    "shortlink": "https://sg.run/708R",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.hostpid-pod.hostpid-pod",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/controller/updaterscript.yaml",
            "start": {
                "col": 9,
                "line": 59,
                "offset": 2163
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 461,
                "offset": 10340
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6e9539ee9c61fa05449a17cfed5a67fb261d97e78dc5a3c5ec2fc982766c6f631553bec79224314afa8cc21033d7f60c2755fe9e71fab039b3fd12ca94de3f74_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 461,
                            "offset": 10340
                        },
                        "start": {
                            "col": 5,
                            "line": 461,
                            "offset": 10336
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/operator/operator.yaml",
            "start": {
                "col": 5,
                "line": 461,
                "offset": 10336
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 470,
                "offset": 10599
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "5abed7ba74a9e2ff78f5fdd5670aee6ae2b376bad4630ed2feec793b0e4f6bf3ea54c183a08d179d999c52049147c8926aa7e957eb1bcfd6fd87ba01cb3f25f5_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "        name: operator",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "operator",
                        "end": {
                            "col": 23,
                            "line": 470,
                            "offset": 10609
                        },
                        "start": {
                            "col": 15,
                            "line": 470,
                            "offset": 10601
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 470,
                            "offset": 10599
                        },
                        "start": {
                            "col": 9,
                            "line": 470,
                            "offset": 10595
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "deployments/operator/operator.yaml",
            "start": {
                "col": 9,
                "line": 470,
                "offset": 10595
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 27,
                "offset": 505
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "244732e7622dcad8f95c5bc267926763d66145a19b94ce9a91abdd7ddf8f20f4505f064249dc2e491f51a3f6b2b8e0f65c865171d2cd80ff1ded77a057b6ffe5_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 27,
                            "offset": 505
                        },
                        "start": {
                            "col": 5,
                            "line": 27,
                            "offset": 501
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 27,
                "offset": 501
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 29,
                "offset": 539
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "e25e239ac31261715705973ec6680dbbc5b1e9846da879f32fbbca11506e0b88d51797960c285e19feff2cbba162b08ce5bdf6bc6989f0196e7ed548db06860d_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "        - name: ubuntu-1-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-1-container",
                        "end": {
                            "col": 35,
                            "line": 29,
                            "offset": 559
                        },
                        "start": {
                            "col": 17,
                            "line": 29,
                            "offset": 541
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 29,
                            "offset": 539
                        },
                        "start": {
                            "col": 11,
                            "line": 29,
                            "offset": 535
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 11,
                "line": 29,
                "offset": 535
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 53,
                "offset": 1050
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "244732e7622dcad8f95c5bc267926763d66145a19b94ce9a91abdd7ddf8f20f4505f064249dc2e491f51a3f6b2b8e0f65c865171d2cd80ff1ded77a057b6ffe5_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 53,
                            "offset": 1050
                        },
                        "start": {
                            "col": 5,
                            "line": 53,
                            "offset": 1046
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 53,
                "offset": 1046
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 55,
                "offset": 1084
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "622fc26cbadd4d517b35649832d0494f7ec2fd67440aa90502feab7cffbc991216778651c4bd09dcdffbfc427d6d13fbfe66cac60f8d8c898d75e79a928dd6f8_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "        - name: ubuntu-2-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-2-container",
                        "end": {
                            "col": 35,
                            "line": 55,
                            "offset": 1104
                        },
                        "start": {
                            "col": 17,
                            "line": 55,
                            "offset": 1086
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 55,
                            "offset": 1084
                        },
                        "start": {
                            "col": 11,
                            "line": 55,
                            "offset": 1080
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 11,
                "line": 55,
                "offset": 1080
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 79,
                "offset": 1595
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "244732e7622dcad8f95c5bc267926763d66145a19b94ce9a91abdd7ddf8f20f4505f064249dc2e491f51a3f6b2b8e0f65c865171d2cd80ff1ded77a057b6ffe5_2",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 79,
                            "offset": 1595
                        },
                        "start": {
                            "col": 5,
                            "line": 79,
                            "offset": 1591
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 79,
                "offset": 1591
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 81,
                "offset": 1629
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "95a405929aa09228d97332f51aa94fdca558caf584b07500276aa3059fe3a34ee5f1701ce426feaa145cf345aa8df7ac56861c6615034a4640f8d1e663d92ad2_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "        - name: ubuntu-3-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-3-container",
                        "end": {
                            "col": 35,
                            "line": 81,
                            "offset": 1649
                        },
                        "start": {
                            "col": 17,
                            "line": 81,
                            "offset": 1631
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 81,
                            "offset": 1629
                        },
                        "start": {
                            "col": 11,
                            "line": 81,
                            "offset": 1625
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 11,
                "line": 81,
                "offset": 1625
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 113,
                "offset": 2355
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "244732e7622dcad8f95c5bc267926763d66145a19b94ce9a91abdd7ddf8f20f4505f064249dc2e491f51a3f6b2b8e0f65c865171d2cd80ff1ded77a057b6ffe5_3",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 113,
                            "offset": 2355
                        },
                        "start": {
                            "col": 5,
                            "line": 113,
                            "offset": 2351
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 113,
                "offset": 2351
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 115,
                "offset": 2389
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "811f4d430ecb5e91e1c7f88a68ebf1f5453dbc6e27a2dc7abdb23e7e2bd812130d7c217471f1524a3a3d330237e996acaf9522c3eaf84766901b4dbcfa544fd8_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "        - name: ubuntu-4-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-4-container",
                        "end": {
                            "col": 35,
                            "line": 115,
                            "offset": 2409
                        },
                        "start": {
                            "col": 17,
                            "line": 115,
                            "offset": 2391
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 115,
                            "offset": 2389
                        },
                        "start": {
                            "col": 11,
                            "line": 115,
                            "offset": 2385
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 11,
                "line": 115,
                "offset": 2385
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 139,
                "offset": 2900
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "244732e7622dcad8f95c5bc267926763d66145a19b94ce9a91abdd7ddf8f20f4505f064249dc2e491f51a3f6b2b8e0f65c865171d2cd80ff1ded77a057b6ffe5_4",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 139,
                            "offset": 2900
                        },
                        "start": {
                            "col": 5,
                            "line": 139,
                            "offset": 2896
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 139,
                "offset": 2896
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 15,
                "line": 141,
                "offset": 2934
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0709b3f4c56f54bd3a040d9d272804aa796ffe039f0e25df0a281d5ff4e2988eb8d4dcf620f77f22a65cd46df17b72d7b2c077f49f2793896120eaace05e8e00_0",
                "fix": "securityContext:\n            allowPrivilegeEscalation: false\n          name",
                "is_ignored": false,
                "lines": "        - name: ubuntu-5-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-5-container",
                        "end": {
                            "col": 35,
                            "line": 141,
                            "offset": 2954
                        },
                        "start": {
                            "col": 17,
                            "line": 141,
                            "offset": 2936
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 15,
                            "line": 141,
                            "offset": 2934
                        },
                        "start": {
                            "col": 11,
                            "line": 141,
                            "offset": 2930
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/multiubuntu-deployment.yaml",
            "start": {
                "col": 11,
                "line": 141,
                "offset": 2930
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 24,
                "offset": 395
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2ab2ea28e13090a394e3bd417bb5d27da21330e93134fe1a1599bae5ea10263fc514afcd205d1e3a0a753cfb7e7bceb4999b48f655b36cf417820fa3777d4c8_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 24,
                            "offset": 395
                        },
                        "start": {
                            "col": 5,
                            "line": 24,
                            "offset": 391
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 24,
                "offset": 391
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 26,
                "offset": 427
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "5476f1ffd6587fbb894cad3d97a497d1d65d5f7a8ba754463e069d50950eebf48ad8b3958f1387d85492a614127bb6e4c34fe8a579e5ebb74b01ed12994710f1_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: ubuntu-1-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-1-container",
                        "end": {
                            "col": 33,
                            "line": 26,
                            "offset": 447
                        },
                        "start": {
                            "col": 15,
                            "line": 26,
                            "offset": 429
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 26,
                            "offset": 427
                        },
                        "start": {
                            "col": 9,
                            "line": 26,
                            "offset": 423
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 9,
                "line": 26,
                "offset": 423
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 47,
                "offset": 826
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2ab2ea28e13090a394e3bd417bb5d27da21330e93134fe1a1599bae5ea10263fc514afcd205d1e3a0a753cfb7e7bceb4999b48f655b36cf417820fa3777d4c8_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 47,
                            "offset": 826
                        },
                        "start": {
                            "col": 5,
                            "line": 47,
                            "offset": 822
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 47,
                "offset": 822
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 49,
                "offset": 858
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "436033b4ff1c4c2817bd662627e9fdf96ccb39b8208ea9b5d83b3b483356d5e40fcfecafa68479fc2d18a6f1927a4fa33f4850912c7e2a8bdc78bd73a6779d69_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: ubuntu-2-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-2-container",
                        "end": {
                            "col": 33,
                            "line": 49,
                            "offset": 878
                        },
                        "start": {
                            "col": 15,
                            "line": 49,
                            "offset": 860
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 49,
                            "offset": 858
                        },
                        "start": {
                            "col": 9,
                            "line": 49,
                            "offset": 854
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 9,
                "line": 49,
                "offset": 854
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 70,
                "offset": 1257
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2ab2ea28e13090a394e3bd417bb5d27da21330e93134fe1a1599bae5ea10263fc514afcd205d1e3a0a753cfb7e7bceb4999b48f655b36cf417820fa3777d4c8_2",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 70,
                            "offset": 1257
                        },
                        "start": {
                            "col": 5,
                            "line": 70,
                            "offset": 1253
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 70,
                "offset": 1253
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 72,
                "offset": 1289
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "32d07c783eda39cbf3cc22562e1e97e26c795f65b28758ee13ddcd066ac05088ce36872314c8e59c427e3fb986b395d910c3d8318dfbe3435bec04f7274a6278_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: ubuntu-3-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-3-container",
                        "end": {
                            "col": 33,
                            "line": 72,
                            "offset": 1309
                        },
                        "start": {
                            "col": 15,
                            "line": 72,
                            "offset": 1291
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 72,
                            "offset": 1289
                        },
                        "start": {
                            "col": 9,
                            "line": 72,
                            "offset": 1285
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 9,
                "line": 72,
                "offset": 1285
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 93,
                "offset": 1688
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2ab2ea28e13090a394e3bd417bb5d27da21330e93134fe1a1599bae5ea10263fc514afcd205d1e3a0a753cfb7e7bceb4999b48f655b36cf417820fa3777d4c8_3",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 93,
                            "offset": 1688
                        },
                        "start": {
                            "col": 5,
                            "line": 93,
                            "offset": 1684
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 93,
                "offset": 1684
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 95,
                "offset": 1720
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4d91fd10f452b2dfe4d15ac1202c0673fa2d48af3bb6f23df11ff2b07e8bd865c6e42bf3e2d234c3e8b12e6485f7d8baa7fd61967881d4ad1fca09a3dac2962a_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: ubuntu-4-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-4-container",
                        "end": {
                            "col": 33,
                            "line": 95,
                            "offset": 1740
                        },
                        "start": {
                            "col": 15,
                            "line": 95,
                            "offset": 1722
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 95,
                            "offset": 1720
                        },
                        "start": {
                            "col": 9,
                            "line": 95,
                            "offset": 1716
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 9,
                "line": 95,
                "offset": 1716
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 116,
                "offset": 2119
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2ab2ea28e13090a394e3bd417bb5d27da21330e93134fe1a1599bae5ea10263fc514afcd205d1e3a0a753cfb7e7bceb4999b48f655b36cf417820fa3777d4c8_4",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 116,
                            "offset": 2119
                        },
                        "start": {
                            "col": 5,
                            "line": 116,
                            "offset": 2115
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 5,
                "line": 116,
                "offset": 2115
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 118,
                "offset": 2151
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "dbd2225d226c87a69840078a4e45c148a99325a41006150c8e50c4c859202bd8663e14c1cfeb17959f9c808f4b337c67a58e26d1fa394aebeafc0d0622438c98_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: ubuntu-5-container",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "ubuntu-5-container",
                        "end": {
                            "col": 33,
                            "line": 118,
                            "offset": 2171
                        },
                        "start": {
                            "col": 15,
                            "line": 118,
                            "offset": 2153
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 118,
                            "offset": 2151
                        },
                        "start": {
                            "col": 9,
                            "line": 118,
                            "offset": 2147
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/multiubuntu/original/multiubuntu-deployment.yaml",
            "start": {
                "col": 9,
                "line": 118,
                "offset": 2147
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 22,
                "offset": 299
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "acbceb5cc8ac19ddbe6ef982c30c7ab96e83196590cf041b57f32444073046520330e45e0262458ee758581d76520e181bc95e20f6d5ea538351454602d94f70_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 22,
                            "offset": 299
                        },
                        "start": {
                            "col": 5,
                            "line": 22,
                            "offset": 295
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/nginx-csp/nginx-nginx1-deployment.yaml",
            "start": {
                "col": 5,
                "line": 22,
                "offset": 295
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 24,
                "offset": 331
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0c8a04f229412e17224a36628c8fbcf45d6b29fa247b07b2a8441a1d2bcd1ca74058c4a5d52c161f964e647398d8aab7fb608fc3e883fe1b30aabcf76f2f65c1_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: nginx",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "nginx",
                        "end": {
                            "col": 20,
                            "line": 24,
                            "offset": 338
                        },
                        "start": {
                            "col": 15,
                            "line": 24,
                            "offset": 333
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 24,
                            "offset": 331
                        },
                        "start": {
                            "col": 9,
                            "line": 24,
                            "offset": 327
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/nginx-csp/nginx-nginx1-deployment.yaml",
            "start": {
                "col": 9,
                "line": 24,
                "offset": 327
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 22,
                "offset": 299
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d85640b5cf4eaf2bcd21576dc35e057d4d246e0408a8d1241bf58f3500eb3ccb66962944d6a405a7bec7a204407019b6615ba9d45735b4fdfa1bba2816bb6596_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 22,
                            "offset": 299
                        },
                        "start": {
                            "col": 5,
                            "line": 22,
                            "offset": 295
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/nginx-csp/nginx-nginx2-deployment.yaml",
            "start": {
                "col": 5,
                "line": 22,
                "offset": 295
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 24,
                "offset": 331
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "13e3d67f5e72e628d562198997db5d51b4e8cdf3f6e04781daaed5a28c1dd64d1bb81af16df833e05021c9bedcc6b5c4bbe2e6527fc764771c4feddf2bf6df6c_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: nginx",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "nginx",
                        "end": {
                            "col": 20,
                            "line": 24,
                            "offset": 338
                        },
                        "start": {
                            "col": 15,
                            "line": 24,
                            "offset": 333
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 24,
                            "offset": 331
                        },
                        "start": {
                            "col": 9,
                            "line": 24,
                            "offset": 327
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/nginx-csp/nginx-nginx2-deployment.yaml",
            "start": {
                "col": 9,
                "line": 24,
                "offset": 327
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 46,
                "offset": 773
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "82b748ec3f252aca9e2fcdd2f0f648fe081d01a668300101122eaa4bf05cbcd2aa4c7c76a325c4a0185c1209d9c8c855c998954430e12cb36d644b8c1d289e66_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "front-end",
                        "end": {
                            "col": 24,
                            "line": 38,
                            "offset": 569
                        },
                        "start": {
                            "col": 15,
                            "line": 38,
                            "offset": 560
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 46,
                            "offset": 773
                        },
                        "start": {
                            "col": 9,
                            "line": 46,
                            "offset": 758
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 46,
                "offset": 758
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 86,
                "offset": 1446
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 86,
                            "offset": 1446
                        },
                        "start": {
                            "col": 5,
                            "line": 86,
                            "offset": 1442
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 86,
                "offset": 1442
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 93,
                "offset": 1601
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "efc835d4cf343a77508048ca621926ec112421a4c5eb5caa304397d560303a36bcec56d17a2e2efcd71a95e6e7fbdfadce364500a0baf8da0d3389495e746a41_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "carts-db",
                        "end": {
                            "col": 23,
                            "line": 88,
                            "offset": 1488
                        },
                        "start": {
                            "col": 15,
                            "line": 88,
                            "offset": 1480
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 93,
                            "offset": 1601
                        },
                        "start": {
                            "col": 9,
                            "line": 93,
                            "offset": 1586
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 93,
                "offset": 1586
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 153,
                "offset": 2827
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ef2d4197aa7eb5db05d0a4a5e6149ef1f4f7be9ff2d6bc348bace72211a32a05022f199a4cdb25a0a540779950b7980b8971db57b6d5686b45872d2834759bf3_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "carts",
                        "end": {
                            "col": 20,
                            "line": 144,
                            "offset": 2479
                        },
                        "start": {
                            "col": 15,
                            "line": 144,
                            "offset": 2474
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 153,
                            "offset": 2827
                        },
                        "start": {
                            "col": 9,
                            "line": 153,
                            "offset": 2812
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 153,
                "offset": 2812
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 202,
                "offset": 3740
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 202,
                            "offset": 3740
                        },
                        "start": {
                            "col": 5,
                            "line": 202,
                            "offset": 3736
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 202,
                "offset": 3736
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 204,
                "offset": 3772
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1f1f31257c40e84c42b67af8eecd8196041eb57a888d0d1d7179ef57864b87546343594302158341b2389e6d799c0e7dde097d409bf73c4aea372b8d403c086e_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: catalogue-db",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "catalogue-db",
                        "end": {
                            "col": 27,
                            "line": 204,
                            "offset": 3786
                        },
                        "start": {
                            "col": 15,
                            "line": 204,
                            "offset": 3774
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 204,
                            "offset": 3772
                        },
                        "start": {
                            "col": 9,
                            "line": 204,
                            "offset": 3768
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 204,
                "offset": 3768
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 253,
                "offset": 4720
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b50c4a31a4c2e034d629ddc5631f7891e277217993041c50c08732cd06d5004d905e7963556435e1466d31e414b4ab612c1b7cf84f17c8f67a5a15c55437adf1_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "catalogue",
                        "end": {
                            "col": 24,
                            "line": 249,
                            "offset": 4606
                        },
                        "start": {
                            "col": 15,
                            "line": 249,
                            "offset": 4597
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 253,
                            "offset": 4720
                        },
                        "start": {
                            "col": 9,
                            "line": 253,
                            "offset": 4705
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 253,
                "offset": 4705
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 295,
                "offset": 5436
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_2",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 295,
                            "offset": 5436
                        },
                        "start": {
                            "col": 5,
                            "line": 295,
                            "offset": 5432
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 295,
                "offset": 5432
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 302,
                "offset": 5614
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f5c73daa40cad862afdb53cb29d9354949794f1fdda78c7684a1ecb424c451ffd86ff495c6c5e7dc86155e42a7fb4de557318f600b4737c0d15b56cf2238f9fb_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "user-db",
                        "end": {
                            "col": 22,
                            "line": 297,
                            "offset": 5477
                        },
                        "start": {
                            "col": 15,
                            "line": 297,
                            "offset": 5470
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 302,
                            "offset": 5614
                        },
                        "start": {
                            "col": 9,
                            "line": 302,
                            "offset": 5599
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 302,
                "offset": 5599
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 360,
                "offset": 6664
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a0ff71aac41f186ea519fb6875075758d5545cdf8ae1fdd42816f73fb611d0e241301aa947169c2fd4976f82773e31661bb9b4172908cfc04928e48d889102e0_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "user",
                        "end": {
                            "col": 19,
                            "line": 353,
                            "offset": 6484
                        },
                        "start": {
                            "col": 15,
                            "line": 353,
                            "offset": 6480
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 360,
                            "offset": 6664
                        },
                        "start": {
                            "col": 9,
                            "line": 360,
                            "offset": 6649
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 360,
                "offset": 6649
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 408,
                "offset": 7527
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c15173a9ae40f529f23e908722b523185cc2d3bb0c8572bf6d7c75d8f050430bc5486634dfd844aa120c52a377c8d9591a4a82a3070a8107872776d73f2c019a_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "payment",
                        "end": {
                            "col": 22,
                            "line": 404,
                            "offset": 7415
                        },
                        "start": {
                            "col": 15,
                            "line": 404,
                            "offset": 7408
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 408,
                            "offset": 7527
                        },
                        "start": {
                            "col": 9,
                            "line": 408,
                            "offset": 7512
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 408,
                "offset": 7512
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 452,
                "offset": 8325
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_3",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 452,
                            "offset": 8325
                        },
                        "start": {
                            "col": 5,
                            "line": 452,
                            "offset": 8321
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 452,
                "offset": 8321
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 454,
                "offset": 8357
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "993cc63281d8000ee8ba9c7224ca5e30141a94b22fe0bb1355ce9d917f64029ef5b4ee865ca0ed909a55e3e462026315b3f2239cb552f00a98b6bf4b79e44fa4_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: queue-master",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "queue-master",
                        "end": {
                            "col": 27,
                            "line": 454,
                            "offset": 8371
                        },
                        "start": {
                            "col": 15,
                            "line": 454,
                            "offset": 8359
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 454,
                            "offset": 8357
                        },
                        "start": {
                            "col": 9,
                            "line": 454,
                            "offset": 8353
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 454,
                "offset": 8353
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 491,
                "offset": 8977
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_4",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 491,
                            "offset": 8977
                        },
                        "start": {
                            "col": 5,
                            "line": 491,
                            "offset": 8973
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 491,
                "offset": 8973
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 497,
                "offset": 9118
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a8cc7d3e6998d334480b287a7a4509b29261ee22467c80118305f4619bb5452e41b810f1b822827b9c893fb205e6d6af60c1eda759be02021cb2a63aa0848712_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "rabbitmq",
                        "end": {
                            "col": 23,
                            "line": 493,
                            "offset": 9019
                        },
                        "start": {
                            "col": 15,
                            "line": 493,
                            "offset": 9011
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 497,
                            "offset": 9118
                        },
                        "start": {
                            "col": 9,
                            "line": 497,
                            "offset": 9103
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 497,
                "offset": 9103
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 551,
                "offset": 10235
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7426e932d6823690a8df8385f3ca868582af8db4fdec236d17a4378d17a5bdf9b40cde38508f18328faa1d64d6c43bcf6d9f77193d1f9061045642c8f1fa14bc_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "shipping",
                        "end": {
                            "col": 23,
                            "line": 542,
                            "offset": 9885
                        },
                        "start": {
                            "col": 15,
                            "line": 542,
                            "offset": 9877
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 551,
                            "offset": 10235
                        },
                        "start": {
                            "col": 9,
                            "line": 551,
                            "offset": 10220
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 551,
                "offset": 10220
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 600,
                "offset": 11129
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4130366db7052a9b20ec2af4e8024c0ef27539dd1ea8f3e9bf6d4aeb252ae41d8ca13cd7686411e2e83cf66d44b01a76d81391e6f65932087fb939798f6e814c_5",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 600,
                            "offset": 11129
                        },
                        "start": {
                            "col": 5,
                            "line": 600,
                            "offset": 11125
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 600,
                "offset": 11125
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 607,
                "offset": 11285
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "25a70302513154c7e86f3e0d6f1fa620c2ee8343c84279ac25c5acc4deac60f787b8f274d53681eb2a7107beeb1aab8c5fb9ae4f06742ef204266ddc7c280315_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "orders-db",
                        "end": {
                            "col": 24,
                            "line": 602,
                            "offset": 11172
                        },
                        "start": {
                            "col": 15,
                            "line": 602,
                            "offset": 11163
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 607,
                            "offset": 11285
                        },
                        "start": {
                            "col": 9,
                            "line": 607,
                            "offset": 11270
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 607,
                "offset": 11270
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 667,
                "offset": 12519
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2c1c8e41cc013cdfe1124c23aa99b8a0b32132558e55fa1d05e283fe27832536306244e1438ac734ad67fdca52c4c42bb638fe2b37b147df2e8ba59d73e7b0ee_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "orders",
                        "end": {
                            "col": 21,
                            "line": 658,
                            "offset": 12171
                        },
                        "start": {
                            "col": 15,
                            "line": 658,
                            "offset": 12165
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 667,
                            "offset": 12519
                        },
                        "start": {
                            "col": 9,
                            "line": 667,
                            "offset": 12504
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/original/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 667,
                "offset": 12504
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 48,
                "offset": 826
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7182c5f7ef34b62104a8494808d05d09aa5640dfea80036c49c0e03e554dce6ffde10529cd4db4033a831486029f6a2646e47cb9ec5250458e415b42e63bc969_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "front-end",
                        "end": {
                            "col": 24,
                            "line": 40,
                            "offset": 622
                        },
                        "start": {
                            "col": 15,
                            "line": 40,
                            "offset": 613
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 48,
                            "offset": 826
                        },
                        "start": {
                            "col": 9,
                            "line": 48,
                            "offset": 811
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 48,
                "offset": 811
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 90,
                "offset": 1552
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 90,
                            "offset": 1552
                        },
                        "start": {
                            "col": 5,
                            "line": 90,
                            "offset": 1548
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 90,
                "offset": 1548
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 97,
                "offset": 1707
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8ac334acee1808d88d2c44f09affa2e61802e39a2102f9b41be3555ce398eab4382f0029c095e8a2a86da930c5e815dac6f55311d1dd34efd3199baebbb18bd2_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "carts-db",
                        "end": {
                            "col": 23,
                            "line": 92,
                            "offset": 1594
                        },
                        "start": {
                            "col": 15,
                            "line": 92,
                            "offset": 1586
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 97,
                            "offset": 1707
                        },
                        "start": {
                            "col": 9,
                            "line": 97,
                            "offset": 1692
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 97,
                "offset": 1692
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 159,
                "offset": 2986
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ff6ca26e0725e99b5b8460ac7083fe5d279958db2c5bb1ad2f32dd42d8d9fcb0053a8fdb5038fab97cc1b4f811b7bc23b79f69e0d11ccac5db4841aa70893520_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "carts",
                        "end": {
                            "col": 20,
                            "line": 150,
                            "offset": 2638
                        },
                        "start": {
                            "col": 15,
                            "line": 150,
                            "offset": 2633
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 159,
                            "offset": 2986
                        },
                        "start": {
                            "col": 9,
                            "line": 159,
                            "offset": 2971
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 159,
                "offset": 2971
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 210,
                "offset": 3952
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 210,
                            "offset": 3952
                        },
                        "start": {
                            "col": 5,
                            "line": 210,
                            "offset": 3948
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 210,
                "offset": 3948
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 212,
                "offset": 3984
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9d1129184690143768d2bbc2cc2e46b23c442ab59ff72b10713d48b690134a1e17cd51c54604315e710f2dd53bbe5cec24be140503ecf7c01bad2e9117c7c74d_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: catalogue-db",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "catalogue-db",
                        "end": {
                            "col": 27,
                            "line": 212,
                            "offset": 3998
                        },
                        "start": {
                            "col": 15,
                            "line": 212,
                            "offset": 3986
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 212,
                            "offset": 3984
                        },
                        "start": {
                            "col": 9,
                            "line": 212,
                            "offset": 3980
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 212,
                "offset": 3980
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 263,
                "offset": 4985
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "fd86e8a06e97513528e0a62a7e44a24129aceb1525388dbe534710cc6defb3ac8bc4d684e24b77e7061b66e5426c7e73c92257ec1d31fe022e23343cae256f48_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "catalogue",
                        "end": {
                            "col": 24,
                            "line": 259,
                            "offset": 4871
                        },
                        "start": {
                            "col": 15,
                            "line": 259,
                            "offset": 4862
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 263,
                            "offset": 4985
                        },
                        "start": {
                            "col": 9,
                            "line": 263,
                            "offset": 4970
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 263,
                "offset": 4970
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 307,
                "offset": 5754
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_2",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 307,
                            "offset": 5754
                        },
                        "start": {
                            "col": 5,
                            "line": 307,
                            "offset": 5750
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 307,
                "offset": 5750
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 314,
                "offset": 5932
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "579c5b7847b7d30d8cc96ee80efb7612af68eb151027ef6931820046adc0b471bb8d157571c09c3ea3658f7418a8164f1425470d902f1348026ce52503588353_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "user-db",
                        "end": {
                            "col": 22,
                            "line": 309,
                            "offset": 5795
                        },
                        "start": {
                            "col": 15,
                            "line": 309,
                            "offset": 5788
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 314,
                            "offset": 5932
                        },
                        "start": {
                            "col": 9,
                            "line": 314,
                            "offset": 5917
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 314,
                "offset": 5917
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 374,
                "offset": 7035
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d84c18792d6ee84620e34d184b48144353d58f2f2754589da15c236eb7b5d5560281f4b2689b996cff47c4490ee52a9a6968bdc396b2d9b03247550cea0022d0_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "user",
                        "end": {
                            "col": 19,
                            "line": 367,
                            "offset": 6855
                        },
                        "start": {
                            "col": 15,
                            "line": 367,
                            "offset": 6851
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 374,
                            "offset": 7035
                        },
                        "start": {
                            "col": 9,
                            "line": 374,
                            "offset": 7020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 374,
                "offset": 7020
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 424,
                "offset": 7951
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "01bdf3b7fb860cd506c5b1057411fad21cd4811cff8df8dd2c99f336599b18351affb5406784fe1f079427faef4b62191ae626d1aaaf7ee1b9b7776c3d62c413_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "payment",
                        "end": {
                            "col": 22,
                            "line": 420,
                            "offset": 7839
                        },
                        "start": {
                            "col": 15,
                            "line": 420,
                            "offset": 7832
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 424,
                            "offset": 7951
                        },
                        "start": {
                            "col": 9,
                            "line": 424,
                            "offset": 7936
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 424,
                "offset": 7936
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 470,
                "offset": 8802
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_3",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 470,
                            "offset": 8802
                        },
                        "start": {
                            "col": 5,
                            "line": 470,
                            "offset": 8798
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 470,
                "offset": 8798
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 472,
                "offset": 8834
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9493eaa01b7c0bd7a6b788bff37a1e52857e55f32b864882be812c329b9fab78509ee4f7e199bb0260feb9d14aec21139618974dac1b0cf9d4b3f8b39a21f1ae_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: queue-master",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "queue-master",
                        "end": {
                            "col": 27,
                            "line": 472,
                            "offset": 8848
                        },
                        "start": {
                            "col": 15,
                            "line": 472,
                            "offset": 8836
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 472,
                            "offset": 8834
                        },
                        "start": {
                            "col": 9,
                            "line": 472,
                            "offset": 8830
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 472,
                "offset": 8830
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 511,
                "offset": 9507
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_4",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 511,
                            "offset": 9507
                        },
                        "start": {
                            "col": 5,
                            "line": 511,
                            "offset": 9503
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 511,
                "offset": 9503
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 517,
                "offset": 9648
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a01baf4dec9d6ab40913d469d8e02345752845a3367310ebcb5a6338187b16e8ebcf4afa4d4c8f20ead87ea2645b7cb0c53468f8c948eee273d3e7dfe21d8c4d_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "rabbitmq",
                        "end": {
                            "col": 23,
                            "line": 513,
                            "offset": 9549
                        },
                        "start": {
                            "col": 15,
                            "line": 513,
                            "offset": 9541
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 517,
                            "offset": 9648
                        },
                        "start": {
                            "col": 9,
                            "line": 517,
                            "offset": 9633
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 517,
                "offset": 9633
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 573,
                "offset": 10818
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "3e51362e55c70fcd77ae8f2ccb90fb7a0aaea66e8d4eeddae520e97081951fd67f07cd59c3fb2b049bf148511a09dca1fc02a3cbd7fc59b5fa869ed1d51ca667_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "shipping",
                        "end": {
                            "col": 23,
                            "line": 564,
                            "offset": 10468
                        },
                        "start": {
                            "col": 15,
                            "line": 564,
                            "offset": 10460
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 573,
                            "offset": 10818
                        },
                        "start": {
                            "col": 9,
                            "line": 573,
                            "offset": 10803
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 573,
                "offset": 10803
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 624,
                "offset": 11765
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f19ba075b7e25b74a0778b44e70b74c9dd9e3fdbae5a4e032e8bcbcbc664ae60e59320b304404a379ef60684d8242b263875ecb287f1b2f0c3633a24481adbc9_5",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 624,
                            "offset": 11765
                        },
                        "start": {
                            "col": 5,
                            "line": 624,
                            "offset": 11761
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 5,
                "line": 624,
                "offset": 11761
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 631,
                "offset": 11921
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "db2bbf73ead891e06e2bff8e97363ca080f9104d7ca1a7d7c607940d710f38fa702fdd56d4c4e46ce1f0603c346243f2130a3986b917ef71e7e6dfd1db040f29_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "orders-db",
                        "end": {
                            "col": 24,
                            "line": 626,
                            "offset": 11808
                        },
                        "start": {
                            "col": 15,
                            "line": 626,
                            "offset": 11799
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 631,
                            "offset": 11921
                        },
                        "start": {
                            "col": 9,
                            "line": 631,
                            "offset": 11906
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 631,
                "offset": 11906
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
            "end": {
                "col": 24,
                "line": 693,
                "offset": 13208
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "fdaec1ecca9cf48eb9f56a7c6a95e88346d464ed36a06bf81edd10a7f4dc9104e47ca6a68337a7d823b3ed88cb132766d5102c857b9c1b486f2a8b64ec6e4a98_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false #",
                "is_ignored": false,
                "lines": "        securityContext:",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding the `allowPrivilegeEscalation` parameter to your the `securityContext`, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10057,
                            "rule_id": "6JUqEO",
                            "rv_id": 835319,
                            "url": "https://semgrep.dev/playground/r/BjTeLG4/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                            "version_id": "BjTeLG4"
                        }
                    },
                    "shortlink": "https://sg.run/ljp6",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation.allow-privilege-escalation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 16,
                            "line": 1,
                            "offset": 15
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$CONTAINER": {
                        "abstract_content": "orders",
                        "end": {
                            "col": 21,
                            "line": 684,
                            "offset": 12860
                        },
                        "start": {
                            "col": 15,
                            "line": 684,
                            "offset": 12854
                        }
                    },
                    "$SC": {
                        "abstract_content": "securityContext",
                        "end": {
                            "col": 24,
                            "line": 693,
                            "offset": 13208
                        },
                        "start": {
                            "col": 9,
                            "line": 693,
                            "offset": 13193
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/sock-shop/sock-shop-deployment.yaml",
            "start": {
                "col": 9,
                "line": 693,
                "offset": 13193
            }
        },
        {
            "check_id": "cpp.lang.security.filesystem.path-manipulation.path-manipulation",
            "end": {
                "col": 28,
                "line": 10,
                "offset": 181
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "argv",
                            "location": {
                                "end": {
                                    "col": 30,
                                    "line": 4,
                                    "offset": 69
                                },
                                "path": "examples/vagrant-selinux/selinux-test/read.c",
                                "start": {
                                    "col": 26,
                                    "line": 4,
                                    "offset": 65
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 28,
                                    "line": 10,
                                    "offset": 181
                                },
                                "path": "examples/vagrant-selinux/selinux-test/read.c",
                                "start": {
                                    "col": 21,
                                    "line": 10,
                                    "offset": 174
                                }
                            },
                            "argv[1]"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 30,
                                    "line": 4,
                                    "offset": 69
                                },
                                "path": "examples/vagrant-selinux/selinux-test/read.c",
                                "start": {
                                    "col": 26,
                                    "line": 4,
                                    "offset": 65
                                }
                            },
                            "argv"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "f1a05be94977e6dd9ac434ab41afa2fc1a760865cc5867eb3b88c7af7be20fb8f50774bb6027cee8a879a082b5a6ea68f155a759f8b578fb9a1572c78f9f6ef9_0",
                "is_ignored": false,
                "lines": "    FILE *f = fopen(argv[1], \"r\");",
                "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files.",
                "metadata": {
                    "category": "security",
                    "cert": [
                        "C",
                        "C++",
                        "FIO02-C",
                        "L2"
                    ],
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                    ],
                    "cwe2020-top25": true,
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "display-name": "Path Traversal",
                    "functional-categories": [
                        "file::sink::file-access",
                        "os::source::console",
                        "os::source::environment",
                        "web::source::http-body"
                    ],
                    "impact": "HIGH",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A01:2021 - Broken Access Control",
                        "A05:2017 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control",
                        "https://owasp.org/www-community/attacks/Path_Traversal",
                        "https://portswigger.net/web-security/file-path-traversal",
                        "https://wiki.sei.cmu.edu/confluence/display/c/FIO02-C.+Canonicalize+path+names+originating+from+tainted+sources"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 114764,
                            "rule_id": "wdU9pnn",
                            "rv_id": 923940,
                            "url": "https://semgrep.dev/playground/r/BjTKAKl/cpp.lang.security.filesystem.path-manipulation.path-manipulation",
                            "version_id": "BjTKAKl"
                        }
                    },
                    "shortlink": "https://sg.run/X5gAA",
                    "source": "https://semgrep.dev/r/cpp.lang.security.filesystem.path-manipulation.path-manipulation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cpp"
                    ],
                    "vulnerability_class": [
                        "Path Traversal"
                    ]
                },
                "metavars": {
                    "$ARGC": {
                        "abstract_content": "argc",
                        "end": {
                            "col": 18,
                            "line": 4,
                            "offset": 57
                        },
                        "start": {
                            "col": 14,
                            "line": 4,
                            "offset": 53
                        }
                    },
                    "$ARGV": {
                        "abstract_content": "argv",
                        "end": {
                            "col": 30,
                            "line": 4,
                            "offset": 69
                        },
                        "start": {
                            "col": 26,
                            "line": 4,
                            "offset": 65
                        }
                    },
                    "$ARGV_TY": {
                        "abstract_content": "char*[]",
                        "end": {
                            "col": 32,
                            "line": 4,
                            "offset": 71
                        },
                        "start": {
                            "col": 20,
                            "line": 4,
                            "offset": 59
                        }
                    },
                    "$FUNC": {
                        "abstract_content": "main",
                        "end": {
                            "col": 9,
                            "line": 4,
                            "offset": 48
                        },
                        "start": {
                            "col": 5,
                            "line": 4,
                            "offset": 44
                        }
                    },
                    "$RET": {
                        "abstract_content": "int",
                        "end": {
                            "col": 4,
                            "line": 4,
                            "offset": 43
                        },
                        "start": {
                            "col": 1,
                            "line": 4,
                            "offset": 40
                        }
                    },
                    "$SRC": {
                        "abstract_content": "argv[1]",
                        "end": {
                            "col": 28,
                            "line": 10,
                            "offset": 181
                        },
                        "start": {
                            "col": 21,
                            "line": 10,
                            "offset": 174
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/vagrant-selinux/selinux-test/read.c",
            "start": {
                "col": 21,
                "line": 10,
                "offset": 174
            }
        },
        {
            "check_id": "cpp.lang.security.filesystem.path-manipulation.path-manipulation",
            "end": {
                "col": 28,
                "line": 10,
                "offset": 188
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "argv",
                            "location": {
                                "end": {
                                    "col": 30,
                                    "line": 4,
                                    "offset": 69
                                },
                                "path": "examples/vagrant-selinux/selinux-test/write.c",
                                "start": {
                                    "col": 26,
                                    "line": 4,
                                    "offset": 65
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 28,
                                    "line": 10,
                                    "offset": 188
                                },
                                "path": "examples/vagrant-selinux/selinux-test/write.c",
                                "start": {
                                    "col": 21,
                                    "line": 10,
                                    "offset": 181
                                }
                            },
                            "argv[1]"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 30,
                                    "line": 4,
                                    "offset": 69
                                },
                                "path": "examples/vagrant-selinux/selinux-test/write.c",
                                "start": {
                                    "col": 26,
                                    "line": 4,
                                    "offset": 65
                                }
                            },
                            "argv"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "434d46fb17051ff4a261f91ec896f940d7166eba325728b289d1ac2eacd3a701bcadb2945182b532b43864667d068d126f17e55f8298e2f915645f25b1fa549f_0",
                "is_ignored": false,
                "lines": "    FILE *f = fopen(argv[1], \"w\");",
                "message": "The application builds a file path from potentially untrusted data, which can lead to a path traversal vulnerability. An attacker can manipulate the path which the application uses to access files. If the application does not validate user input and sanitize file paths, sensitive files such as configuration or user data can be accessed, potentially creating or overwriting files. To prevent this vulnerability, validate and sanitize any input that is used to create references to file paths. Also, enforce strict file access controls. For example, choose privileges allowing public-facing applications to access only the required files.",
                "metadata": {
                    "category": "security",
                    "cert": [
                        "C",
                        "C++",
                        "FIO02-C",
                        "L2"
                    ],
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                    ],
                    "cwe2020-top25": true,
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "display-name": "Path Traversal",
                    "functional-categories": [
                        "file::sink::file-access",
                        "os::source::console",
                        "os::source::environment",
                        "web::source::http-body"
                    ],
                    "impact": "HIGH",
                    "license": "Copyright 2023 Semgrep, Inc.",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A01:2021 - Broken Access Control",
                        "A05:2017 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A01_2021-Broken_Access_Control",
                        "https://owasp.org/www-community/attacks/Path_Traversal",
                        "https://portswigger.net/web-security/file-path-traversal",
                        "https://wiki.sei.cmu.edu/confluence/display/c/FIO02-C.+Canonicalize+path+names+originating+from+tainted+sources"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "pro_rules",
                            "r_id": 114764,
                            "rule_id": "wdU9pnn",
                            "rv_id": 923940,
                            "url": "https://semgrep.dev/playground/r/BjTKAKl/cpp.lang.security.filesystem.path-manipulation.path-manipulation",
                            "version_id": "BjTKAKl"
                        }
                    },
                    "shortlink": "https://sg.run/X5gAA",
                    "source": "https://semgrep.dev/r/cpp.lang.security.filesystem.path-manipulation.path-manipulation",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "cpp"
                    ],
                    "vulnerability_class": [
                        "Path Traversal"
                    ]
                },
                "metavars": {
                    "$ARGC": {
                        "abstract_content": "argc",
                        "end": {
                            "col": 18,
                            "line": 4,
                            "offset": 57
                        },
                        "start": {
                            "col": 14,
                            "line": 4,
                            "offset": 53
                        }
                    },
                    "$ARGV": {
                        "abstract_content": "argv",
                        "end": {
                            "col": 30,
                            "line": 4,
                            "offset": 69
                        },
                        "start": {
                            "col": 26,
                            "line": 4,
                            "offset": 65
                        }
                    },
                    "$ARGV_TY": {
                        "abstract_content": "char*[]",
                        "end": {
                            "col": 32,
                            "line": 4,
                            "offset": 71
                        },
                        "start": {
                            "col": 20,
                            "line": 4,
                            "offset": 59
                        }
                    },
                    "$FUNC": {
                        "abstract_content": "main",
                        "end": {
                            "col": 9,
                            "line": 4,
                            "offset": 48
                        },
                        "start": {
                            "col": 5,
                            "line": 4,
                            "offset": 44
                        }
                    },
                    "$RET": {
                        "abstract_content": "int",
                        "end": {
                            "col": 4,
                            "line": 4,
                            "offset": 43
                        },
                        "start": {
                            "col": 1,
                            "line": 4,
                            "offset": 40
                        }
                    },
                    "$SRC": {
                        "abstract_content": "argv[1]",
                        "end": {
                            "col": 28,
                            "line": 10,
                            "offset": 188
                        },
                        "start": {
                            "col": 21,
                            "line": 10,
                            "offset": 181
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/vagrant-selinux/selinux-test/write.c",
            "start": {
                "col": 21,
                "line": 10,
                "offset": 181
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 38,
                "offset": 567
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6ce6e1e8b336623da97853d7ead10154a32b5d512d8dbcea829a9de4acf9e250430ffeb78b29c0f8b6382ed924b506bac50ecab5f4dbd20315e1f693e57d6adf_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 38,
                            "offset": 567
                        },
                        "start": {
                            "col": 5,
                            "line": 38,
                            "offset": 563
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/original/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 5,
                "line": 38,
                "offset": 563
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 40,
                "offset": 599
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "76e6430c04f930ebc73ce3915395f04f7eb9dcb792b5541f66cf3b80e5cccb57db32959cb1244fe5e82f1c5ecc4ce6200746846e7f89c38bbd186b829615ae46_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: wordpress",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "wordpress",
                        "end": {
                            "col": 24,
                            "line": 40,
                            "offset": 610
                        },
                        "start": {
                            "col": 15,
                            "line": 40,
                            "offset": 601
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 40,
                            "offset": 599
                        },
                        "start": {
                            "col": 9,
                            "line": 40,
                            "offset": 595
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/original/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 9,
                "line": 40,
                "offset": 595
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 81,
                "offset": 1296
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6ce6e1e8b336623da97853d7ead10154a32b5d512d8dbcea829a9de4acf9e250430ffeb78b29c0f8b6382ed924b506bac50ecab5f4dbd20315e1f693e57d6adf_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 81,
                            "offset": 1296
                        },
                        "start": {
                            "col": 5,
                            "line": 81,
                            "offset": 1292
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/original/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 5,
                "line": 81,
                "offset": 1292
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 83,
                "offset": 1328
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0368eb76b80c2abc966ef50a7efdc084da1f3778fe8308b5c726f58e9bf4d73b700eba3565de87d64780fba06462ac0828948ec2e2019b06639f8b4d2677758d_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: mysql",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "mysql",
                        "end": {
                            "col": 20,
                            "line": 83,
                            "offset": 1335
                        },
                        "start": {
                            "col": 15,
                            "line": 83,
                            "offset": 1330
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 83,
                            "offset": 1328
                        },
                        "start": {
                            "col": 9,
                            "line": 83,
                            "offset": 1324
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/original/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 9,
                "line": 83,
                "offset": 1324
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 41,
                "offset": 721
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c6416763976eabe5d92236d8468336445d470dfaf1fb8809292a11b9d055f9f3e888990afa929cf20240aab276d8318e415d2d370002126d75f534f8d6b10065_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 41,
                            "offset": 721
                        },
                        "start": {
                            "col": 5,
                            "line": 41,
                            "offset": 717
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 5,
                "line": 41,
                "offset": 717
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 43,
                "offset": 753
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "10012d7cc9c7de481e400ec4b69769259a242750c93436826a0417e4af8cbf80fee76ae2a6b6f294bbbd9e08b75df723206e790b210a3fa9a148cb8b0d78acb4_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: wordpress",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "wordpress",
                        "end": {
                            "col": 24,
                            "line": 43,
                            "offset": 764
                        },
                        "start": {
                            "col": 15,
                            "line": 43,
                            "offset": 755
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 43,
                            "offset": 753
                        },
                        "start": {
                            "col": 9,
                            "line": 43,
                            "offset": 749
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 9,
                "line": 43,
                "offset": 749
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 87,
                "offset": 1596
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c6416763976eabe5d92236d8468336445d470dfaf1fb8809292a11b9d055f9f3e888990afa929cf20240aab276d8318e415d2d370002126d75f534f8d6b10065_1",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 87,
                            "offset": 1596
                        },
                        "start": {
                            "col": 5,
                            "line": 87,
                            "offset": 1592
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 5,
                "line": 87,
                "offset": 1592
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 89,
                "offset": 1628
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1e9d2238523078d3d883eaf74035e6d345764b00d9f4062d473eb8d5aee9b372cf4a56a81dce26863e1eaf45e635ddd04e00f909f7702abfd0c98b1a361e4e52_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: mysql",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "mysql",
                        "end": {
                            "col": 20,
                            "line": 89,
                            "offset": 1635
                        },
                        "start": {
                            "col": 15,
                            "line": 89,
                            "offset": 1630
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 89,
                            "offset": 1628
                        },
                        "start": {
                            "col": 9,
                            "line": 89,
                            "offset": 1624
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "examples/wordpress-mysql/wordpress-mysql-deployment.yaml",
            "start": {
                "col": 9,
                "line": 89,
                "offset": 1624
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 6,
                "offset": 129
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6edb95decfadcbc267db024eba46e611b12d8b0e6a8e14e6a621e30165ccb73bf1d6ad7bcdedfd755c20f72cb40acba50d5f1566c0709bc053d80a4f4b0d9253_0",
                "is_ignored": false,
                "lines": "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js\">\n    </script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js\"",
                        "end": {
                            "col": 84,
                            "line": 5,
                            "offset": 114
                        },
                        "start": {
                            "col": 12,
                            "line": 5,
                            "offset": 42
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "getting-started/hardening-report.html",
            "start": {
                "col": 5,
                "line": 5,
                "offset": 35
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 8,
                "offset": 233
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ae1f6a35abbc897a326dc113c69a8dc4035262f106bbff9b9afaf2474dd4977b4b030df8f15e349335889e8ef6fb42976742619b41b5275e1daf12fdde54bf4a_0",
                "is_ignored": false,
                "lines": "    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js\">\n    </script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 7,
                            "offset": 218
                        },
                        "start": {
                            "col": 12,
                            "line": 7,
                            "offset": 141
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "getting-started/hardening-report.html",
            "start": {
                "col": 5,
                "line": 7,
                "offset": 134
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 108,
                "line": 9,
                "offset": 341
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8b43e7f8f2fc25b33914cc382f8ed5aba8419f9260a096aba0a7a8d858d625acc23b8397968855f75391c0c52bf0a0ca4874c21dc527759bbf9fd93a695d8f6a_0",
                "is_ignored": false,
                "lines": "    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css\"",
                        "end": {
                            "col": 107,
                            "line": 9,
                            "offset": 340
                        },
                        "start": {
                            "col": 10,
                            "line": 9,
                            "offset": 243
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "getting-started/hardening-report.html",
            "start": {
                "col": 5,
                "line": 9,
                "offset": 238
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 107,
                "line": 10,
                "offset": 448
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9b9a3fe4929ff3510fdf2f8b72cb044f6a2acf23badc9a9e3162b9a11e8ce4bfe0b7989356932d0b3600b9f03bc05f850228d8409383499aad287621751b2f56_0",
                "is_ignored": false,
                "lines": "    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " rel=\"stylesheet\" type=\"text/css\" href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\"",
                        "end": {
                            "col": 106,
                            "line": 10,
                            "offset": 447
                        },
                        "start": {
                            "col": 10,
                            "line": 10,
                            "offset": 351
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "getting-started/hardening-report.html",
            "start": {
                "col": 5,
                "line": 10,
                "offset": 346
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 10,
                "offset": 298
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d68e03dd8e4db0e58c98936c942affc9b2d627698c35f0dc1728c21e2db93959df3e0827d038f41b21b5f7e2763762cc3ff955bfc1e6be7280d5de7aee953698_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 10,
                            "offset": 298
                        },
                        "start": {
                            "col": 5,
                            "line": 10,
                            "offset": 294
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pkg/KubeArmorController/config/default/manager_auth_proxy_patch.yaml",
            "start": {
                "col": 5,
                "line": 10,
                "offset": 294
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 8,
                "offset": 120
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "14d21ae48968e2a5ccf8e07d65919c5fe9c95d353074e6dc3050b5417d921cb650b71c8a06a241eda0c748aa80f4d1235d07a202a361f66f5ec2c1a5cf063c7d_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 8,
                            "offset": 120
                        },
                        "start": {
                            "col": 5,
                            "line": 8,
                            "offset": 116
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pkg/KubeArmorController/config/default/manager_config_patch.yaml",
            "start": {
                "col": 5,
                "line": 8,
                "offset": 116
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 8,
                "offset": 120
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "795fbb5b29baf4d561edd64f0eca579941048fd24d498b3e5a1aef462eaab1ae70121ac78efda50d6dbc238182da35ad6a1e2366d073bb59a4febf407636979f_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 8,
                            "offset": 120
                        },
                        "start": {
                            "col": 5,
                            "line": 8,
                            "offset": 116
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pkg/KubeArmorController/config/default/manager_webhook_patch.yaml",
            "start": {
                "col": 5,
                "line": 8,
                "offset": 116
            }
        },
        {
            "check_id": "yaml.kubernetes.security.run-as-non-root.run-as-non-root",
            "end": {
                "col": 9,
                "line": 13,
                "offset": 239
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a64616190f4175a1f80346aeed8072cc7efad0d3daf3c6a21f6c0a0f7b2eb10d9e688716aa7afd53488a4683604fc6a578616a1c3a56cb141959f8cddd073881_0",
                "fix": "spec:\n      securityContext:\n        runAsNonRoot: true #",
                "is_ignored": false,
                "lines": "    spec:",
                "message": "When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-250: Execution with Unnecessary Privileges"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/",
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 10134,
                            "rule_id": "ZqUqeK",
                            "rv_id": 835331,
                            "url": "https://semgrep.dev/playground/r/2KT7O6O/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                            "version_id": "2KT7O6O"
                        }
                    },
                    "shortlink": "https://sg.run/dgP5",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$SPEC": {
                        "abstract_content": "spec",
                        "end": {
                            "col": 9,
                            "line": 13,
                            "offset": 239
                        },
                        "start": {
                            "col": 5,
                            "line": 13,
                            "offset": 235
                        }
                    }
                },
                "severity": "INFO",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pkg/KubeArmorOperator/config/operator/deployment.yaml",
            "start": {
                "col": 5,
                "line": 13,
                "offset": 235
            }
        },
        {
            "check_id": "yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
            "end": {
                "col": 13,
                "line": 16,
                "offset": 316
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "3bc0e72b939d2df43b023751ee8a7b77d130dd40956f8d59b66e2f90925a6f83721d6ddc4c6f98079fd4510e76979a2c4d9739c991197bc18d4e3085a5ca69b7_0",
                "fix": "securityContext:\n          allowPrivilegeEscalation: false\n        name",
                "is_ignored": false,
                "lines": "      - name: operator",
                "message": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-732: Incorrect Permission Assignment for Critical Resource"
                    ],
                    "cwe2021-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
                        "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
                        "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 47276,
                            "rule_id": "WAU5J6",
                            "rv_id": 835317,
                            "url": "https://semgrep.dev/playground/r/RGTKxwB/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                            "version_id": "RGTKxwB"
                        }
                    },
                    "shortlink": "https://sg.run/eleR",
                    "source": "https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "kubernetes"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$CONTAINER": {
                        "abstract_content": "operator",
                        "end": {
                            "col": 23,
                            "line": 16,
                            "offset": 326
                        },
                        "start": {
                            "col": 15,
                            "line": 16,
                            "offset": 318
                        }
                    },
                    "$NAME": {
                        "abstract_content": "name",
                        "end": {
                            "col": 13,
                            "line": 16,
                            "offset": 316
                        },
                        "start": {
                            "col": 9,
                            "line": 16,
                            "offset": 312
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "pkg/KubeArmorOperator/config/operator/deployment.yaml",
            "start": {
                "col": 9,
                "line": 16,
                "offset": 312
            }
        }
    ],
    "skipped_rules": [],
    "version": "1.95.0"
}