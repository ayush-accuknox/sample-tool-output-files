{"errors": [], "interfile_languages_used": [], "paths": {"scanned": [".all-contributorsrc", ".gitignore", "Dockerfile", "README.md", "docker-compose.yml", "gh-md-toc", "infrastructure/README.md", "infrastructure/application-load-balancer/app.py", "infrastructure/application-load-balancer/cdk.json", "infrastructure/application-load-balancer/cdk.out/LoadBalancerStack.template.json", "infrastructure/application-load-balancer/cdk.out/cdk.out", "infrastructure/application-load-balancer/cdk.out/manifest.json", "infrastructure/application-load-balancer/cdk.out/tree.json", "infrastructure/application-load-balancer/httpd.sh", "infrastructure/application-load-balancer/requirements.txt", "k8s/db-claim0-persistentvolumeclaim.yaml", "k8s/db-deployment.yaml", "k8s/migration-claim0-persistentvolumeclaim.yaml", "k8s/migration-deployment.yaml", "k8s/web-claim0-persistentvolumeclaim.yaml", "k8s/web-deployment.yaml", "k8s/web-service.yaml", "pygoat/Dockerfile", "pygoat/Procfile", "pygoat/Solutions/solution.md", "pygoat/db.sqlite3", "pygoat/docker-compose.yml", "pygoat/introduction/__init__.py", "pygoat/introduction/__pycache__/__init__.cpython-38.pyc", "pygoat/introduction/__pycache__/admin.cpython-38.pyc", "pygoat/introduction/__pycache__/models.cpython-38.pyc", "pygoat/introduction/__pycache__/urls.cpython-38.pyc", "pygoat/introduction/__pycache__/views.cpython-38.pyc", "pygoat/introduction/admin.py", "pygoat/introduction/apps.py", "pygoat/introduction/forms.py", "pygoat/introduction/migrations/0001_initial.py", "pygoat/introduction/migrations/0002_auto_20210414_1510.py", "pygoat/introduction/migrations/0003_password_user.py", "pygoat/introduction/migrations/0004_auto_20210415_1722.py", "pygoat/introduction/migrations/0005_auto_20210415_1748.py", "pygoat/introduction/migrations/0006_comments.py", "pygoat/introduction/migrations/0007_auto_20210418_0022.py", "pygoat/introduction/migrations/0008_otp.py", "pygoat/introduction/migrations/0009_auto_20210517_2047.py", "pygoat/introduction/migrations/__init__.py", "pygoat/introduction/migrations/__pycache__/__init__.cpython-38.pyc", "pygoat/introduction/models.py", "pygoat/introduction/static/Lab/image/xxe.jpg", "pygoat/introduction/static/Lab/xss.js", "pygoat/introduction/static/introduction/style4.css", "pygoat/introduction/templates/Lab/A10/a10.html", "pygoat/introduction/templates/Lab/A10/a10_lab.html", "pygoat/introduction/templates/Lab/A10/debug.log", "pygoat/introduction/templates/Lab/A9/a9.html", "pygoat/introduction/templates/Lab/A9/a9_lab.html", "pygoat/introduction/templates/Lab/AUTH/auth_home.html", "pygoat/introduction/templates/Lab/AUTH/auth_lab.html", "pygoat/introduction/templates/Lab/AUTH/auth_lab_login.html", "pygoat/introduction/templates/Lab/AUTH/auth_lab_signup.html", "pygoat/introduction/templates/Lab/AUTH/auth_success.html", "pygoat/introduction/templates/Lab/BrokenAccess/ba.html", "pygoat/introduction/templates/Lab/BrokenAccess/ba_lab.html", "pygoat/introduction/templates/Lab/BrokenAuth/bau.html", "pygoat/introduction/templates/Lab/BrokenAuth/bau_lab.html", "pygoat/introduction/templates/Lab/BrokenAuth/otp.html", "pygoat/introduction/templates/Lab/CMD/cmd.html", "pygoat/introduction/templates/Lab/CMD/cmd_lab.html", "pygoat/introduction/templates/Lab/DataExp/data_exp.html", "pygoat/introduction/templates/Lab/DataExp/data_exp_lab.html", "pygoat/introduction/templates/Lab/DataExp/robots.txt", "pygoat/introduction/templates/Lab/SQL/sql.html", "pygoat/introduction/templates/Lab/SQL/sql_lab.html", "pygoat/introduction/templates/Lab/XSS/xss.html", "pygoat/introduction/templates/Lab/XSS/xss_lab.html", "pygoat/introduction/templates/Lab/XXE/xxe.html", "pygoat/introduction/templates/Lab/XXE/xxe_lab.html", "pygoat/introduction/templates/Lab/insec_des/insec_des.html", "pygoat/introduction/templates/Lab/insec_des/insec_des_lab.html", "pygoat/introduction/templates/Lab/sec_mis/sec_mis.html", "pygoat/introduction/templates/Lab/sec_mis/sec_mis_lab.html", "pygoat/introduction/templates/introduction/base.html", "pygoat/introduction/templates/introduction/home.html", "pygoat/introduction/templates/registration/login.html", "pygoat/introduction/templates/registration/logout.html", "pygoat/introduction/templates/registration/register.html", "pygoat/introduction/tests.py", "pygoat/introduction/urls.py", "pygoat/introduction/views.py", "pygoat/introduction/xee_see.txt", "pygoat/manage.py", "pygoat/pygoat/__init__.py", "pygoat/pygoat/__pycache__/__init__.cpython-38.pyc", "pygoat/pygoat/__pycache__/settings.cpython-38.pyc", "pygoat/pygoat/__pycache__/urls.cpython-38.pyc", "pygoat/pygoat/__pycache__/wsgi.cpython-38.pyc", "pygoat/pygoat/asgi.py", "pygoat/pygoat/settings.py", "pygoat/pygoat/urls.py", "pygoat/pygoat/wsgi.py", "pygoat/requirements.txt", "pygoat/runtime.txt", "requirements.txt"]}, "results": [{"check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "end": {"col": 40, "line": 122, "offset": 3897}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "token", "location": {"end": {"col": 14, "line": 116, "offset": 3636}, "path": "pygoat/introduction/views.py", "start": {"col": 9, "line": 116, "offset": 3631}}}], "taint_sink": ["CliLoc", [{"end": {"col": 40, "line": 122, "offset": 3897}, "path": "pygoat/introduction/views.py", "start": {"col": 21, "line": 122, "offset": 3878}}, "pickle.loads(token)"]], "taint_source": ["CliLoc", [{"end": {"col": 45, "line": 116, "offset": 3667}, "path": "pygoat/introduction/views.py", "start": {"col": 17, "line": 116, "offset": 3639}}, "request.COOKIES.get('token')"]]}, "engine_kind": "OSS", "fingerprint": "f14147ee9481b395dc6691efed73e2c16a81514217937bfc31c7488ac1bde325de0c37b6df1d8bee7f9e0504be2cf0d60c0057a0264f2f693ff8bb768b8e29b8_0", "is_ignored": false, "lines": "            admin = pickle.loads(token)", "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9467, "rule_id": "OrU3e6", "rv_id": 834402, "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "version_id": "3ZT3A9q"}}, "shortlink": "https://sg.run/9oyr", "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$INSIDE": {"abstract_content": "insec_des_lab", "end": {"col": 18, "line": 113, "offset": 3459}, "start": {"col": 5, "line": 113, "offset": 3446}}, "$PARAM": {"abstract_content": "request", "end": {"col": 26, "line": 113, "offset": 3467}, "start": {"col": 19, "line": 113, "offset": 3460}}, "$PICKLEFUNC": {"abstract_content": "loads", "end": {"col": 33, "line": 122, "offset": 3890}, "start": {"col": 28, "line": 122, "offset": 3885}}, "$REQFUNC": {"abstract_content": "COOKIES", "end": {"col": 32, "line": 116, "offset": 3654}, "start": {"col": 25, "line": 116, "offset": 3647}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 21, "line": 122, "offset": 3878}}, {"check_id": "python.django.security.injection.command.subprocess-injection.subprocess-injection", "end": {"col": 80, "line": 312, "offset": 11299}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "request", "location": {"end": {"col": 20, "line": 300, "offset": 10835}, "path": "pygoat/introduction/views.py", "start": {"col": 13, "line": 300, "offset": 10828}}}, {"content": "domain", "location": {"end": {"col": 19, "line": 303, "offset": 10930}, "path": "pygoat/introduction/views.py", "start": {"col": 13, "line": 303, "offset": 10924}}}, {"content": "command", "location": {"end": {"col": 24, "line": 310, "offset": 11192}, "path": "pygoat/introduction/views.py", "start": {"col": 17, "line": 310, "offset": 11185}}}], "taint_sink": ["CliLoc", [{"end": {"col": 80, "line": 312, "offset": 11299}, "path": "pygoat/introduction/views.py", "start": {"col": 20, "line": 312, "offset": 11239}}, "subprocess.check_output(command,shell=True,encoding=\"UTF-8\")"]], "taint_source": ["CliLoc", [{"end": {"col": 20, "line": 300, "offset": 10835}, "path": "pygoat/introduction/views.py", "start": {"col": 13, "line": 300, "offset": 10828}}, "request"]]}, "engine_kind": "OSS", "fingerprint": "2e6795083063bef4990c652abeff0ee16c59760d216ee4b4d01860015a6491fa21a2e524bc0d161ed1752f76aa78a34ebfee6395c2d783873c0655d4249015f3_0", "is_ignored": false, "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");", "message": "Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://semgrep.dev/docs/cheat-sheets/python-command-injection/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 31144, "rule_id": "EwUepx", "rv_id": 834437, "url": "https://semgrep.dev/playground/r/d6TKgwn/python.django.security.injection.command.subprocess-injection.subprocess-injection", "version_id": "d6TKgwn"}}, "shortlink": "https://sg.run/49BE", "source": "https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection", "subcategory": ["vuln"], "technology": ["flask"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "cmd_lab", "end": {"col": 12, "line": 300, "offset": 10827}, "start": {"col": 5, "line": 300, "offset": 10820}}, "$REQUEST": {"abstract_content": "request", "end": {"col": 20, "line": 300, "offset": 10835}, "start": {"col": 13, "line": 300, "offset": 10828}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 20, "line": 312, "offset": 11239}}, {"check_id": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "end": {"col": 51, "line": 312, "offset": 11270}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "domain", "location": {"end": {"col": 19, "line": 303, "offset": 10930}, "path": "pygoat/introduction/views.py", "start": {"col": 13, "line": 303, "offset": 10924}}}, {"content": "command", "location": {"end": {"col": 24, "line": 310, "offset": 11192}, "path": "pygoat/introduction/views.py", "start": {"col": 17, "line": 310, "offset": 11185}}}], "taint_sink": ["CliLoc", [{"end": {"col": 51, "line": 312, "offset": 11270}, "path": "pygoat/introduction/views.py", "start": {"col": 44, "line": 312, "offset": 11263}}, "command"]], "taint_source": ["CliLoc", [{"end": {"col": 46, "line": 303, "offset": 10957}, "path": "pygoat/introduction/views.py", "start": {"col": 20, "line": 303, "offset": 10931}}, "request.POST.get('domain')"]]}, "engine_kind": "OSS", "fingerprint": "c256a7b6c3f38a0f13a262d35062d12bbe3d897a65f1ce53c99685191048cedc2ba2041332ec652f1ad4bd94daad93da915f43b5f2c0fc0ce2c8409f8c0762c2_0", "is_ignored": false, "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");", "message": "Detected subprocess function 'cmd_lab' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.", "metadata": {"asvs": {"control_id": "5.3.8 OS Command Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html", "https://docs.python.org/3/library/shlex.html", "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 27271, "rule_id": "JDUz3R", "rv_id": 834659, "url": "https://semgrep.dev/playground/r/0bTw3E0/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "version_id": "0bTw3E0"}}, "shortlink": "https://sg.run/NWxp", "source": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use", "subcategory": ["vuln"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$CMD": {"abstract_content": "command", "end": {"col": 51, "line": 312, "offset": 11270}, "start": {"col": 44, "line": 312, "offset": 11263}}, "$FUNC": {"abstract_content": "cmd_lab", "end": {"col": 12, "line": 300, "offset": 10827}, "start": {"col": 5, "line": 300, "offset": 10820}}, "$PROPERTY": {"abstract_content": "POST", "end": {"col": 32, "line": 303, "offset": 10943}, "start": {"col": 28, "line": 303, "offset": 10939}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 44, "line": 312, "offset": 11263}}, {"check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "end": {"col": 62, "line": 312, "offset": 11281}, "extra": {"engine_kind": "OSS", "fingerprint": "bf0f040d232903aac411830d135d2f954b697be5b7b2bf8c3e2257bf4c06de18f598b72213a9799db8e06fb26e55f2ea74e505a1cb6cae7b9d49cb9937e8d08b_0", "fix": "False", "is_ignored": false, "lines": "            output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\");", "message": "Found 'subprocess' function 'check_output' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9646, "rule_id": "DbUpz2", "rv_id": 834650, "url": "https://semgrep.dev/playground/r/PkTxGkR/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "version_id": "PkTxGkR"}}, "shortlink": "https://sg.run/J92w", "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html", "subcategory": ["secure default"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "check_output", "end": {"col": 43, "line": 312, "offset": 11262}, "start": {"col": 31, "line": 312, "offset": 11250}}, "$TRUE": {"abstract_content": "True", "end": {"col": 62, "line": 312, "offset": 11281}, "start": {"col": 58, "line": 312, "offset": 11277}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 58, "line": 312, "offset": 11277}}, {"check_id": "python.django.security.injection.raw-html-format.raw-html-format", "end": {"col": 79, "line": 363, "offset": 13187}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "email", "location": {"end": {"col": 14, "line": 361, "offset": 12989}, "path": "pygoat/introduction/views.py", "start": {"col": 9, "line": 361, "offset": 12984}}}], "taint_sink": ["CliLoc", [{"end": {"col": 79, "line": 363, "offset": 13187}, "path": "pygoat/introduction/views.py", "start": {"col": 33, "line": 363, "offset": 13141}}, "\"<h3>Login Success for email:::\"+email+\"</h3>\""]], "taint_source": ["CliLoc", [{"end": {"col": 30, "line": 361, "offset": 13005}, "path": "pygoat/introduction/views.py", "start": {"col": 15, "line": 361, "offset": 12990}}, "request.COOKIES"]]}, "engine_kind": "OSS", "fingerprint": "39b0e21f5a909ecc3ed04be024a46785aca9bf221ae459e00624044c4e2f9a4c8fba8f4b6f930be3d091569731b39052aa4940ad9f707495f6224816795425de_0", "is_ignored": false, "lines": "            return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")", "message": "Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure this is safe, check that the HTML is rendered safely. Otherwise, use templates (`django.shortcuts.render`) which will safely render HTML instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render", "https://docs.djangoproject.com/en/3.2/topics/security/#cross-site-scripting-xss-protection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14360, "rule_id": "2ZUPER", "rv_id": 834446, "url": "https://semgrep.dev/playground/r/3ZT3wYq/python.django.security.injection.raw-html-format.raw-html-format", "version_id": "3ZT3wYq"}}, "shortlink": "https://sg.run/oYj1", "source": "https://semgrep.dev/r/python.django.security.injection.raw-html-format.raw-html-format", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$ANYTHING": {"abstract_content": "COOKIES", "end": {"col": 30, "line": 361, "offset": 13005}, "start": {"col": 23, "line": 361, "offset": 12998}}, "$HTMLSTR": {"abstract_content": "<h3>Login Success for email:::", "end": {"col": 64, "line": 363, "offset": 13172}, "start": {"col": 34, "line": 363, "offset": 13142}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 33, "line": 363, "offset": 13141}}, {"check_id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "end": {"col": 43, "line": 407, "offset": 14667}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "file", "location": {"end": {"col": 21, "line": 405, "offset": 14580}, "path": "pygoat/introduction/views.py", "start": {"col": 17, "line": 405, "offset": 14576}}}], "taint_sink": ["CliLoc", [{"end": {"col": 43, "line": 407, "offset": 14667}, "path": "pygoat/introduction/views.py", "start": {"col": 28, "line": 407, "offset": 14652}}, "yaml.load(file)"]], "taint_source": ["CliLoc", [{"end": {"col": 43, "line": 405, "offset": 14602}, "path": "pygoat/introduction/views.py", "start": {"col": 22, "line": 405, "offset": 14581}}, "request.FILES[\"file\"]"]]}, "engine_kind": "OSS", "fingerprint": "951526e8ae8a100221e7f6da5eecb69358b21dabbe55d12c834586b184267626f698257c77f4fb881694be85b46763fd7731ae24be83f5c88b430156ee1f02e5_0", "is_ignored": false, "lines": "                    data = yaml.load(file)", "message": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9467, "rule_id": "OrU3e6", "rv_id": 834402, "url": "https://semgrep.dev/playground/r/3ZT3A9q/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "version_id": "3ZT3A9q"}}, "shortlink": "https://sg.run/9oyr", "source": "https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization", "subcategory": ["vuln"], "technology": ["django"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$INSIDE": {"abstract_content": "a9_lab", "end": {"col": 11, "line": 398, "offset": 14388}, "start": {"col": 5, "line": 398, "offset": 14382}}, "$PARAM": {"abstract_content": "request", "end": {"col": 19, "line": 398, "offset": 14396}, "start": {"col": 12, "line": 398, "offset": 14389}}, "$REQFUNC": {"abstract_content": "FILES", "end": {"col": 35, "line": 405, "offset": 14594}, "start": {"col": 30, "line": 405, "offset": 14589}}, "$YAMLFUNC": {"abstract_content": "load", "end": {"col": 37, "line": 407, "offset": 14661}, "start": {"col": 33, "line": 407, "offset": 14657}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "pygoat/introduction/views.py", "start": {"col": 28, "line": 407, "offset": 14652}}], "skipped_rules": [], "version": "1.95.0"}